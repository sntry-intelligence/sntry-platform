# -*- coding: utf-8 -*-
# code generated by Prisma. DO NOT EDIT.
# pyright: reportUnusedImport=false
# fmt: off

# global imports for type checking
from builtins import bool as _bool
from builtins import int as _int
from builtins import float as _float
from builtins import str as _str
import sys
import decimal
import datetime
from typing import (
    TYPE_CHECKING,
    Optional,
    Iterable,
    Iterator,
    Sequence,
    Callable,
    ClassVar,
    NoReturn,
    TypeVar,
    Generic,
    Mapping,
    Tuple,
    Union,
    List,
    Dict,
    Type,
    Any,
    Set,
    overload,
    cast,
)
from typing_extensions import TypedDict, Literal


LiteralString = str
# -- template types.py.jinja --
from typing import TypeVar

import httpx
from .utils import _NoneType



# TODO: filters with aggregates should have their own recursive fields
# TODO: cleanup whitespace control
# TODO: add an argument to signify that the last iteration should be skipped


SortMode = Literal['default', 'insensitive']
SortOrder = Literal['asc', 'desc']

MetricsFormat = Literal['json', 'prometheus']


class _DatasourceOverrideOptional(TypedDict, total=False):
    env: str
    name: str


class DatasourceOverride(_DatasourceOverrideOptional):
    url: str


# NOTE: we don't support some options as their type hints are not publicly exposed
# https://github.com/encode/httpx/discussions/1977
class HttpConfig(TypedDict, total=False):
    app: Callable[[Mapping[str, Any], Any], Any]
    http1: bool
    http2: bool
    limits: httpx.Limits
    timeout: Union[None, float, httpx.Timeout]
    trust_env: bool
    max_redirects: int


# types that can be serialized to json by our query builder
Serializable = Union[
    None,
    bool,
    float,
    int,
    str,
    datetime.datetime,
    List[Any],
    Dict[None, Any],
    Dict[bool, Any],
    Dict[float, Any],
    Dict[int, Any],
    Dict[str, Any],
]


    

StringFilter = TypedDict(
    'StringFilter',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive1'],
        'mode': SortMode,
    },
    total=False,
)


StringFilterRecursive1 = TypedDict(
    'StringFilterRecursive1',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive2'],
        'mode': SortMode,
    },
    total=False,
)


StringFilterRecursive2 = TypedDict(
    'StringFilterRecursive2',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive3'],
        'mode': SortMode,
    },
    total=False,
)


StringFilterRecursive3 = TypedDict(
    'StringFilterRecursive3',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive4'],
        'mode': SortMode,
    },
    total=False,
)


StringFilterRecursive4 = TypedDict(
    'StringFilterRecursive4',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
                'mode': SortMode,
    },
    total=False,
)


class StringWithAggregatesFilter(StringFilter, total=False):
    _max: 'StringFilter'
    _min: 'StringFilter'
    _sum: 'StringFilter'
    _avg: 'StringFilter'
    _count: 'IntFilter'


    

DateTimeFilter = TypedDict(
    'DateTimeFilter',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive1'],
    },
    total=False,
)


DateTimeFilterRecursive1 = TypedDict(
    'DateTimeFilterRecursive1',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive2'],
    },
    total=False,
)


DateTimeFilterRecursive2 = TypedDict(
    'DateTimeFilterRecursive2',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive3'],
    },
    total=False,
)


DateTimeFilterRecursive3 = TypedDict(
    'DateTimeFilterRecursive3',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive4'],
    },
    total=False,
)


DateTimeFilterRecursive4 = TypedDict(
    'DateTimeFilterRecursive4',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
            },
    total=False,
)


class DateTimeWithAggregatesFilter(DateTimeFilter, total=False):
    _max: 'DateTimeFilter'
    _min: 'DateTimeFilter'
    _sum: 'DateTimeFilter'
    _avg: 'DateTimeFilter'
    _count: 'IntFilter'


    

BooleanFilter = TypedDict(
    'BooleanFilter',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive1'],
    },
    total=False,
)


BooleanFilterRecursive1 = TypedDict(
    'BooleanFilterRecursive1',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive2'],
    },
    total=False,
)


BooleanFilterRecursive2 = TypedDict(
    'BooleanFilterRecursive2',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive3'],
    },
    total=False,
)


BooleanFilterRecursive3 = TypedDict(
    'BooleanFilterRecursive3',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive4'],
    },
    total=False,
)


BooleanFilterRecursive4 = TypedDict(
    'BooleanFilterRecursive4',
    {
        'equals': bool,
            },
    total=False,
)


class BooleanWithAggregatesFilter(BooleanFilter, total=False):
    _max: 'BooleanFilter'
    _min: 'BooleanFilter'
    _sum: 'BooleanFilter'
    _avg: 'BooleanFilter'
    _count: 'IntFilter'


    

IntFilter = TypedDict(
    'IntFilter',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive1'],
    },
    total=False,
)


IntFilterRecursive1 = TypedDict(
    'IntFilterRecursive1',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive2'],
    },
    total=False,
)


IntFilterRecursive2 = TypedDict(
    'IntFilterRecursive2',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive3'],
    },
    total=False,
)


IntFilterRecursive3 = TypedDict(
    'IntFilterRecursive3',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive4'],
    },
    total=False,
)


IntFilterRecursive4 = TypedDict(
    'IntFilterRecursive4',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
            },
    total=False,
)


class IntWithAggregatesFilter(IntFilter, total=False):
    _max: 'IntFilter'
    _min: 'IntFilter'
    _sum: 'IntFilter'
    _avg: 'IntFilter'
    _count: 'IntFilter'


BigIntFilter = IntFilter
BigIntWithAggregatesFilter = IntWithAggregatesFilter
    

FloatFilter = TypedDict(
    'FloatFilter',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive1'],
    },
    total=False,
)


FloatFilterRecursive1 = TypedDict(
    'FloatFilterRecursive1',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive2'],
    },
    total=False,
)


FloatFilterRecursive2 = TypedDict(
    'FloatFilterRecursive2',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive3'],
    },
    total=False,
)


FloatFilterRecursive3 = TypedDict(
    'FloatFilterRecursive3',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive4'],
    },
    total=False,
)


FloatFilterRecursive4 = TypedDict(
    'FloatFilterRecursive4',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
            },
    total=False,
)


class FloatWithAggregatesFilter(FloatFilter, total=False):
    _max: 'FloatFilter'
    _min: 'FloatFilter'
    _sum: 'FloatFilter'
    _avg: 'FloatFilter'
    _count: 'IntFilter'


    

BytesFilter = TypedDict(
    'BytesFilter',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive1'],
    },
    total=False,
)


BytesFilterRecursive1 = TypedDict(
    'BytesFilterRecursive1',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive2'],
    },
    total=False,
)


BytesFilterRecursive2 = TypedDict(
    'BytesFilterRecursive2',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive3'],
    },
    total=False,
)


BytesFilterRecursive3 = TypedDict(
    'BytesFilterRecursive3',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive4'],
    },
    total=False,
)


BytesFilterRecursive4 = TypedDict(
    'BytesFilterRecursive4',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
            },
    total=False,
)


class BytesWithAggregatesFilter(BytesFilter, total=False):
    _max: 'BytesFilter'
    _min: 'BytesFilter'
    _sum: 'BytesFilter'
    _avg: 'BytesFilter'
    _count: 'IntFilter'


# TODO: preview feature for improving JSON filtering
JsonFilter = TypedDict(
    'JsonFilter',
    {
        'equals': 'fields.Json',
        'not': 'fields.Json',
    },
    total=False,
)


class JsonWithAggregatesFilter(JsonFilter, total=False):
    _max: 'JsonFilter'
    _min: 'JsonFilter'
    _sum: 'JsonFilter'
    _avg: 'JsonFilter'
    _count: 'IntFilter'


    

DecimalFilter = TypedDict(
    'DecimalFilter',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive1'],
    },
    total=False,
)


DecimalFilterRecursive1 = TypedDict(
    'DecimalFilterRecursive1',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive2'],
    },
    total=False,
)


DecimalFilterRecursive2 = TypedDict(
    'DecimalFilterRecursive2',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive3'],
    },
    total=False,
)


DecimalFilterRecursive3 = TypedDict(
    'DecimalFilterRecursive3',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive4'],
    },
    total=False,
)


DecimalFilterRecursive4 = TypedDict(
    'DecimalFilterRecursive4',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
            },
    total=False,
)


class DecimalWithAggregatesFilter(StringFilter, total=False):
    _max: 'DecimalFilter'
    _min: 'DecimalFilter'
    _sum: 'DecimalFilter'
    _avg: 'DecimalFilter'
    _count: 'IntFilter'


class _FloatSetInput(TypedDict):
    set: float


class _FloatDivideInput(TypedDict):
    divide: float


class _FloatMultiplyInput(TypedDict):
    multiply: float


class _FloatIncrementInput(TypedDict):
    increment: float


class _FloatDecrementInput(TypedDict):
    decrement: float


class _IntSetInput(TypedDict):
    set: int


class _IntDivideInput(TypedDict):
    divide: int


class _IntMultiplyInput(TypedDict):
    multiply: int


class _IntIncrementInput(TypedDict):
    increment: int


class _IntDecrementInput(TypedDict):
    decrement: int


AtomicFloatInput = Union[
    _FloatSetInput,
    _FloatDivideInput,
    _FloatMultiplyInput,
    _FloatIncrementInput,
    _FloatDecrementInput,
]
AtomicIntInput = Union[
    _IntSetInput,
    _IntDivideInput,
    _IntMultiplyInput,
    _IntIncrementInput,
    _IntDecrementInput,
]
AtomicBigIntInput = AtomicIntInput

class _StringListFilterEqualsInput(TypedDict):
    equals: Optional[List[_str]]


class _StringListFilterHasInput(TypedDict):
    has: _str


class _StringListFilterHasEveryInput(TypedDict):
    has_every: List[_str]


class _StringListFilterHasSomeInput(TypedDict):
    has_some: List[_str]


class _StringListFilterIsEmptyInput(TypedDict):
    is_empty: bool


StringListFilter = Union[
    _StringListFilterHasInput,
    _StringListFilterEqualsInput,
    _StringListFilterHasSomeInput,
    _StringListFilterIsEmptyInput,
    _StringListFilterHasEveryInput,
]


class _StringListUpdateSet(TypedDict):
    set: List[_str]


class _StringListUpdatePush(TypedDict):
    push: List[_str]


StringListUpdate = Union[
    List[_str],
    _StringListUpdateSet,
    _StringListUpdatePush,
]

class _BytesListFilterEqualsInput(TypedDict):
    equals: Optional[List['fields.Base64']]


class _BytesListFilterHasInput(TypedDict):
    has: 'fields.Base64'


class _BytesListFilterHasEveryInput(TypedDict):
    has_every: List['fields.Base64']


class _BytesListFilterHasSomeInput(TypedDict):
    has_some: List['fields.Base64']


class _BytesListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BytesListFilter = Union[
    _BytesListFilterHasInput,
    _BytesListFilterEqualsInput,
    _BytesListFilterHasSomeInput,
    _BytesListFilterIsEmptyInput,
    _BytesListFilterHasEveryInput,
]


class _BytesListUpdateSet(TypedDict):
    set: List['fields.Base64']


class _BytesListUpdatePush(TypedDict):
    push: List['fields.Base64']


BytesListUpdate = Union[
    List['fields.Base64'],
    _BytesListUpdateSet,
    _BytesListUpdatePush,
]

class _DateTimeListFilterEqualsInput(TypedDict):
    equals: Optional[List[datetime.datetime]]


class _DateTimeListFilterHasInput(TypedDict):
    has: datetime.datetime


class _DateTimeListFilterHasEveryInput(TypedDict):
    has_every: List[datetime.datetime]


class _DateTimeListFilterHasSomeInput(TypedDict):
    has_some: List[datetime.datetime]


class _DateTimeListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DateTimeListFilter = Union[
    _DateTimeListFilterHasInput,
    _DateTimeListFilterEqualsInput,
    _DateTimeListFilterHasSomeInput,
    _DateTimeListFilterIsEmptyInput,
    _DateTimeListFilterHasEveryInput,
]


class _DateTimeListUpdateSet(TypedDict):
    set: List[datetime.datetime]


class _DateTimeListUpdatePush(TypedDict):
    push: List[datetime.datetime]


DateTimeListUpdate = Union[
    List[datetime.datetime],
    _DateTimeListUpdateSet,
    _DateTimeListUpdatePush,
]

class _BooleanListFilterEqualsInput(TypedDict):
    equals: Optional[List[_bool]]


class _BooleanListFilterHasInput(TypedDict):
    has: _bool


class _BooleanListFilterHasEveryInput(TypedDict):
    has_every: List[_bool]


class _BooleanListFilterHasSomeInput(TypedDict):
    has_some: List[_bool]


class _BooleanListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BooleanListFilter = Union[
    _BooleanListFilterHasInput,
    _BooleanListFilterEqualsInput,
    _BooleanListFilterHasSomeInput,
    _BooleanListFilterIsEmptyInput,
    _BooleanListFilterHasEveryInput,
]


class _BooleanListUpdateSet(TypedDict):
    set: List[_bool]


class _BooleanListUpdatePush(TypedDict):
    push: List[_bool]


BooleanListUpdate = Union[
    List[_bool],
    _BooleanListUpdateSet,
    _BooleanListUpdatePush,
]

class _IntListFilterEqualsInput(TypedDict):
    equals: Optional[List[_int]]


class _IntListFilterHasInput(TypedDict):
    has: _int


class _IntListFilterHasEveryInput(TypedDict):
    has_every: List[_int]


class _IntListFilterHasSomeInput(TypedDict):
    has_some: List[_int]


class _IntListFilterIsEmptyInput(TypedDict):
    is_empty: bool


IntListFilter = Union[
    _IntListFilterHasInput,
    _IntListFilterEqualsInput,
    _IntListFilterHasSomeInput,
    _IntListFilterIsEmptyInput,
    _IntListFilterHasEveryInput,
]


class _IntListUpdateSet(TypedDict):
    set: List[_int]


class _IntListUpdatePush(TypedDict):
    push: List[_int]


IntListUpdate = Union[
    List[_int],
    _IntListUpdateSet,
    _IntListUpdatePush,
]

class _BigIntListFilterEqualsInput(TypedDict):
    equals: Optional[List[_int]]


class _BigIntListFilterHasInput(TypedDict):
    has: _int


class _BigIntListFilterHasEveryInput(TypedDict):
    has_every: List[_int]


class _BigIntListFilterHasSomeInput(TypedDict):
    has_some: List[_int]


class _BigIntListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BigIntListFilter = Union[
    _BigIntListFilterHasInput,
    _BigIntListFilterEqualsInput,
    _BigIntListFilterHasSomeInput,
    _BigIntListFilterIsEmptyInput,
    _BigIntListFilterHasEveryInput,
]


class _BigIntListUpdateSet(TypedDict):
    set: List[_int]


class _BigIntListUpdatePush(TypedDict):
    push: List[_int]


BigIntListUpdate = Union[
    List[_int],
    _BigIntListUpdateSet,
    _BigIntListUpdatePush,
]

class _FloatListFilterEqualsInput(TypedDict):
    equals: Optional[List[_float]]


class _FloatListFilterHasInput(TypedDict):
    has: _float


class _FloatListFilterHasEveryInput(TypedDict):
    has_every: List[_float]


class _FloatListFilterHasSomeInput(TypedDict):
    has_some: List[_float]


class _FloatListFilterIsEmptyInput(TypedDict):
    is_empty: bool


FloatListFilter = Union[
    _FloatListFilterHasInput,
    _FloatListFilterEqualsInput,
    _FloatListFilterHasSomeInput,
    _FloatListFilterIsEmptyInput,
    _FloatListFilterHasEveryInput,
]


class _FloatListUpdateSet(TypedDict):
    set: List[_float]


class _FloatListUpdatePush(TypedDict):
    push: List[_float]


FloatListUpdate = Union[
    List[_float],
    _FloatListUpdateSet,
    _FloatListUpdatePush,
]

class _JsonListFilterEqualsInput(TypedDict):
    equals: Optional[List['fields.Json']]


class _JsonListFilterHasInput(TypedDict):
    has: 'fields.Json'


class _JsonListFilterHasEveryInput(TypedDict):
    has_every: List['fields.Json']


class _JsonListFilterHasSomeInput(TypedDict):
    has_some: List['fields.Json']


class _JsonListFilterIsEmptyInput(TypedDict):
    is_empty: bool


JsonListFilter = Union[
    _JsonListFilterHasInput,
    _JsonListFilterEqualsInput,
    _JsonListFilterHasSomeInput,
    _JsonListFilterIsEmptyInput,
    _JsonListFilterHasEveryInput,
]


class _JsonListUpdateSet(TypedDict):
    set: List['fields.Json']


class _JsonListUpdatePush(TypedDict):
    push: List['fields.Json']


JsonListUpdate = Union[
    List['fields.Json'],
    _JsonListUpdateSet,
    _JsonListUpdatePush,
]

class _DecimalListFilterEqualsInput(TypedDict):
    equals: Optional[List[decimal.Decimal]]


class _DecimalListFilterHasInput(TypedDict):
    has: decimal.Decimal


class _DecimalListFilterHasEveryInput(TypedDict):
    has_every: List[decimal.Decimal]


class _DecimalListFilterHasSomeInput(TypedDict):
    has_some: List[decimal.Decimal]


class _DecimalListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DecimalListFilter = Union[
    _DecimalListFilterHasInput,
    _DecimalListFilterEqualsInput,
    _DecimalListFilterHasSomeInput,
    _DecimalListFilterIsEmptyInput,
    _DecimalListFilterHasEveryInput,
]


class _DecimalListUpdateSet(TypedDict):
    set: List[decimal.Decimal]


class _DecimalListUpdatePush(TypedDict):
    push: List[decimal.Decimal]


DecimalListUpdate = Union[
    List[decimal.Decimal],
    _DecimalListUpdateSet,
    _DecimalListUpdatePush,
]

class _AgentStatusListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.AgentStatus']]


class _AgentStatusListFilterHasInput(TypedDict):
    has: 'enums.AgentStatus'


class _AgentStatusListFilterHasEveryInput(TypedDict):
    has_every: List['enums.AgentStatus']


class _AgentStatusListFilterHasSomeInput(TypedDict):
    has_some: List['enums.AgentStatus']


class _AgentStatusListFilterIsEmptyInput(TypedDict):
    is_empty: bool


AgentStatusListFilter = Union[
    _AgentStatusListFilterHasInput,
    _AgentStatusListFilterEqualsInput,
    _AgentStatusListFilterHasSomeInput,
    _AgentStatusListFilterIsEmptyInput,
    _AgentStatusListFilterHasEveryInput,
]


class _AgentStatusListUpdateSet(TypedDict):
    set: List['enums.AgentStatus']


class _AgentStatusListUpdatePush(TypedDict):
    push: List['enums.AgentStatus']


AgentStatusListUpdate = Union[
    List['enums.AgentStatus'],
    _AgentStatusListUpdateSet,
    _AgentStatusListUpdatePush,
]

class _WorkflowTypeListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.WorkflowType']]


class _WorkflowTypeListFilterHasInput(TypedDict):
    has: 'enums.WorkflowType'


class _WorkflowTypeListFilterHasEveryInput(TypedDict):
    has_every: List['enums.WorkflowType']


class _WorkflowTypeListFilterHasSomeInput(TypedDict):
    has_some: List['enums.WorkflowType']


class _WorkflowTypeListFilterIsEmptyInput(TypedDict):
    is_empty: bool


WorkflowTypeListFilter = Union[
    _WorkflowTypeListFilterHasInput,
    _WorkflowTypeListFilterEqualsInput,
    _WorkflowTypeListFilterHasSomeInput,
    _WorkflowTypeListFilterIsEmptyInput,
    _WorkflowTypeListFilterHasEveryInput,
]


class _WorkflowTypeListUpdateSet(TypedDict):
    set: List['enums.WorkflowType']


class _WorkflowTypeListUpdatePush(TypedDict):
    push: List['enums.WorkflowType']


WorkflowTypeListUpdate = Union[
    List['enums.WorkflowType'],
    _WorkflowTypeListUpdateSet,
    _WorkflowTypeListUpdatePush,
]

class _WorkflowStatusListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.WorkflowStatus']]


class _WorkflowStatusListFilterHasInput(TypedDict):
    has: 'enums.WorkflowStatus'


class _WorkflowStatusListFilterHasEveryInput(TypedDict):
    has_every: List['enums.WorkflowStatus']


class _WorkflowStatusListFilterHasSomeInput(TypedDict):
    has_some: List['enums.WorkflowStatus']


class _WorkflowStatusListFilterIsEmptyInput(TypedDict):
    is_empty: bool


WorkflowStatusListFilter = Union[
    _WorkflowStatusListFilterHasInput,
    _WorkflowStatusListFilterEqualsInput,
    _WorkflowStatusListFilterHasSomeInput,
    _WorkflowStatusListFilterIsEmptyInput,
    _WorkflowStatusListFilterHasEveryInput,
]


class _WorkflowStatusListUpdateSet(TypedDict):
    set: List['enums.WorkflowStatus']


class _WorkflowStatusListUpdatePush(TypedDict):
    push: List['enums.WorkflowStatus']


WorkflowStatusListUpdate = Union[
    List['enums.WorkflowStatus'],
    _WorkflowStatusListUpdateSet,
    _WorkflowStatusListUpdatePush,
]

class _ExecutionStatusListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.ExecutionStatus']]


class _ExecutionStatusListFilterHasInput(TypedDict):
    has: 'enums.ExecutionStatus'


class _ExecutionStatusListFilterHasEveryInput(TypedDict):
    has_every: List['enums.ExecutionStatus']


class _ExecutionStatusListFilterHasSomeInput(TypedDict):
    has_some: List['enums.ExecutionStatus']


class _ExecutionStatusListFilterIsEmptyInput(TypedDict):
    is_empty: bool


ExecutionStatusListFilter = Union[
    _ExecutionStatusListFilterHasInput,
    _ExecutionStatusListFilterEqualsInput,
    _ExecutionStatusListFilterHasSomeInput,
    _ExecutionStatusListFilterIsEmptyInput,
    _ExecutionStatusListFilterHasEveryInput,
]


class _ExecutionStatusListUpdateSet(TypedDict):
    set: List['enums.ExecutionStatus']


class _ExecutionStatusListUpdatePush(TypedDict):
    push: List['enums.ExecutionStatus']


ExecutionStatusListUpdate = Union[
    List['enums.ExecutionStatus'],
    _ExecutionStatusListUpdateSet,
    _ExecutionStatusListUpdatePush,
]

class _ToolStatusListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.ToolStatus']]


class _ToolStatusListFilterHasInput(TypedDict):
    has: 'enums.ToolStatus'


class _ToolStatusListFilterHasEveryInput(TypedDict):
    has_every: List['enums.ToolStatus']


class _ToolStatusListFilterHasSomeInput(TypedDict):
    has_some: List['enums.ToolStatus']


class _ToolStatusListFilterIsEmptyInput(TypedDict):
    is_empty: bool


ToolStatusListFilter = Union[
    _ToolStatusListFilterHasInput,
    _ToolStatusListFilterEqualsInput,
    _ToolStatusListFilterHasSomeInput,
    _ToolStatusListFilterIsEmptyInput,
    _ToolStatusListFilterHasEveryInput,
]


class _ToolStatusListUpdateSet(TypedDict):
    set: List['enums.ToolStatus']


class _ToolStatusListUpdatePush(TypedDict):
    push: List['enums.ToolStatus']


ToolStatusListUpdate = Union[
    List['enums.ToolStatus'],
    _ToolStatusListUpdateSet,
    _ToolStatusListUpdatePush,
]

class _SessionStatusListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.SessionStatus']]


class _SessionStatusListFilterHasInput(TypedDict):
    has: 'enums.SessionStatus'


class _SessionStatusListFilterHasEveryInput(TypedDict):
    has_every: List['enums.SessionStatus']


class _SessionStatusListFilterHasSomeInput(TypedDict):
    has_some: List['enums.SessionStatus']


class _SessionStatusListFilterIsEmptyInput(TypedDict):
    is_empty: bool


SessionStatusListFilter = Union[
    _SessionStatusListFilterHasInput,
    _SessionStatusListFilterEqualsInput,
    _SessionStatusListFilterHasSomeInput,
    _SessionStatusListFilterIsEmptyInput,
    _SessionStatusListFilterHasEveryInput,
]


class _SessionStatusListUpdateSet(TypedDict):
    set: List['enums.SessionStatus']


class _SessionStatusListUpdatePush(TypedDict):
    push: List['enums.SessionStatus']


SessionStatusListUpdate = Union[
    List['enums.SessionStatus'],
    _SessionStatusListUpdateSet,
    _SessionStatusListUpdatePush,
]

class _MessageRoleListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.MessageRole']]


class _MessageRoleListFilterHasInput(TypedDict):
    has: 'enums.MessageRole'


class _MessageRoleListFilterHasEveryInput(TypedDict):
    has_every: List['enums.MessageRole']


class _MessageRoleListFilterHasSomeInput(TypedDict):
    has_some: List['enums.MessageRole']


class _MessageRoleListFilterIsEmptyInput(TypedDict):
    is_empty: bool


MessageRoleListFilter = Union[
    _MessageRoleListFilterHasInput,
    _MessageRoleListFilterEqualsInput,
    _MessageRoleListFilterHasSomeInput,
    _MessageRoleListFilterIsEmptyInput,
    _MessageRoleListFilterHasEveryInput,
]


class _MessageRoleListUpdateSet(TypedDict):
    set: List['enums.MessageRole']


class _MessageRoleListUpdatePush(TypedDict):
    push: List['enums.MessageRole']


MessageRoleListUpdate = Union[
    List['enums.MessageRole'],
    _MessageRoleListUpdateSet,
    _MessageRoleListUpdatePush,
]

class _VectorStoreTypeListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.VectorStoreType']]


class _VectorStoreTypeListFilterHasInput(TypedDict):
    has: 'enums.VectorStoreType'


class _VectorStoreTypeListFilterHasEveryInput(TypedDict):
    has_every: List['enums.VectorStoreType']


class _VectorStoreTypeListFilterHasSomeInput(TypedDict):
    has_some: List['enums.VectorStoreType']


class _VectorStoreTypeListFilterIsEmptyInput(TypedDict):
    is_empty: bool


VectorStoreTypeListFilter = Union[
    _VectorStoreTypeListFilterHasInput,
    _VectorStoreTypeListFilterEqualsInput,
    _VectorStoreTypeListFilterHasSomeInput,
    _VectorStoreTypeListFilterIsEmptyInput,
    _VectorStoreTypeListFilterHasEveryInput,
]


class _VectorStoreTypeListUpdateSet(TypedDict):
    set: List['enums.VectorStoreType']


class _VectorStoreTypeListUpdatePush(TypedDict):
    push: List['enums.VectorStoreType']


VectorStoreTypeListUpdate = Union[
    List['enums.VectorStoreType'],
    _VectorStoreTypeListUpdateSet,
    _VectorStoreTypeListUpdatePush,
]

class _VectorStoreStatusListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.VectorStoreStatus']]


class _VectorStoreStatusListFilterHasInput(TypedDict):
    has: 'enums.VectorStoreStatus'


class _VectorStoreStatusListFilterHasEveryInput(TypedDict):
    has_every: List['enums.VectorStoreStatus']


class _VectorStoreStatusListFilterHasSomeInput(TypedDict):
    has_some: List['enums.VectorStoreStatus']


class _VectorStoreStatusListFilterIsEmptyInput(TypedDict):
    is_empty: bool


VectorStoreStatusListFilter = Union[
    _VectorStoreStatusListFilterHasInput,
    _VectorStoreStatusListFilterEqualsInput,
    _VectorStoreStatusListFilterHasSomeInput,
    _VectorStoreStatusListFilterIsEmptyInput,
    _VectorStoreStatusListFilterHasEveryInput,
]


class _VectorStoreStatusListUpdateSet(TypedDict):
    set: List['enums.VectorStoreStatus']


class _VectorStoreStatusListUpdatePush(TypedDict):
    push: List['enums.VectorStoreStatus']


VectorStoreStatusListUpdate = Union[
    List['enums.VectorStoreStatus'],
    _VectorStoreStatusListUpdateSet,
    _VectorStoreStatusListUpdatePush,
]

class _MCPServerStatusListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.MCPServerStatus']]


class _MCPServerStatusListFilterHasInput(TypedDict):
    has: 'enums.MCPServerStatus'


class _MCPServerStatusListFilterHasEveryInput(TypedDict):
    has_every: List['enums.MCPServerStatus']


class _MCPServerStatusListFilterHasSomeInput(TypedDict):
    has_some: List['enums.MCPServerStatus']


class _MCPServerStatusListFilterIsEmptyInput(TypedDict):
    is_empty: bool


MCPServerStatusListFilter = Union[
    _MCPServerStatusListFilterHasInput,
    _MCPServerStatusListFilterEqualsInput,
    _MCPServerStatusListFilterHasSomeInput,
    _MCPServerStatusListFilterIsEmptyInput,
    _MCPServerStatusListFilterHasEveryInput,
]


class _MCPServerStatusListUpdateSet(TypedDict):
    set: List['enums.MCPServerStatus']


class _MCPServerStatusListUpdatePush(TypedDict):
    push: List['enums.MCPServerStatus']


MCPServerStatusListUpdate = Union[
    List['enums.MCPServerStatus'],
    _MCPServerStatusListUpdateSet,
    _MCPServerStatusListUpdatePush,
]

class _EvaluationStatusListFilterEqualsInput(TypedDict):
    equals: Optional[List['enums.EvaluationStatus']]


class _EvaluationStatusListFilterHasInput(TypedDict):
    has: 'enums.EvaluationStatus'


class _EvaluationStatusListFilterHasEveryInput(TypedDict):
    has_every: List['enums.EvaluationStatus']


class _EvaluationStatusListFilterHasSomeInput(TypedDict):
    has_some: List['enums.EvaluationStatus']


class _EvaluationStatusListFilterIsEmptyInput(TypedDict):
    is_empty: bool


EvaluationStatusListFilter = Union[
    _EvaluationStatusListFilterHasInput,
    _EvaluationStatusListFilterEqualsInput,
    _EvaluationStatusListFilterHasSomeInput,
    _EvaluationStatusListFilterIsEmptyInput,
    _EvaluationStatusListFilterHasEveryInput,
]


class _EvaluationStatusListUpdateSet(TypedDict):
    set: List['enums.EvaluationStatus']


class _EvaluationStatusListUpdatePush(TypedDict):
    push: List['enums.EvaluationStatus']


EvaluationStatusListUpdate = Union[
    List['enums.EvaluationStatus'],
    _EvaluationStatusListUpdateSet,
    _EvaluationStatusListUpdatePush,
]


# Agent types

class AgentOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Agent create method"""
    id: _str
    description: Optional[_str]
    status: 'enums.AgentStatus'
    deploymentInfo: Optional['fields.Json']
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    workflows: 'WorkflowCreateManyNestedWithoutRelationsInput'
    tools: 'ToolCreateManyNestedWithoutRelationsInput'
    conversations: 'ConversationSessionCreateManyNestedWithoutRelationsInput'
    evaluations: 'EvaluationCreateManyNestedWithoutRelationsInput'


class AgentCreateInput(AgentOptionalCreateInput):
    """Required arguments to the Agent create method"""
    name: _str
    modelId: _str
    role: _str
    orchestrationType: _str
    configuration: 'fields.Json'


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class AgentOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Agent create method, without relations"""
    id: _str
    description: Optional[_str]
    status: 'enums.AgentStatus'
    deploymentInfo: Optional['fields.Json']
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class AgentCreateWithoutRelationsInput(AgentOptionalCreateWithoutRelationsInput):
    """Required arguments to the Agent create method, without relations"""
    name: _str
    modelId: _str
    role: _str
    orchestrationType: _str
    configuration: 'fields.Json'


class AgentCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'AgentCreateWithoutRelationsInput'
    connect: 'AgentWhereUniqueInput'


class AgentCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['AgentCreateWithoutRelationsInput', List['AgentCreateWithoutRelationsInput']]
    connect: Union['AgentWhereUniqueInput', List['AgentWhereUniqueInput']]


_AgentWhereUnique_id_Input = TypedDict(
    '_AgentWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

AgentWhereUniqueInput = _AgentWhereUnique_id_Input


class AgentUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    name: _str
    description: Optional[_str]
    modelId: _str
    role: _str
    orchestrationType: _str
    status: 'enums.AgentStatus'
    configuration: 'fields.Json'
    deploymentInfo: Optional['fields.Json']
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    workflows: 'WorkflowUpdateManyWithoutRelationsInput'
    tools: 'ToolUpdateManyWithoutRelationsInput'
    conversations: 'ConversationSessionUpdateManyWithoutRelationsInput'
    evaluations: 'EvaluationUpdateManyWithoutRelationsInput'


class AgentUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    name: _str
    description: Optional[_str]
    modelId: _str
    role: _str
    orchestrationType: _str
    status: 'enums.AgentStatus'
    configuration: 'fields.Json'
    deploymentInfo: Optional['fields.Json']
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class AgentUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['AgentCreateWithoutRelationsInput']
    connect: List['AgentWhereUniqueInput']
    set: List['AgentWhereUniqueInput']
    disconnect: List['AgentWhereUniqueInput']
    delete: List['AgentWhereUniqueInput']

    # TODO
    # update: List['AgentUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['AgentUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['AgentScalarWhereInput']
    # upsert: List['AgentUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['AgentCreateOrConnectWithoutRelationsInput']


class AgentUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'AgentCreateWithoutRelationsInput'
    connect: 'AgentWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'AgentUpdateInput'
    # upsert: 'AgentUpsertWithoutRelationsInput'
    # connectOrCreate: 'AgentCreateOrConnectWithoutRelationsInput'


class AgentUpsertInput(TypedDict):
    create: 'AgentCreateInput'
    update: 'AgentUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Agent_id_OrderByInput = TypedDict(
    '_Agent_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Agent_name_OrderByInput = TypedDict(
    '_Agent_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_Agent_description_OrderByInput = TypedDict(
    '_Agent_description_OrderByInput',
    {
        'description': 'SortOrder',
    },
    total=True
)

_Agent_modelId_OrderByInput = TypedDict(
    '_Agent_modelId_OrderByInput',
    {
        'modelId': 'SortOrder',
    },
    total=True
)

_Agent_role_OrderByInput = TypedDict(
    '_Agent_role_OrderByInput',
    {
        'role': 'SortOrder',
    },
    total=True
)

_Agent_orchestrationType_OrderByInput = TypedDict(
    '_Agent_orchestrationType_OrderByInput',
    {
        'orchestrationType': 'SortOrder',
    },
    total=True
)

_Agent_status_OrderByInput = TypedDict(
    '_Agent_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_Agent_configuration_OrderByInput = TypedDict(
    '_Agent_configuration_OrderByInput',
    {
        'configuration': 'SortOrder',
    },
    total=True
)

_Agent_deploymentInfo_OrderByInput = TypedDict(
    '_Agent_deploymentInfo_OrderByInput',
    {
        'deploymentInfo': 'SortOrder',
    },
    total=True
)

_Agent_metadata_OrderByInput = TypedDict(
    '_Agent_metadata_OrderByInput',
    {
        'metadata': 'SortOrder',
    },
    total=True
)

_Agent_createdAt_OrderByInput = TypedDict(
    '_Agent_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Agent_updatedAt_OrderByInput = TypedDict(
    '_Agent_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

AgentOrderByInput = Union[
    '_Agent_id_OrderByInput',
    '_Agent_name_OrderByInput',
    '_Agent_description_OrderByInput',
    '_Agent_modelId_OrderByInput',
    '_Agent_role_OrderByInput',
    '_Agent_orchestrationType_OrderByInput',
    '_Agent_status_OrderByInput',
    '_Agent_configuration_OrderByInput',
    '_Agent_deploymentInfo_OrderByInput',
    '_Agent_metadata_OrderByInput',
    '_Agent_createdAt_OrderByInput',
    '_Agent_updatedAt_OrderByInput',
]



# recursive Agent types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

AgentRelationFilter = TypedDict(
    'AgentRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class AgentListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class AgentInclude(TypedDict, total=False):
    """Agent relational arguments"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromAgent']
    tools: Union[bool, 'FindManyToolArgsFromAgent']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromAgent']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromAgent']


    

class AgentIncludeFromAgent(TypedDict, total=False):
    """Relational arguments for Agent"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromAgentRecursive1']
    tools: Union[bool, 'FindManyToolArgsFromAgentRecursive1']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromAgentRecursive1']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromAgentRecursive1']


class AgentIncludeFromAgentRecursive1(TypedDict, total=False):
    """Relational arguments for Agent"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromAgentRecursive2']
    tools: Union[bool, 'FindManyToolArgsFromAgentRecursive2']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromAgentRecursive2']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromAgentRecursive2']


class AgentIncludeFromAgentRecursive2(TypedDict, total=False):
    """Relational arguments for Agent"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromAgentRecursive3']
    tools: Union[bool, 'FindManyToolArgsFromAgentRecursive3']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromAgentRecursive3']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromAgentRecursive3']


class AgentIncludeFromAgentRecursive3(TypedDict, total=False):
    """Relational arguments for Agent"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromAgentRecursive4']
    tools: Union[bool, 'FindManyToolArgsFromAgentRecursive4']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromAgentRecursive4']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromAgentRecursive4']


class AgentIncludeFromAgentRecursive4(TypedDict, total=False):
    """Relational arguments for Agent"""

    

class AgentArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'AgentIncludeFromAgentRecursive1'


class AgentArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'AgentIncludeFromAgentRecursive2'


class AgentArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'AgentIncludeFromAgentRecursive3'


class AgentArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'AgentIncludeFromAgentRecursive4'


class AgentArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    
    

class FindManyAgentArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive1'


class FindManyAgentArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive2'


class FindManyAgentArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive3'


class FindManyAgentArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive4'


class FindManyAgentArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    
    

class WorkflowIncludeFromAgent(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive1']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromAgentRecursive1']


class WorkflowIncludeFromAgentRecursive1(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive2']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromAgentRecursive2']


class WorkflowIncludeFromAgentRecursive2(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive3']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromAgentRecursive3']


class WorkflowIncludeFromAgentRecursive3(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive4']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromAgentRecursive4']


class WorkflowIncludeFromAgentRecursive4(TypedDict, total=False):
    """Relational arguments for Agent"""

    

class WorkflowArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class WorkflowArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class WorkflowArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class WorkflowArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class WorkflowArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    
    

class FindManyWorkflowArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class FindManyWorkflowArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class FindManyWorkflowArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class FindManyWorkflowArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class FindManyWorkflowArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    
    

class WorkflowExecutionIncludeFromAgent(TypedDict, total=False):
    """Relational arguments for Agent"""
    workflow: Union[bool, 'WorkflowArgsFromAgentRecursive1']


class WorkflowExecutionIncludeFromAgentRecursive1(TypedDict, total=False):
    """Relational arguments for Agent"""
    workflow: Union[bool, 'WorkflowArgsFromAgentRecursive2']


class WorkflowExecutionIncludeFromAgentRecursive2(TypedDict, total=False):
    """Relational arguments for Agent"""
    workflow: Union[bool, 'WorkflowArgsFromAgentRecursive3']


class WorkflowExecutionIncludeFromAgentRecursive3(TypedDict, total=False):
    """Relational arguments for Agent"""
    workflow: Union[bool, 'WorkflowArgsFromAgentRecursive4']


class WorkflowExecutionIncludeFromAgentRecursive4(TypedDict, total=False):
    """Relational arguments for Agent"""

    

class WorkflowExecutionArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class WorkflowExecutionArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class WorkflowExecutionArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class WorkflowExecutionArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class WorkflowExecutionArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    
    

class FindManyWorkflowExecutionArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class FindManyWorkflowExecutionArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class FindManyWorkflowExecutionArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class FindManyWorkflowExecutionArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class FindManyWorkflowExecutionArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    
    

class ToolIncludeFromAgent(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive1']
    mcpServer: Union[bool, 'MCPServerArgsFromAgentRecursive1']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromAgentRecursive1']


class ToolIncludeFromAgentRecursive1(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive2']
    mcpServer: Union[bool, 'MCPServerArgsFromAgentRecursive2']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromAgentRecursive2']


class ToolIncludeFromAgentRecursive2(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive3']
    mcpServer: Union[bool, 'MCPServerArgsFromAgentRecursive3']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromAgentRecursive3']


class ToolIncludeFromAgentRecursive3(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive4']
    mcpServer: Union[bool, 'MCPServerArgsFromAgentRecursive4']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromAgentRecursive4']


class ToolIncludeFromAgentRecursive4(TypedDict, total=False):
    """Relational arguments for Agent"""

    

class ToolArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'ToolIncludeFromToolRecursive1'


class ToolArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'ToolIncludeFromToolRecursive2'


class ToolArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'ToolIncludeFromToolRecursive3'


class ToolArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'ToolIncludeFromToolRecursive4'


class ToolArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    
    

class FindManyToolArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive1'


class FindManyToolArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive2'


class FindManyToolArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive3'


class FindManyToolArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive4'


class FindManyToolArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    
    

class ToolInvocationIncludeFromAgent(TypedDict, total=False):
    """Relational arguments for Agent"""
    tool: Union[bool, 'ToolArgsFromAgentRecursive1']


class ToolInvocationIncludeFromAgentRecursive1(TypedDict, total=False):
    """Relational arguments for Agent"""
    tool: Union[bool, 'ToolArgsFromAgentRecursive2']


class ToolInvocationIncludeFromAgentRecursive2(TypedDict, total=False):
    """Relational arguments for Agent"""
    tool: Union[bool, 'ToolArgsFromAgentRecursive3']


class ToolInvocationIncludeFromAgentRecursive3(TypedDict, total=False):
    """Relational arguments for Agent"""
    tool: Union[bool, 'ToolArgsFromAgentRecursive4']


class ToolInvocationIncludeFromAgentRecursive4(TypedDict, total=False):
    """Relational arguments for Agent"""

    

class ToolInvocationArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class ToolInvocationArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class ToolInvocationArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class ToolInvocationArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class ToolInvocationArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    
    

class FindManyToolInvocationArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class FindManyToolInvocationArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class FindManyToolInvocationArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class FindManyToolInvocationArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class FindManyToolInvocationArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    
    

class ConversationSessionIncludeFromAgent(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromAgentRecursive1']


class ConversationSessionIncludeFromAgentRecursive1(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromAgentRecursive2']


class ConversationSessionIncludeFromAgentRecursive2(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromAgentRecursive3']


class ConversationSessionIncludeFromAgentRecursive3(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromAgentRecursive4']


class ConversationSessionIncludeFromAgentRecursive4(TypedDict, total=False):
    """Relational arguments for Agent"""

    

class ConversationSessionArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class ConversationSessionArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class ConversationSessionArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class ConversationSessionArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class ConversationSessionArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    
    

class FindManyConversationSessionArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class FindManyConversationSessionArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class FindManyConversationSessionArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class FindManyConversationSessionArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class FindManyConversationSessionArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    
    

class MessageIncludeFromAgent(TypedDict, total=False):
    """Relational arguments for Agent"""
    session: Union[bool, 'ConversationSessionArgsFromAgentRecursive1']


class MessageIncludeFromAgentRecursive1(TypedDict, total=False):
    """Relational arguments for Agent"""
    session: Union[bool, 'ConversationSessionArgsFromAgentRecursive2']


class MessageIncludeFromAgentRecursive2(TypedDict, total=False):
    """Relational arguments for Agent"""
    session: Union[bool, 'ConversationSessionArgsFromAgentRecursive3']


class MessageIncludeFromAgentRecursive3(TypedDict, total=False):
    """Relational arguments for Agent"""
    session: Union[bool, 'ConversationSessionArgsFromAgentRecursive4']


class MessageIncludeFromAgentRecursive4(TypedDict, total=False):
    """Relational arguments for Agent"""

    

class MessageArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    
    

class FindManyMessageArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class VectorStoreIncludeFromAgent(TypedDict, total=False):
    """Relational arguments for Agent"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromAgentRecursive1']


class VectorStoreIncludeFromAgentRecursive1(TypedDict, total=False):
    """Relational arguments for Agent"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromAgentRecursive2']


class VectorStoreIncludeFromAgentRecursive2(TypedDict, total=False):
    """Relational arguments for Agent"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromAgentRecursive3']


class VectorStoreIncludeFromAgentRecursive3(TypedDict, total=False):
    """Relational arguments for Agent"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromAgentRecursive4']


class VectorStoreIncludeFromAgentRecursive4(TypedDict, total=False):
    """Relational arguments for Agent"""

    

class VectorStoreArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class VectorStoreArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class VectorStoreArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class VectorStoreArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class VectorStoreArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    
    

class FindManyVectorStoreArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class FindManyVectorStoreArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class FindManyVectorStoreArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class FindManyVectorStoreArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class FindManyVectorStoreArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    
    

class EmbeddingIncludeFromAgent(TypedDict, total=False):
    """Relational arguments for Agent"""
    vectorStore: Union[bool, 'VectorStoreArgsFromAgentRecursive1']


class EmbeddingIncludeFromAgentRecursive1(TypedDict, total=False):
    """Relational arguments for Agent"""
    vectorStore: Union[bool, 'VectorStoreArgsFromAgentRecursive2']


class EmbeddingIncludeFromAgentRecursive2(TypedDict, total=False):
    """Relational arguments for Agent"""
    vectorStore: Union[bool, 'VectorStoreArgsFromAgentRecursive3']


class EmbeddingIncludeFromAgentRecursive3(TypedDict, total=False):
    """Relational arguments for Agent"""
    vectorStore: Union[bool, 'VectorStoreArgsFromAgentRecursive4']


class EmbeddingIncludeFromAgentRecursive4(TypedDict, total=False):
    """Relational arguments for Agent"""

    

class EmbeddingArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class EmbeddingArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class EmbeddingArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class EmbeddingArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class EmbeddingArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    
    

class FindManyEmbeddingArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class FindManyEmbeddingArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class FindManyEmbeddingArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class FindManyEmbeddingArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class FindManyEmbeddingArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    
    

class MCPServerIncludeFromAgent(TypedDict, total=False):
    """Relational arguments for Agent"""
    tools: Union[bool, 'FindManyToolArgsFromAgentRecursive1']


class MCPServerIncludeFromAgentRecursive1(TypedDict, total=False):
    """Relational arguments for Agent"""
    tools: Union[bool, 'FindManyToolArgsFromAgentRecursive2']


class MCPServerIncludeFromAgentRecursive2(TypedDict, total=False):
    """Relational arguments for Agent"""
    tools: Union[bool, 'FindManyToolArgsFromAgentRecursive3']


class MCPServerIncludeFromAgentRecursive3(TypedDict, total=False):
    """Relational arguments for Agent"""
    tools: Union[bool, 'FindManyToolArgsFromAgentRecursive4']


class MCPServerIncludeFromAgentRecursive4(TypedDict, total=False):
    """Relational arguments for Agent"""

    

class MCPServerArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class MCPServerArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class MCPServerArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class MCPServerArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class MCPServerArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    
    

class FindManyMCPServerArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class FindManyMCPServerArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class FindManyMCPServerArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class FindManyMCPServerArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class FindManyMCPServerArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    
    

class EvaluationIncludeFromAgent(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive1']


class EvaluationIncludeFromAgentRecursive1(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive2']


class EvaluationIncludeFromAgentRecursive2(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive3']


class EvaluationIncludeFromAgentRecursive3(TypedDict, total=False):
    """Relational arguments for Agent"""
    agent: Union[bool, 'AgentArgsFromAgentRecursive4']


class EvaluationIncludeFromAgentRecursive4(TypedDict, total=False):
    """Relational arguments for Agent"""

    

class EvaluationArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class EvaluationArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class EvaluationArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class EvaluationArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class EvaluationArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    
    

class FindManyEvaluationArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class FindManyEvaluationArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class FindManyEvaluationArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class FindManyEvaluationArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class FindManyEvaluationArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    
    

class UserIncludeFromAgent(TypedDict, total=False):
    """Relational arguments for Agent"""


class UserIncludeFromAgentRecursive1(TypedDict, total=False):
    """Relational arguments for Agent"""


class UserIncludeFromAgentRecursive2(TypedDict, total=False):
    """Relational arguments for Agent"""


class UserIncludeFromAgentRecursive3(TypedDict, total=False):
    """Relational arguments for Agent"""


class UserIncludeFromAgentRecursive4(TypedDict, total=False):
    """Relational arguments for Agent"""

    

class UserArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    
    

class FindManyUserArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class SystemConfigIncludeFromAgent(TypedDict, total=False):
    """Relational arguments for Agent"""


class SystemConfigIncludeFromAgentRecursive1(TypedDict, total=False):
    """Relational arguments for Agent"""


class SystemConfigIncludeFromAgentRecursive2(TypedDict, total=False):
    """Relational arguments for Agent"""


class SystemConfigIncludeFromAgentRecursive3(TypedDict, total=False):
    """Relational arguments for Agent"""


class SystemConfigIncludeFromAgentRecursive4(TypedDict, total=False):
    """Relational arguments for Agent"""

    

class SystemConfigArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class SystemConfigArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class SystemConfigArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class SystemConfigArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class SystemConfigArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    
    

class FindManySystemConfigArgsFromAgent(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class FindManySystemConfigArgsFromAgentRecursive1(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class FindManySystemConfigArgsFromAgentRecursive2(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class FindManySystemConfigArgsFromAgentRecursive3(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class FindManySystemConfigArgsFromAgentRecursive4(TypedDict, total=False):
    """Arguments for Agent"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    


FindManyAgentArgs = FindManyAgentArgsFromAgent
FindFirstAgentArgs = FindManyAgentArgsFromAgent


    

class AgentWhereInput(TypedDict, total=False):
    """Agent arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    modelId: Union[_str, 'types.StringFilter']
    role: Union[_str, 'types.StringFilter']
    orchestrationType: Union[_str, 'types.StringFilter']
    status: 'enums.AgentStatus'
    configuration: Union['fields.Json', 'types.JsonFilter']
    deploymentInfo: Union[None, 'fields.Json', 'types.JsonFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    workflows: 'WorkflowListRelationFilter'
    tools: 'ToolListRelationFilter'
    conversations: 'ConversationSessionListRelationFilter'
    evaluations: 'EvaluationListRelationFilter'

    # should be noted that AND and NOT should be Union['AgentWhereInputRecursive1', List['AgentWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['AgentWhereInputRecursive1']
    OR: List['AgentWhereInputRecursive1']
    NOT: List['AgentWhereInputRecursive1']


class AgentWhereInputRecursive1(TypedDict, total=False):
    """Agent arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    modelId: Union[_str, 'types.StringFilter']
    role: Union[_str, 'types.StringFilter']
    orchestrationType: Union[_str, 'types.StringFilter']
    status: 'enums.AgentStatus'
    configuration: Union['fields.Json', 'types.JsonFilter']
    deploymentInfo: Union[None, 'fields.Json', 'types.JsonFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    workflows: 'WorkflowListRelationFilter'
    tools: 'ToolListRelationFilter'
    conversations: 'ConversationSessionListRelationFilter'
    evaluations: 'EvaluationListRelationFilter'

    # should be noted that AND and NOT should be Union['AgentWhereInputRecursive2', List['AgentWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['AgentWhereInputRecursive2']
    OR: List['AgentWhereInputRecursive2']
    NOT: List['AgentWhereInputRecursive2']


class AgentWhereInputRecursive2(TypedDict, total=False):
    """Agent arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    modelId: Union[_str, 'types.StringFilter']
    role: Union[_str, 'types.StringFilter']
    orchestrationType: Union[_str, 'types.StringFilter']
    status: 'enums.AgentStatus'
    configuration: Union['fields.Json', 'types.JsonFilter']
    deploymentInfo: Union[None, 'fields.Json', 'types.JsonFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    workflows: 'WorkflowListRelationFilter'
    tools: 'ToolListRelationFilter'
    conversations: 'ConversationSessionListRelationFilter'
    evaluations: 'EvaluationListRelationFilter'

    # should be noted that AND and NOT should be Union['AgentWhereInputRecursive3', List['AgentWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['AgentWhereInputRecursive3']
    OR: List['AgentWhereInputRecursive3']
    NOT: List['AgentWhereInputRecursive3']


class AgentWhereInputRecursive3(TypedDict, total=False):
    """Agent arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    modelId: Union[_str, 'types.StringFilter']
    role: Union[_str, 'types.StringFilter']
    orchestrationType: Union[_str, 'types.StringFilter']
    status: 'enums.AgentStatus'
    configuration: Union['fields.Json', 'types.JsonFilter']
    deploymentInfo: Union[None, 'fields.Json', 'types.JsonFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    workflows: 'WorkflowListRelationFilter'
    tools: 'ToolListRelationFilter'
    conversations: 'ConversationSessionListRelationFilter'
    evaluations: 'EvaluationListRelationFilter'

    # should be noted that AND and NOT should be Union['AgentWhereInputRecursive4', List['AgentWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['AgentWhereInputRecursive4']
    OR: List['AgentWhereInputRecursive4']
    NOT: List['AgentWhereInputRecursive4']


class AgentWhereInputRecursive4(TypedDict, total=False):
    """Agent arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    modelId: Union[_str, 'types.StringFilter']
    role: Union[_str, 'types.StringFilter']
    orchestrationType: Union[_str, 'types.StringFilter']
    status: 'enums.AgentStatus'
    configuration: Union['fields.Json', 'types.JsonFilter']
    deploymentInfo: Union[None, 'fields.Json', 'types.JsonFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    workflows: 'WorkflowListRelationFilter'
    tools: 'ToolListRelationFilter'
    conversations: 'ConversationSessionListRelationFilter'
    evaluations: 'EvaluationListRelationFilter'



# aggregate Agent types


    

class AgentScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Agent arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    modelId: Union[_str, 'types.StringWithAggregatesFilter']
    role: Union[_str, 'types.StringWithAggregatesFilter']
    orchestrationType: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.AgentStatus'
    configuration: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    deploymentInfo: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AgentScalarWhereWithAggregatesInputRecursive1']
    OR: List['AgentScalarWhereWithAggregatesInputRecursive1']
    NOT: List['AgentScalarWhereWithAggregatesInputRecursive1']


class AgentScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Agent arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    modelId: Union[_str, 'types.StringWithAggregatesFilter']
    role: Union[_str, 'types.StringWithAggregatesFilter']
    orchestrationType: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.AgentStatus'
    configuration: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    deploymentInfo: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AgentScalarWhereWithAggregatesInputRecursive2']
    OR: List['AgentScalarWhereWithAggregatesInputRecursive2']
    NOT: List['AgentScalarWhereWithAggregatesInputRecursive2']


class AgentScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Agent arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    modelId: Union[_str, 'types.StringWithAggregatesFilter']
    role: Union[_str, 'types.StringWithAggregatesFilter']
    orchestrationType: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.AgentStatus'
    configuration: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    deploymentInfo: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AgentScalarWhereWithAggregatesInputRecursive3']
    OR: List['AgentScalarWhereWithAggregatesInputRecursive3']
    NOT: List['AgentScalarWhereWithAggregatesInputRecursive3']


class AgentScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Agent arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    modelId: Union[_str, 'types.StringWithAggregatesFilter']
    role: Union[_str, 'types.StringWithAggregatesFilter']
    orchestrationType: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.AgentStatus'
    configuration: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    deploymentInfo: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['AgentScalarWhereWithAggregatesInputRecursive4']
    OR: List['AgentScalarWhereWithAggregatesInputRecursive4']
    NOT: List['AgentScalarWhereWithAggregatesInputRecursive4']


class AgentScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Agent arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    modelId: Union[_str, 'types.StringWithAggregatesFilter']
    role: Union[_str, 'types.StringWithAggregatesFilter']
    orchestrationType: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.AgentStatus'
    configuration: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    deploymentInfo: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class AgentGroupByOutput(TypedDict, total=False):
    id: _str
    name: _str
    description: _str
    modelId: _str
    role: _str
    orchestrationType: _str
    status: 'enums.AgentStatus'
    configuration: 'fields.Json'
    deploymentInfo: 'fields.Json'
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'AgentSumAggregateOutput'
    _avg: 'AgentAvgAggregateOutput'
    _min: 'AgentMinAggregateOutput'
    _max: 'AgentMaxAggregateOutput'
    _count: 'AgentCountAggregateOutput'


class AgentAvgAggregateOutput(TypedDict, total=False):
    """Agent output for aggregating averages"""


class AgentSumAggregateOutput(TypedDict, total=False):
    """Agent output for aggregating sums"""


class AgentScalarAggregateOutput(TypedDict, total=False):
    """Agent output including scalar fields"""
    id: _str
    name: _str
    description: _str
    modelId: _str
    role: _str
    orchestrationType: _str
    status: 'enums.AgentStatus'
    configuration: 'fields.Json'
    deploymentInfo: 'fields.Json'
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


AgentMinAggregateOutput = AgentScalarAggregateOutput
AgentMaxAggregateOutput = AgentScalarAggregateOutput


class AgentMaxAggregateInput(TypedDict, total=False):
    """Agent input for aggregating by max"""
    id: bool
    name: bool
    description: bool
    modelId: bool
    role: bool
    orchestrationType: bool
    status: bool
    configuration: bool
    deploymentInfo: bool
    metadata: bool
    createdAt: bool
    updatedAt: bool


class AgentMinAggregateInput(TypedDict, total=False):
    """Agent input for aggregating by min"""
    id: bool
    name: bool
    description: bool
    modelId: bool
    role: bool
    orchestrationType: bool
    status: bool
    configuration: bool
    deploymentInfo: bool
    metadata: bool
    createdAt: bool
    updatedAt: bool


class AgentNumberAggregateInput(TypedDict, total=False):
    """Agent input for aggregating numbers"""


AgentAvgAggregateInput = AgentNumberAggregateInput
AgentSumAggregateInput = AgentNumberAggregateInput


AgentCountAggregateInput = TypedDict(
    'AgentCountAggregateInput',
    {
        'id': bool,
        'name': bool,
        'description': bool,
        'modelId': bool,
        'role': bool,
        'orchestrationType': bool,
        'status': bool,
        'configuration': bool,
        'deploymentInfo': bool,
        'metadata': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

AgentCountAggregateOutput = TypedDict(
    'AgentCountAggregateOutput',
    {
        'id': int,
        'name': int,
        'description': int,
        'modelId': int,
        'role': int,
        'orchestrationType': int,
        'status': int,
        'configuration': int,
        'deploymentInfo': int,
        'metadata': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


AgentKeys = Literal[
    'id',
    'name',
    'description',
    'modelId',
    'role',
    'orchestrationType',
    'status',
    'configuration',
    'deploymentInfo',
    'metadata',
    'createdAt',
    'updatedAt',
    'workflows',
    'tools',
    'conversations',
    'evaluations',
]
AgentScalarFieldKeys = Literal[
    'id',
    'name',
    'description',
    'modelId',
    'role',
    'orchestrationType',
    'status',
    'configuration',
    'deploymentInfo',
    'metadata',
    'createdAt',
    'updatedAt',
]
AgentScalarFieldKeysT = TypeVar('AgentScalarFieldKeysT', bound=AgentScalarFieldKeys)

AgentRelationalFieldKeys = Literal[
        'workflows',
        'tools',
        'conversations',
        'evaluations',
    ]

# Workflow types

class WorkflowOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Workflow create method"""
    id: _str
    agentId: _str
    description: Optional[_str]
    status: 'enums.WorkflowStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    agent: 'AgentCreateNestedWithoutRelationsInput'
    executions: 'WorkflowExecutionCreateManyNestedWithoutRelationsInput'


class WorkflowCreateInput(WorkflowOptionalCreateInput):
    """Required arguments to the Workflow create method"""
    name: _str
    type: 'enums.WorkflowType'
    definition: 'fields.Json'


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class WorkflowOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Workflow create method, without relations"""
    id: _str
    agentId: _str
    description: Optional[_str]
    status: 'enums.WorkflowStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class WorkflowCreateWithoutRelationsInput(WorkflowOptionalCreateWithoutRelationsInput):
    """Required arguments to the Workflow create method, without relations"""
    name: _str
    type: 'enums.WorkflowType'
    definition: 'fields.Json'


class WorkflowCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'WorkflowCreateWithoutRelationsInput'
    connect: 'WorkflowWhereUniqueInput'


class WorkflowCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['WorkflowCreateWithoutRelationsInput', List['WorkflowCreateWithoutRelationsInput']]
    connect: Union['WorkflowWhereUniqueInput', List['WorkflowWhereUniqueInput']]


_WorkflowWhereUnique_id_Input = TypedDict(
    '_WorkflowWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

WorkflowWhereUniqueInput = _WorkflowWhereUnique_id_Input


class WorkflowUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    name: _str
    description: Optional[_str]
    type: 'enums.WorkflowType'
    definition: 'fields.Json'
    status: 'enums.WorkflowStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    agent: 'AgentUpdateOneWithoutRelationsInput'
    executions: 'WorkflowExecutionUpdateManyWithoutRelationsInput'


class WorkflowUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    name: _str
    description: Optional[_str]
    type: 'enums.WorkflowType'
    definition: 'fields.Json'
    status: 'enums.WorkflowStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class WorkflowUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['WorkflowCreateWithoutRelationsInput']
    connect: List['WorkflowWhereUniqueInput']
    set: List['WorkflowWhereUniqueInput']
    disconnect: List['WorkflowWhereUniqueInput']
    delete: List['WorkflowWhereUniqueInput']

    # TODO
    # update: List['WorkflowUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['WorkflowUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['WorkflowScalarWhereInput']
    # upsert: List['WorkflowUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['WorkflowCreateOrConnectWithoutRelationsInput']


class WorkflowUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'WorkflowCreateWithoutRelationsInput'
    connect: 'WorkflowWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'WorkflowUpdateInput'
    # upsert: 'WorkflowUpsertWithoutRelationsInput'
    # connectOrCreate: 'WorkflowCreateOrConnectWithoutRelationsInput'


class WorkflowUpsertInput(TypedDict):
    create: 'WorkflowCreateInput'
    update: 'WorkflowUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Workflow_id_OrderByInput = TypedDict(
    '_Workflow_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Workflow_agentId_OrderByInput = TypedDict(
    '_Workflow_agentId_OrderByInput',
    {
        'agentId': 'SortOrder',
    },
    total=True
)

_Workflow_name_OrderByInput = TypedDict(
    '_Workflow_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_Workflow_description_OrderByInput = TypedDict(
    '_Workflow_description_OrderByInput',
    {
        'description': 'SortOrder',
    },
    total=True
)

_Workflow_type_OrderByInput = TypedDict(
    '_Workflow_type_OrderByInput',
    {
        'type': 'SortOrder',
    },
    total=True
)

_Workflow_definition_OrderByInput = TypedDict(
    '_Workflow_definition_OrderByInput',
    {
        'definition': 'SortOrder',
    },
    total=True
)

_Workflow_status_OrderByInput = TypedDict(
    '_Workflow_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_Workflow_createdAt_OrderByInput = TypedDict(
    '_Workflow_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Workflow_updatedAt_OrderByInput = TypedDict(
    '_Workflow_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

WorkflowOrderByInput = Union[
    '_Workflow_id_OrderByInput',
    '_Workflow_agentId_OrderByInput',
    '_Workflow_name_OrderByInput',
    '_Workflow_description_OrderByInput',
    '_Workflow_type_OrderByInput',
    '_Workflow_definition_OrderByInput',
    '_Workflow_status_OrderByInput',
    '_Workflow_createdAt_OrderByInput',
    '_Workflow_updatedAt_OrderByInput',
]



# recursive Workflow types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

WorkflowRelationFilter = TypedDict(
    'WorkflowRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class WorkflowListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class WorkflowInclude(TypedDict, total=False):
    """Workflow relational arguments"""
    agent: Union[bool, 'AgentArgsFromWorkflow']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromWorkflow']


    

class AgentIncludeFromWorkflow(TypedDict, total=False):
    """Relational arguments for Workflow"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromWorkflowRecursive1']
    tools: Union[bool, 'FindManyToolArgsFromWorkflowRecursive1']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromWorkflowRecursive1']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromWorkflowRecursive1']


class AgentIncludeFromWorkflowRecursive1(TypedDict, total=False):
    """Relational arguments for Workflow"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromWorkflowRecursive2']
    tools: Union[bool, 'FindManyToolArgsFromWorkflowRecursive2']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromWorkflowRecursive2']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromWorkflowRecursive2']


class AgentIncludeFromWorkflowRecursive2(TypedDict, total=False):
    """Relational arguments for Workflow"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromWorkflowRecursive3']
    tools: Union[bool, 'FindManyToolArgsFromWorkflowRecursive3']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromWorkflowRecursive3']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromWorkflowRecursive3']


class AgentIncludeFromWorkflowRecursive3(TypedDict, total=False):
    """Relational arguments for Workflow"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromWorkflowRecursive4']
    tools: Union[bool, 'FindManyToolArgsFromWorkflowRecursive4']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromWorkflowRecursive4']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromWorkflowRecursive4']


class AgentIncludeFromWorkflowRecursive4(TypedDict, total=False):
    """Relational arguments for Workflow"""

    

class AgentArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'AgentIncludeFromAgentRecursive1'


class AgentArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'AgentIncludeFromAgentRecursive2'


class AgentArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'AgentIncludeFromAgentRecursive3'


class AgentArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'AgentIncludeFromAgentRecursive4'


class AgentArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    
    

class FindManyAgentArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive1'


class FindManyAgentArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive2'


class FindManyAgentArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive3'


class FindManyAgentArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive4'


class FindManyAgentArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    
    

class WorkflowIncludeFromWorkflow(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive1']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromWorkflowRecursive1']


class WorkflowIncludeFromWorkflowRecursive1(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive2']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromWorkflowRecursive2']


class WorkflowIncludeFromWorkflowRecursive2(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive3']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromWorkflowRecursive3']


class WorkflowIncludeFromWorkflowRecursive3(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive4']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromWorkflowRecursive4']


class WorkflowIncludeFromWorkflowRecursive4(TypedDict, total=False):
    """Relational arguments for Workflow"""

    

class WorkflowArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class WorkflowArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class WorkflowArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class WorkflowArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class WorkflowArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    
    

class FindManyWorkflowArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class FindManyWorkflowArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class FindManyWorkflowArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class FindManyWorkflowArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class FindManyWorkflowArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    
    

class WorkflowExecutionIncludeFromWorkflow(TypedDict, total=False):
    """Relational arguments for Workflow"""
    workflow: Union[bool, 'WorkflowArgsFromWorkflowRecursive1']


class WorkflowExecutionIncludeFromWorkflowRecursive1(TypedDict, total=False):
    """Relational arguments for Workflow"""
    workflow: Union[bool, 'WorkflowArgsFromWorkflowRecursive2']


class WorkflowExecutionIncludeFromWorkflowRecursive2(TypedDict, total=False):
    """Relational arguments for Workflow"""
    workflow: Union[bool, 'WorkflowArgsFromWorkflowRecursive3']


class WorkflowExecutionIncludeFromWorkflowRecursive3(TypedDict, total=False):
    """Relational arguments for Workflow"""
    workflow: Union[bool, 'WorkflowArgsFromWorkflowRecursive4']


class WorkflowExecutionIncludeFromWorkflowRecursive4(TypedDict, total=False):
    """Relational arguments for Workflow"""

    

class WorkflowExecutionArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class WorkflowExecutionArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class WorkflowExecutionArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class WorkflowExecutionArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class WorkflowExecutionArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    
    

class FindManyWorkflowExecutionArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class FindManyWorkflowExecutionArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class FindManyWorkflowExecutionArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class FindManyWorkflowExecutionArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class FindManyWorkflowExecutionArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    
    

class ToolIncludeFromWorkflow(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive1']
    mcpServer: Union[bool, 'MCPServerArgsFromWorkflowRecursive1']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromWorkflowRecursive1']


class ToolIncludeFromWorkflowRecursive1(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive2']
    mcpServer: Union[bool, 'MCPServerArgsFromWorkflowRecursive2']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromWorkflowRecursive2']


class ToolIncludeFromWorkflowRecursive2(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive3']
    mcpServer: Union[bool, 'MCPServerArgsFromWorkflowRecursive3']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromWorkflowRecursive3']


class ToolIncludeFromWorkflowRecursive3(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive4']
    mcpServer: Union[bool, 'MCPServerArgsFromWorkflowRecursive4']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromWorkflowRecursive4']


class ToolIncludeFromWorkflowRecursive4(TypedDict, total=False):
    """Relational arguments for Workflow"""

    

class ToolArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'ToolIncludeFromToolRecursive1'


class ToolArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'ToolIncludeFromToolRecursive2'


class ToolArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'ToolIncludeFromToolRecursive3'


class ToolArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'ToolIncludeFromToolRecursive4'


class ToolArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    
    

class FindManyToolArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive1'


class FindManyToolArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive2'


class FindManyToolArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive3'


class FindManyToolArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive4'


class FindManyToolArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    
    

class ToolInvocationIncludeFromWorkflow(TypedDict, total=False):
    """Relational arguments for Workflow"""
    tool: Union[bool, 'ToolArgsFromWorkflowRecursive1']


class ToolInvocationIncludeFromWorkflowRecursive1(TypedDict, total=False):
    """Relational arguments for Workflow"""
    tool: Union[bool, 'ToolArgsFromWorkflowRecursive2']


class ToolInvocationIncludeFromWorkflowRecursive2(TypedDict, total=False):
    """Relational arguments for Workflow"""
    tool: Union[bool, 'ToolArgsFromWorkflowRecursive3']


class ToolInvocationIncludeFromWorkflowRecursive3(TypedDict, total=False):
    """Relational arguments for Workflow"""
    tool: Union[bool, 'ToolArgsFromWorkflowRecursive4']


class ToolInvocationIncludeFromWorkflowRecursive4(TypedDict, total=False):
    """Relational arguments for Workflow"""

    

class ToolInvocationArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class ToolInvocationArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class ToolInvocationArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class ToolInvocationArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class ToolInvocationArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    
    

class FindManyToolInvocationArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class FindManyToolInvocationArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class FindManyToolInvocationArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class FindManyToolInvocationArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class FindManyToolInvocationArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    
    

class ConversationSessionIncludeFromWorkflow(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromWorkflowRecursive1']


class ConversationSessionIncludeFromWorkflowRecursive1(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromWorkflowRecursive2']


class ConversationSessionIncludeFromWorkflowRecursive2(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromWorkflowRecursive3']


class ConversationSessionIncludeFromWorkflowRecursive3(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromWorkflowRecursive4']


class ConversationSessionIncludeFromWorkflowRecursive4(TypedDict, total=False):
    """Relational arguments for Workflow"""

    

class ConversationSessionArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class ConversationSessionArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class ConversationSessionArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class ConversationSessionArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class ConversationSessionArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    
    

class FindManyConversationSessionArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class FindManyConversationSessionArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class FindManyConversationSessionArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class FindManyConversationSessionArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class FindManyConversationSessionArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    
    

class MessageIncludeFromWorkflow(TypedDict, total=False):
    """Relational arguments for Workflow"""
    session: Union[bool, 'ConversationSessionArgsFromWorkflowRecursive1']


class MessageIncludeFromWorkflowRecursive1(TypedDict, total=False):
    """Relational arguments for Workflow"""
    session: Union[bool, 'ConversationSessionArgsFromWorkflowRecursive2']


class MessageIncludeFromWorkflowRecursive2(TypedDict, total=False):
    """Relational arguments for Workflow"""
    session: Union[bool, 'ConversationSessionArgsFromWorkflowRecursive3']


class MessageIncludeFromWorkflowRecursive3(TypedDict, total=False):
    """Relational arguments for Workflow"""
    session: Union[bool, 'ConversationSessionArgsFromWorkflowRecursive4']


class MessageIncludeFromWorkflowRecursive4(TypedDict, total=False):
    """Relational arguments for Workflow"""

    

class MessageArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    
    

class FindManyMessageArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class VectorStoreIncludeFromWorkflow(TypedDict, total=False):
    """Relational arguments for Workflow"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromWorkflowRecursive1']


class VectorStoreIncludeFromWorkflowRecursive1(TypedDict, total=False):
    """Relational arguments for Workflow"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromWorkflowRecursive2']


class VectorStoreIncludeFromWorkflowRecursive2(TypedDict, total=False):
    """Relational arguments for Workflow"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromWorkflowRecursive3']


class VectorStoreIncludeFromWorkflowRecursive3(TypedDict, total=False):
    """Relational arguments for Workflow"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromWorkflowRecursive4']


class VectorStoreIncludeFromWorkflowRecursive4(TypedDict, total=False):
    """Relational arguments for Workflow"""

    

class VectorStoreArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class VectorStoreArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class VectorStoreArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class VectorStoreArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class VectorStoreArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    
    

class FindManyVectorStoreArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class FindManyVectorStoreArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class FindManyVectorStoreArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class FindManyVectorStoreArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class FindManyVectorStoreArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    
    

class EmbeddingIncludeFromWorkflow(TypedDict, total=False):
    """Relational arguments for Workflow"""
    vectorStore: Union[bool, 'VectorStoreArgsFromWorkflowRecursive1']


class EmbeddingIncludeFromWorkflowRecursive1(TypedDict, total=False):
    """Relational arguments for Workflow"""
    vectorStore: Union[bool, 'VectorStoreArgsFromWorkflowRecursive2']


class EmbeddingIncludeFromWorkflowRecursive2(TypedDict, total=False):
    """Relational arguments for Workflow"""
    vectorStore: Union[bool, 'VectorStoreArgsFromWorkflowRecursive3']


class EmbeddingIncludeFromWorkflowRecursive3(TypedDict, total=False):
    """Relational arguments for Workflow"""
    vectorStore: Union[bool, 'VectorStoreArgsFromWorkflowRecursive4']


class EmbeddingIncludeFromWorkflowRecursive4(TypedDict, total=False):
    """Relational arguments for Workflow"""

    

class EmbeddingArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class EmbeddingArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class EmbeddingArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class EmbeddingArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class EmbeddingArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    
    

class FindManyEmbeddingArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class FindManyEmbeddingArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class FindManyEmbeddingArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class FindManyEmbeddingArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class FindManyEmbeddingArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    
    

class MCPServerIncludeFromWorkflow(TypedDict, total=False):
    """Relational arguments for Workflow"""
    tools: Union[bool, 'FindManyToolArgsFromWorkflowRecursive1']


class MCPServerIncludeFromWorkflowRecursive1(TypedDict, total=False):
    """Relational arguments for Workflow"""
    tools: Union[bool, 'FindManyToolArgsFromWorkflowRecursive2']


class MCPServerIncludeFromWorkflowRecursive2(TypedDict, total=False):
    """Relational arguments for Workflow"""
    tools: Union[bool, 'FindManyToolArgsFromWorkflowRecursive3']


class MCPServerIncludeFromWorkflowRecursive3(TypedDict, total=False):
    """Relational arguments for Workflow"""
    tools: Union[bool, 'FindManyToolArgsFromWorkflowRecursive4']


class MCPServerIncludeFromWorkflowRecursive4(TypedDict, total=False):
    """Relational arguments for Workflow"""

    

class MCPServerArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class MCPServerArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class MCPServerArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class MCPServerArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class MCPServerArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    
    

class FindManyMCPServerArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class FindManyMCPServerArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class FindManyMCPServerArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class FindManyMCPServerArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class FindManyMCPServerArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    
    

class EvaluationIncludeFromWorkflow(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive1']


class EvaluationIncludeFromWorkflowRecursive1(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive2']


class EvaluationIncludeFromWorkflowRecursive2(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive3']


class EvaluationIncludeFromWorkflowRecursive3(TypedDict, total=False):
    """Relational arguments for Workflow"""
    agent: Union[bool, 'AgentArgsFromWorkflowRecursive4']


class EvaluationIncludeFromWorkflowRecursive4(TypedDict, total=False):
    """Relational arguments for Workflow"""

    

class EvaluationArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class EvaluationArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class EvaluationArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class EvaluationArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class EvaluationArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    
    

class FindManyEvaluationArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class FindManyEvaluationArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class FindManyEvaluationArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class FindManyEvaluationArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class FindManyEvaluationArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    
    

class UserIncludeFromWorkflow(TypedDict, total=False):
    """Relational arguments for Workflow"""


class UserIncludeFromWorkflowRecursive1(TypedDict, total=False):
    """Relational arguments for Workflow"""


class UserIncludeFromWorkflowRecursive2(TypedDict, total=False):
    """Relational arguments for Workflow"""


class UserIncludeFromWorkflowRecursive3(TypedDict, total=False):
    """Relational arguments for Workflow"""


class UserIncludeFromWorkflowRecursive4(TypedDict, total=False):
    """Relational arguments for Workflow"""

    

class UserArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    
    

class FindManyUserArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class SystemConfigIncludeFromWorkflow(TypedDict, total=False):
    """Relational arguments for Workflow"""


class SystemConfigIncludeFromWorkflowRecursive1(TypedDict, total=False):
    """Relational arguments for Workflow"""


class SystemConfigIncludeFromWorkflowRecursive2(TypedDict, total=False):
    """Relational arguments for Workflow"""


class SystemConfigIncludeFromWorkflowRecursive3(TypedDict, total=False):
    """Relational arguments for Workflow"""


class SystemConfigIncludeFromWorkflowRecursive4(TypedDict, total=False):
    """Relational arguments for Workflow"""

    

class SystemConfigArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class SystemConfigArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class SystemConfigArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class SystemConfigArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class SystemConfigArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    
    

class FindManySystemConfigArgsFromWorkflow(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class FindManySystemConfigArgsFromWorkflowRecursive1(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class FindManySystemConfigArgsFromWorkflowRecursive2(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class FindManySystemConfigArgsFromWorkflowRecursive3(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class FindManySystemConfigArgsFromWorkflowRecursive4(TypedDict, total=False):
    """Arguments for Workflow"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    


FindManyWorkflowArgs = FindManyWorkflowArgsFromWorkflow
FindFirstWorkflowArgs = FindManyWorkflowArgsFromWorkflow


    

class WorkflowWhereInput(TypedDict, total=False):
    """Workflow arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    type: 'enums.WorkflowType'
    definition: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.WorkflowStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    executions: 'WorkflowExecutionListRelationFilter'

    # should be noted that AND and NOT should be Union['WorkflowWhereInputRecursive1', List['WorkflowWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['WorkflowWhereInputRecursive1']
    OR: List['WorkflowWhereInputRecursive1']
    NOT: List['WorkflowWhereInputRecursive1']


class WorkflowWhereInputRecursive1(TypedDict, total=False):
    """Workflow arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    type: 'enums.WorkflowType'
    definition: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.WorkflowStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    executions: 'WorkflowExecutionListRelationFilter'

    # should be noted that AND and NOT should be Union['WorkflowWhereInputRecursive2', List['WorkflowWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['WorkflowWhereInputRecursive2']
    OR: List['WorkflowWhereInputRecursive2']
    NOT: List['WorkflowWhereInputRecursive2']


class WorkflowWhereInputRecursive2(TypedDict, total=False):
    """Workflow arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    type: 'enums.WorkflowType'
    definition: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.WorkflowStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    executions: 'WorkflowExecutionListRelationFilter'

    # should be noted that AND and NOT should be Union['WorkflowWhereInputRecursive3', List['WorkflowWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['WorkflowWhereInputRecursive3']
    OR: List['WorkflowWhereInputRecursive3']
    NOT: List['WorkflowWhereInputRecursive3']


class WorkflowWhereInputRecursive3(TypedDict, total=False):
    """Workflow arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    type: 'enums.WorkflowType'
    definition: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.WorkflowStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    executions: 'WorkflowExecutionListRelationFilter'

    # should be noted that AND and NOT should be Union['WorkflowWhereInputRecursive4', List['WorkflowWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['WorkflowWhereInputRecursive4']
    OR: List['WorkflowWhereInputRecursive4']
    NOT: List['WorkflowWhereInputRecursive4']


class WorkflowWhereInputRecursive4(TypedDict, total=False):
    """Workflow arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    type: 'enums.WorkflowType'
    definition: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.WorkflowStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    executions: 'WorkflowExecutionListRelationFilter'



# aggregate Workflow types


    

class WorkflowScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Workflow arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.WorkflowType'
    definition: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.WorkflowStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['WorkflowScalarWhereWithAggregatesInputRecursive1']
    OR: List['WorkflowScalarWhereWithAggregatesInputRecursive1']
    NOT: List['WorkflowScalarWhereWithAggregatesInputRecursive1']


class WorkflowScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Workflow arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.WorkflowType'
    definition: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.WorkflowStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['WorkflowScalarWhereWithAggregatesInputRecursive2']
    OR: List['WorkflowScalarWhereWithAggregatesInputRecursive2']
    NOT: List['WorkflowScalarWhereWithAggregatesInputRecursive2']


class WorkflowScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Workflow arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.WorkflowType'
    definition: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.WorkflowStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['WorkflowScalarWhereWithAggregatesInputRecursive3']
    OR: List['WorkflowScalarWhereWithAggregatesInputRecursive3']
    NOT: List['WorkflowScalarWhereWithAggregatesInputRecursive3']


class WorkflowScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Workflow arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.WorkflowType'
    definition: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.WorkflowStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['WorkflowScalarWhereWithAggregatesInputRecursive4']
    OR: List['WorkflowScalarWhereWithAggregatesInputRecursive4']
    NOT: List['WorkflowScalarWhereWithAggregatesInputRecursive4']


class WorkflowScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Workflow arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.WorkflowType'
    definition: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.WorkflowStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class WorkflowGroupByOutput(TypedDict, total=False):
    id: _str
    agentId: _str
    name: _str
    description: _str
    type: 'enums.WorkflowType'
    definition: 'fields.Json'
    status: 'enums.WorkflowStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'WorkflowSumAggregateOutput'
    _avg: 'WorkflowAvgAggregateOutput'
    _min: 'WorkflowMinAggregateOutput'
    _max: 'WorkflowMaxAggregateOutput'
    _count: 'WorkflowCountAggregateOutput'


class WorkflowAvgAggregateOutput(TypedDict, total=False):
    """Workflow output for aggregating averages"""


class WorkflowSumAggregateOutput(TypedDict, total=False):
    """Workflow output for aggregating sums"""


class WorkflowScalarAggregateOutput(TypedDict, total=False):
    """Workflow output including scalar fields"""
    id: _str
    agentId: _str
    name: _str
    description: _str
    type: 'enums.WorkflowType'
    definition: 'fields.Json'
    status: 'enums.WorkflowStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


WorkflowMinAggregateOutput = WorkflowScalarAggregateOutput
WorkflowMaxAggregateOutput = WorkflowScalarAggregateOutput


class WorkflowMaxAggregateInput(TypedDict, total=False):
    """Workflow input for aggregating by max"""
    id: bool
    agentId: bool
    name: bool
    description: bool
    type: bool
    definition: bool
    status: bool
    createdAt: bool
    updatedAt: bool


class WorkflowMinAggregateInput(TypedDict, total=False):
    """Workflow input for aggregating by min"""
    id: bool
    agentId: bool
    name: bool
    description: bool
    type: bool
    definition: bool
    status: bool
    createdAt: bool
    updatedAt: bool


class WorkflowNumberAggregateInput(TypedDict, total=False):
    """Workflow input for aggregating numbers"""


WorkflowAvgAggregateInput = WorkflowNumberAggregateInput
WorkflowSumAggregateInput = WorkflowNumberAggregateInput


WorkflowCountAggregateInput = TypedDict(
    'WorkflowCountAggregateInput',
    {
        'id': bool,
        'agentId': bool,
        'name': bool,
        'description': bool,
        'type': bool,
        'definition': bool,
        'status': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

WorkflowCountAggregateOutput = TypedDict(
    'WorkflowCountAggregateOutput',
    {
        'id': int,
        'agentId': int,
        'name': int,
        'description': int,
        'type': int,
        'definition': int,
        'status': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


WorkflowKeys = Literal[
    'id',
    'agentId',
    'name',
    'description',
    'type',
    'definition',
    'status',
    'createdAt',
    'updatedAt',
    'agent',
    'executions',
]
WorkflowScalarFieldKeys = Literal[
    'id',
    'agentId',
    'name',
    'description',
    'type',
    'definition',
    'status',
    'createdAt',
    'updatedAt',
]
WorkflowScalarFieldKeysT = TypeVar('WorkflowScalarFieldKeysT', bound=WorkflowScalarFieldKeys)

WorkflowRelationalFieldKeys = Literal[
        'agent',
        'executions',
    ]

# WorkflowExecution types

class WorkflowExecutionOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the WorkflowExecution create method"""
    id: _str
    workflowId: _str
    status: 'enums.ExecutionStatus'
    parameters: 'fields.Json'
    results: 'fields.Json'
    currentStep: _int
    startTime: Optional[datetime.datetime]
    endTime: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    workflow: 'WorkflowCreateNestedWithoutRelationsInput'


class WorkflowExecutionCreateInput(WorkflowExecutionOptionalCreateInput):
    """Required arguments to the WorkflowExecution create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class WorkflowExecutionOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the WorkflowExecution create method, without relations"""
    id: _str
    workflowId: _str
    status: 'enums.ExecutionStatus'
    parameters: 'fields.Json'
    results: 'fields.Json'
    currentStep: _int
    startTime: Optional[datetime.datetime]
    endTime: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class WorkflowExecutionCreateWithoutRelationsInput(WorkflowExecutionOptionalCreateWithoutRelationsInput):
    """Required arguments to the WorkflowExecution create method, without relations"""


class WorkflowExecutionCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'WorkflowExecutionCreateWithoutRelationsInput'
    connect: 'WorkflowExecutionWhereUniqueInput'


class WorkflowExecutionCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['WorkflowExecutionCreateWithoutRelationsInput', List['WorkflowExecutionCreateWithoutRelationsInput']]
    connect: Union['WorkflowExecutionWhereUniqueInput', List['WorkflowExecutionWhereUniqueInput']]


_WorkflowExecutionWhereUnique_id_Input = TypedDict(
    '_WorkflowExecutionWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

WorkflowExecutionWhereUniqueInput = _WorkflowExecutionWhereUnique_id_Input


class WorkflowExecutionUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    status: 'enums.ExecutionStatus'
    parameters: 'fields.Json'
    results: 'fields.Json'
    currentStep: Union[AtomicIntInput, _int]
    startTime: Optional[datetime.datetime]
    endTime: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    workflow: 'WorkflowUpdateOneWithoutRelationsInput'


class WorkflowExecutionUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    status: 'enums.ExecutionStatus'
    parameters: 'fields.Json'
    results: 'fields.Json'
    currentStep: Union[AtomicIntInput, _int]
    startTime: Optional[datetime.datetime]
    endTime: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class WorkflowExecutionUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['WorkflowExecutionCreateWithoutRelationsInput']
    connect: List['WorkflowExecutionWhereUniqueInput']
    set: List['WorkflowExecutionWhereUniqueInput']
    disconnect: List['WorkflowExecutionWhereUniqueInput']
    delete: List['WorkflowExecutionWhereUniqueInput']

    # TODO
    # update: List['WorkflowExecutionUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['WorkflowExecutionUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['WorkflowExecutionScalarWhereInput']
    # upsert: List['WorkflowExecutionUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['WorkflowExecutionCreateOrConnectWithoutRelationsInput']


class WorkflowExecutionUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'WorkflowExecutionCreateWithoutRelationsInput'
    connect: 'WorkflowExecutionWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'WorkflowExecutionUpdateInput'
    # upsert: 'WorkflowExecutionUpsertWithoutRelationsInput'
    # connectOrCreate: 'WorkflowExecutionCreateOrConnectWithoutRelationsInput'


class WorkflowExecutionUpsertInput(TypedDict):
    create: 'WorkflowExecutionCreateInput'
    update: 'WorkflowExecutionUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_WorkflowExecution_id_OrderByInput = TypedDict(
    '_WorkflowExecution_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_WorkflowExecution_workflowId_OrderByInput = TypedDict(
    '_WorkflowExecution_workflowId_OrderByInput',
    {
        'workflowId': 'SortOrder',
    },
    total=True
)

_WorkflowExecution_status_OrderByInput = TypedDict(
    '_WorkflowExecution_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_WorkflowExecution_parameters_OrderByInput = TypedDict(
    '_WorkflowExecution_parameters_OrderByInput',
    {
        'parameters': 'SortOrder',
    },
    total=True
)

_WorkflowExecution_results_OrderByInput = TypedDict(
    '_WorkflowExecution_results_OrderByInput',
    {
        'results': 'SortOrder',
    },
    total=True
)

_WorkflowExecution_currentStep_OrderByInput = TypedDict(
    '_WorkflowExecution_currentStep_OrderByInput',
    {
        'currentStep': 'SortOrder',
    },
    total=True
)

_WorkflowExecution_startTime_OrderByInput = TypedDict(
    '_WorkflowExecution_startTime_OrderByInput',
    {
        'startTime': 'SortOrder',
    },
    total=True
)

_WorkflowExecution_endTime_OrderByInput = TypedDict(
    '_WorkflowExecution_endTime_OrderByInput',
    {
        'endTime': 'SortOrder',
    },
    total=True
)

_WorkflowExecution_createdAt_OrderByInput = TypedDict(
    '_WorkflowExecution_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_WorkflowExecution_updatedAt_OrderByInput = TypedDict(
    '_WorkflowExecution_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

WorkflowExecutionOrderByInput = Union[
    '_WorkflowExecution_id_OrderByInput',
    '_WorkflowExecution_workflowId_OrderByInput',
    '_WorkflowExecution_status_OrderByInput',
    '_WorkflowExecution_parameters_OrderByInput',
    '_WorkflowExecution_results_OrderByInput',
    '_WorkflowExecution_currentStep_OrderByInput',
    '_WorkflowExecution_startTime_OrderByInput',
    '_WorkflowExecution_endTime_OrderByInput',
    '_WorkflowExecution_createdAt_OrderByInput',
    '_WorkflowExecution_updatedAt_OrderByInput',
]



# recursive WorkflowExecution types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

WorkflowExecutionRelationFilter = TypedDict(
    'WorkflowExecutionRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class WorkflowExecutionListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class WorkflowExecutionInclude(TypedDict, total=False):
    """WorkflowExecution relational arguments"""
    workflow: Union[bool, 'WorkflowArgsFromWorkflowExecution']


    

class AgentIncludeFromWorkflowExecution(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromWorkflowExecutionRecursive1']
    tools: Union[bool, 'FindManyToolArgsFromWorkflowExecutionRecursive1']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromWorkflowExecutionRecursive1']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromWorkflowExecutionRecursive1']


class AgentIncludeFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromWorkflowExecutionRecursive2']
    tools: Union[bool, 'FindManyToolArgsFromWorkflowExecutionRecursive2']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromWorkflowExecutionRecursive2']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromWorkflowExecutionRecursive2']


class AgentIncludeFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromWorkflowExecutionRecursive3']
    tools: Union[bool, 'FindManyToolArgsFromWorkflowExecutionRecursive3']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromWorkflowExecutionRecursive3']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromWorkflowExecutionRecursive3']


class AgentIncludeFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromWorkflowExecutionRecursive4']
    tools: Union[bool, 'FindManyToolArgsFromWorkflowExecutionRecursive4']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromWorkflowExecutionRecursive4']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromWorkflowExecutionRecursive4']


class AgentIncludeFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""

    

class AgentArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'AgentIncludeFromAgentRecursive1'


class AgentArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'AgentIncludeFromAgentRecursive2'


class AgentArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'AgentIncludeFromAgentRecursive3'


class AgentArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'AgentIncludeFromAgentRecursive4'


class AgentArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    
    

class FindManyAgentArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive1'


class FindManyAgentArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive2'


class FindManyAgentArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive3'


class FindManyAgentArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive4'


class FindManyAgentArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    
    

class WorkflowIncludeFromWorkflowExecution(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive1']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromWorkflowExecutionRecursive1']


class WorkflowIncludeFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive2']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromWorkflowExecutionRecursive2']


class WorkflowIncludeFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive3']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromWorkflowExecutionRecursive3']


class WorkflowIncludeFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive4']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromWorkflowExecutionRecursive4']


class WorkflowIncludeFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""

    

class WorkflowArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class WorkflowArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class WorkflowArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class WorkflowArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class WorkflowArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    
    

class FindManyWorkflowArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class FindManyWorkflowArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class FindManyWorkflowArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class FindManyWorkflowArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class FindManyWorkflowArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    
    

class WorkflowExecutionIncludeFromWorkflowExecution(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    workflow: Union[bool, 'WorkflowArgsFromWorkflowExecutionRecursive1']


class WorkflowExecutionIncludeFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    workflow: Union[bool, 'WorkflowArgsFromWorkflowExecutionRecursive2']


class WorkflowExecutionIncludeFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    workflow: Union[bool, 'WorkflowArgsFromWorkflowExecutionRecursive3']


class WorkflowExecutionIncludeFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    workflow: Union[bool, 'WorkflowArgsFromWorkflowExecutionRecursive4']


class WorkflowExecutionIncludeFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""

    

class WorkflowExecutionArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class WorkflowExecutionArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class WorkflowExecutionArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class WorkflowExecutionArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class WorkflowExecutionArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    
    

class FindManyWorkflowExecutionArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class FindManyWorkflowExecutionArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class FindManyWorkflowExecutionArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class FindManyWorkflowExecutionArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class FindManyWorkflowExecutionArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    
    

class ToolIncludeFromWorkflowExecution(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive1']
    mcpServer: Union[bool, 'MCPServerArgsFromWorkflowExecutionRecursive1']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromWorkflowExecutionRecursive1']


class ToolIncludeFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive2']
    mcpServer: Union[bool, 'MCPServerArgsFromWorkflowExecutionRecursive2']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromWorkflowExecutionRecursive2']


class ToolIncludeFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive3']
    mcpServer: Union[bool, 'MCPServerArgsFromWorkflowExecutionRecursive3']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromWorkflowExecutionRecursive3']


class ToolIncludeFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive4']
    mcpServer: Union[bool, 'MCPServerArgsFromWorkflowExecutionRecursive4']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromWorkflowExecutionRecursive4']


class ToolIncludeFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""

    

class ToolArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'ToolIncludeFromToolRecursive1'


class ToolArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'ToolIncludeFromToolRecursive2'


class ToolArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'ToolIncludeFromToolRecursive3'


class ToolArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'ToolIncludeFromToolRecursive4'


class ToolArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    
    

class FindManyToolArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive1'


class FindManyToolArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive2'


class FindManyToolArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive3'


class FindManyToolArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive4'


class FindManyToolArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    
    

class ToolInvocationIncludeFromWorkflowExecution(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    tool: Union[bool, 'ToolArgsFromWorkflowExecutionRecursive1']


class ToolInvocationIncludeFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    tool: Union[bool, 'ToolArgsFromWorkflowExecutionRecursive2']


class ToolInvocationIncludeFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    tool: Union[bool, 'ToolArgsFromWorkflowExecutionRecursive3']


class ToolInvocationIncludeFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    tool: Union[bool, 'ToolArgsFromWorkflowExecutionRecursive4']


class ToolInvocationIncludeFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""

    

class ToolInvocationArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class ToolInvocationArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class ToolInvocationArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class ToolInvocationArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class ToolInvocationArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    
    

class FindManyToolInvocationArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class FindManyToolInvocationArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class FindManyToolInvocationArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class FindManyToolInvocationArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class FindManyToolInvocationArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    
    

class ConversationSessionIncludeFromWorkflowExecution(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromWorkflowExecutionRecursive1']


class ConversationSessionIncludeFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromWorkflowExecutionRecursive2']


class ConversationSessionIncludeFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromWorkflowExecutionRecursive3']


class ConversationSessionIncludeFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromWorkflowExecutionRecursive4']


class ConversationSessionIncludeFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""

    

class ConversationSessionArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class ConversationSessionArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class ConversationSessionArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class ConversationSessionArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class ConversationSessionArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    
    

class FindManyConversationSessionArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class FindManyConversationSessionArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class FindManyConversationSessionArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class FindManyConversationSessionArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class FindManyConversationSessionArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    
    

class MessageIncludeFromWorkflowExecution(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    session: Union[bool, 'ConversationSessionArgsFromWorkflowExecutionRecursive1']


class MessageIncludeFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    session: Union[bool, 'ConversationSessionArgsFromWorkflowExecutionRecursive2']


class MessageIncludeFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    session: Union[bool, 'ConversationSessionArgsFromWorkflowExecutionRecursive3']


class MessageIncludeFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    session: Union[bool, 'ConversationSessionArgsFromWorkflowExecutionRecursive4']


class MessageIncludeFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""

    

class MessageArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    
    

class FindManyMessageArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class VectorStoreIncludeFromWorkflowExecution(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromWorkflowExecutionRecursive1']


class VectorStoreIncludeFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromWorkflowExecutionRecursive2']


class VectorStoreIncludeFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromWorkflowExecutionRecursive3']


class VectorStoreIncludeFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromWorkflowExecutionRecursive4']


class VectorStoreIncludeFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""

    

class VectorStoreArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class VectorStoreArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class VectorStoreArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class VectorStoreArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class VectorStoreArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    
    

class FindManyVectorStoreArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class FindManyVectorStoreArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class FindManyVectorStoreArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class FindManyVectorStoreArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class FindManyVectorStoreArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    
    

class EmbeddingIncludeFromWorkflowExecution(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    vectorStore: Union[bool, 'VectorStoreArgsFromWorkflowExecutionRecursive1']


class EmbeddingIncludeFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    vectorStore: Union[bool, 'VectorStoreArgsFromWorkflowExecutionRecursive2']


class EmbeddingIncludeFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    vectorStore: Union[bool, 'VectorStoreArgsFromWorkflowExecutionRecursive3']


class EmbeddingIncludeFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    vectorStore: Union[bool, 'VectorStoreArgsFromWorkflowExecutionRecursive4']


class EmbeddingIncludeFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""

    

class EmbeddingArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class EmbeddingArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class EmbeddingArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class EmbeddingArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class EmbeddingArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    
    

class FindManyEmbeddingArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class FindManyEmbeddingArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class FindManyEmbeddingArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class FindManyEmbeddingArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class FindManyEmbeddingArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    
    

class MCPServerIncludeFromWorkflowExecution(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    tools: Union[bool, 'FindManyToolArgsFromWorkflowExecutionRecursive1']


class MCPServerIncludeFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    tools: Union[bool, 'FindManyToolArgsFromWorkflowExecutionRecursive2']


class MCPServerIncludeFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    tools: Union[bool, 'FindManyToolArgsFromWorkflowExecutionRecursive3']


class MCPServerIncludeFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    tools: Union[bool, 'FindManyToolArgsFromWorkflowExecutionRecursive4']


class MCPServerIncludeFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""

    

class MCPServerArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class MCPServerArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class MCPServerArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class MCPServerArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class MCPServerArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    
    

class FindManyMCPServerArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class FindManyMCPServerArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class FindManyMCPServerArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class FindManyMCPServerArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class FindManyMCPServerArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    
    

class EvaluationIncludeFromWorkflowExecution(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive1']


class EvaluationIncludeFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive2']


class EvaluationIncludeFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive3']


class EvaluationIncludeFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""
    agent: Union[bool, 'AgentArgsFromWorkflowExecutionRecursive4']


class EvaluationIncludeFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""

    

class EvaluationArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class EvaluationArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class EvaluationArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class EvaluationArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class EvaluationArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    
    

class FindManyEvaluationArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class FindManyEvaluationArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class FindManyEvaluationArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class FindManyEvaluationArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class FindManyEvaluationArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    
    

class UserIncludeFromWorkflowExecution(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""


class UserIncludeFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""


class UserIncludeFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""


class UserIncludeFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""


class UserIncludeFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""

    

class UserArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    
    

class FindManyUserArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class SystemConfigIncludeFromWorkflowExecution(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""


class SystemConfigIncludeFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""


class SystemConfigIncludeFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""


class SystemConfigIncludeFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""


class SystemConfigIncludeFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Relational arguments for WorkflowExecution"""

    

class SystemConfigArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class SystemConfigArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class SystemConfigArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class SystemConfigArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class SystemConfigArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    
    

class FindManySystemConfigArgsFromWorkflowExecution(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class FindManySystemConfigArgsFromWorkflowExecutionRecursive1(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class FindManySystemConfigArgsFromWorkflowExecutionRecursive2(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class FindManySystemConfigArgsFromWorkflowExecutionRecursive3(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class FindManySystemConfigArgsFromWorkflowExecutionRecursive4(TypedDict, total=False):
    """Arguments for WorkflowExecution"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    


FindManyWorkflowExecutionArgs = FindManyWorkflowExecutionArgsFromWorkflowExecution
FindFirstWorkflowExecutionArgs = FindManyWorkflowExecutionArgsFromWorkflowExecution


    

class WorkflowExecutionWhereInput(TypedDict, total=False):
    """WorkflowExecution arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    workflowId: Union[_str, 'types.StringFilter']
    status: 'enums.ExecutionStatus'
    parameters: Union['fields.Json', 'types.JsonFilter']
    results: Union['fields.Json', 'types.JsonFilter']
    currentStep: Union[_int, 'types.IntFilter']
    startTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    workflow: 'WorkflowRelationFilter'

    # should be noted that AND and NOT should be Union['WorkflowExecutionWhereInputRecursive1', List['WorkflowExecutionWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['WorkflowExecutionWhereInputRecursive1']
    OR: List['WorkflowExecutionWhereInputRecursive1']
    NOT: List['WorkflowExecutionWhereInputRecursive1']


class WorkflowExecutionWhereInputRecursive1(TypedDict, total=False):
    """WorkflowExecution arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    workflowId: Union[_str, 'types.StringFilter']
    status: 'enums.ExecutionStatus'
    parameters: Union['fields.Json', 'types.JsonFilter']
    results: Union['fields.Json', 'types.JsonFilter']
    currentStep: Union[_int, 'types.IntFilter']
    startTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    workflow: 'WorkflowRelationFilter'

    # should be noted that AND and NOT should be Union['WorkflowExecutionWhereInputRecursive2', List['WorkflowExecutionWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['WorkflowExecutionWhereInputRecursive2']
    OR: List['WorkflowExecutionWhereInputRecursive2']
    NOT: List['WorkflowExecutionWhereInputRecursive2']


class WorkflowExecutionWhereInputRecursive2(TypedDict, total=False):
    """WorkflowExecution arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    workflowId: Union[_str, 'types.StringFilter']
    status: 'enums.ExecutionStatus'
    parameters: Union['fields.Json', 'types.JsonFilter']
    results: Union['fields.Json', 'types.JsonFilter']
    currentStep: Union[_int, 'types.IntFilter']
    startTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    workflow: 'WorkflowRelationFilter'

    # should be noted that AND and NOT should be Union['WorkflowExecutionWhereInputRecursive3', List['WorkflowExecutionWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['WorkflowExecutionWhereInputRecursive3']
    OR: List['WorkflowExecutionWhereInputRecursive3']
    NOT: List['WorkflowExecutionWhereInputRecursive3']


class WorkflowExecutionWhereInputRecursive3(TypedDict, total=False):
    """WorkflowExecution arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    workflowId: Union[_str, 'types.StringFilter']
    status: 'enums.ExecutionStatus'
    parameters: Union['fields.Json', 'types.JsonFilter']
    results: Union['fields.Json', 'types.JsonFilter']
    currentStep: Union[_int, 'types.IntFilter']
    startTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    workflow: 'WorkflowRelationFilter'

    # should be noted that AND and NOT should be Union['WorkflowExecutionWhereInputRecursive4', List['WorkflowExecutionWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['WorkflowExecutionWhereInputRecursive4']
    OR: List['WorkflowExecutionWhereInputRecursive4']
    NOT: List['WorkflowExecutionWhereInputRecursive4']


class WorkflowExecutionWhereInputRecursive4(TypedDict, total=False):
    """WorkflowExecution arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    workflowId: Union[_str, 'types.StringFilter']
    status: 'enums.ExecutionStatus'
    parameters: Union['fields.Json', 'types.JsonFilter']
    results: Union['fields.Json', 'types.JsonFilter']
    currentStep: Union[_int, 'types.IntFilter']
    startTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    workflow: 'WorkflowRelationFilter'



# aggregate WorkflowExecution types


    

class WorkflowExecutionScalarWhereWithAggregatesInput(TypedDict, total=False):
    """WorkflowExecution arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    workflowId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.ExecutionStatus'
    parameters: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    results: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    currentStep: Union[_int, 'types.IntWithAggregatesFilter']
    startTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['WorkflowExecutionScalarWhereWithAggregatesInputRecursive1']
    OR: List['WorkflowExecutionScalarWhereWithAggregatesInputRecursive1']
    NOT: List['WorkflowExecutionScalarWhereWithAggregatesInputRecursive1']


class WorkflowExecutionScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """WorkflowExecution arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    workflowId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.ExecutionStatus'
    parameters: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    results: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    currentStep: Union[_int, 'types.IntWithAggregatesFilter']
    startTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['WorkflowExecutionScalarWhereWithAggregatesInputRecursive2']
    OR: List['WorkflowExecutionScalarWhereWithAggregatesInputRecursive2']
    NOT: List['WorkflowExecutionScalarWhereWithAggregatesInputRecursive2']


class WorkflowExecutionScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """WorkflowExecution arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    workflowId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.ExecutionStatus'
    parameters: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    results: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    currentStep: Union[_int, 'types.IntWithAggregatesFilter']
    startTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['WorkflowExecutionScalarWhereWithAggregatesInputRecursive3']
    OR: List['WorkflowExecutionScalarWhereWithAggregatesInputRecursive3']
    NOT: List['WorkflowExecutionScalarWhereWithAggregatesInputRecursive3']


class WorkflowExecutionScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """WorkflowExecution arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    workflowId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.ExecutionStatus'
    parameters: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    results: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    currentStep: Union[_int, 'types.IntWithAggregatesFilter']
    startTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['WorkflowExecutionScalarWhereWithAggregatesInputRecursive4']
    OR: List['WorkflowExecutionScalarWhereWithAggregatesInputRecursive4']
    NOT: List['WorkflowExecutionScalarWhereWithAggregatesInputRecursive4']


class WorkflowExecutionScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """WorkflowExecution arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    workflowId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.ExecutionStatus'
    parameters: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    results: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    currentStep: Union[_int, 'types.IntWithAggregatesFilter']
    startTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class WorkflowExecutionGroupByOutput(TypedDict, total=False):
    id: _str
    workflowId: _str
    status: 'enums.ExecutionStatus'
    parameters: 'fields.Json'
    results: 'fields.Json'
    currentStep: _int
    startTime: datetime.datetime
    endTime: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'WorkflowExecutionSumAggregateOutput'
    _avg: 'WorkflowExecutionAvgAggregateOutput'
    _min: 'WorkflowExecutionMinAggregateOutput'
    _max: 'WorkflowExecutionMaxAggregateOutput'
    _count: 'WorkflowExecutionCountAggregateOutput'


class WorkflowExecutionAvgAggregateOutput(TypedDict, total=False):
    """WorkflowExecution output for aggregating averages"""
    currentStep: float


class WorkflowExecutionSumAggregateOutput(TypedDict, total=False):
    """WorkflowExecution output for aggregating sums"""
    currentStep: _int


class WorkflowExecutionScalarAggregateOutput(TypedDict, total=False):
    """WorkflowExecution output including scalar fields"""
    id: _str
    workflowId: _str
    status: 'enums.ExecutionStatus'
    parameters: 'fields.Json'
    results: 'fields.Json'
    currentStep: _int
    startTime: datetime.datetime
    endTime: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


WorkflowExecutionMinAggregateOutput = WorkflowExecutionScalarAggregateOutput
WorkflowExecutionMaxAggregateOutput = WorkflowExecutionScalarAggregateOutput


class WorkflowExecutionMaxAggregateInput(TypedDict, total=False):
    """WorkflowExecution input for aggregating by max"""
    id: bool
    workflowId: bool
    status: bool
    parameters: bool
    results: bool
    currentStep: bool
    startTime: bool
    endTime: bool
    createdAt: bool
    updatedAt: bool


class WorkflowExecutionMinAggregateInput(TypedDict, total=False):
    """WorkflowExecution input for aggregating by min"""
    id: bool
    workflowId: bool
    status: bool
    parameters: bool
    results: bool
    currentStep: bool
    startTime: bool
    endTime: bool
    createdAt: bool
    updatedAt: bool


class WorkflowExecutionNumberAggregateInput(TypedDict, total=False):
    """WorkflowExecution input for aggregating numbers"""
    currentStep: bool


WorkflowExecutionAvgAggregateInput = WorkflowExecutionNumberAggregateInput
WorkflowExecutionSumAggregateInput = WorkflowExecutionNumberAggregateInput


WorkflowExecutionCountAggregateInput = TypedDict(
    'WorkflowExecutionCountAggregateInput',
    {
        'id': bool,
        'workflowId': bool,
        'status': bool,
        'parameters': bool,
        'results': bool,
        'currentStep': bool,
        'startTime': bool,
        'endTime': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

WorkflowExecutionCountAggregateOutput = TypedDict(
    'WorkflowExecutionCountAggregateOutput',
    {
        'id': int,
        'workflowId': int,
        'status': int,
        'parameters': int,
        'results': int,
        'currentStep': int,
        'startTime': int,
        'endTime': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


WorkflowExecutionKeys = Literal[
    'id',
    'workflowId',
    'status',
    'parameters',
    'results',
    'currentStep',
    'startTime',
    'endTime',
    'createdAt',
    'updatedAt',
    'workflow',
]
WorkflowExecutionScalarFieldKeys = Literal[
    'id',
    'workflowId',
    'status',
    'parameters',
    'results',
    'currentStep',
    'startTime',
    'endTime',
    'createdAt',
    'updatedAt',
]
WorkflowExecutionScalarFieldKeysT = TypeVar('WorkflowExecutionScalarFieldKeysT', bound=WorkflowExecutionScalarFieldKeys)

WorkflowExecutionRelationalFieldKeys = Literal[
        'workflow',
    ]

# Tool types

class ToolOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Tool create method"""
    id: _str
    agentId: _str
    description: Optional[_str]
    mcpServerId: Optional[_str]
    status: 'enums.ToolStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    agent: 'AgentCreateNestedWithoutRelationsInput'
    mcpServer: 'MCPServerCreateNestedWithoutRelationsInput'
    invocations: 'ToolInvocationCreateManyNestedWithoutRelationsInput'


class ToolCreateInput(ToolOptionalCreateInput):
    """Required arguments to the Tool create method"""
    name: _str
    functionSignature: 'fields.Json'
    connectionDetails: 'fields.Json'
    securityPolicy: 'fields.Json'


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class ToolOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Tool create method, without relations"""
    id: _str
    agentId: _str
    description: Optional[_str]
    mcpServerId: Optional[_str]
    status: 'enums.ToolStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class ToolCreateWithoutRelationsInput(ToolOptionalCreateWithoutRelationsInput):
    """Required arguments to the Tool create method, without relations"""
    name: _str
    functionSignature: 'fields.Json'
    connectionDetails: 'fields.Json'
    securityPolicy: 'fields.Json'


class ToolCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'ToolCreateWithoutRelationsInput'
    connect: 'ToolWhereUniqueInput'


class ToolCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['ToolCreateWithoutRelationsInput', List['ToolCreateWithoutRelationsInput']]
    connect: Union['ToolWhereUniqueInput', List['ToolWhereUniqueInput']]


_ToolWhereUnique_id_Input = TypedDict(
    '_ToolWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

ToolWhereUniqueInput = _ToolWhereUnique_id_Input


class ToolUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    name: _str
    description: Optional[_str]
    functionSignature: 'fields.Json'
    connectionDetails: 'fields.Json'
    securityPolicy: 'fields.Json'
    status: 'enums.ToolStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    agent: 'AgentUpdateOneWithoutRelationsInput'
    mcpServer: 'MCPServerUpdateOneWithoutRelationsInput'
    invocations: 'ToolInvocationUpdateManyWithoutRelationsInput'


class ToolUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    name: _str
    description: Optional[_str]
    functionSignature: 'fields.Json'
    connectionDetails: 'fields.Json'
    securityPolicy: 'fields.Json'
    status: 'enums.ToolStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class ToolUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['ToolCreateWithoutRelationsInput']
    connect: List['ToolWhereUniqueInput']
    set: List['ToolWhereUniqueInput']
    disconnect: List['ToolWhereUniqueInput']
    delete: List['ToolWhereUniqueInput']

    # TODO
    # update: List['ToolUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['ToolUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['ToolScalarWhereInput']
    # upsert: List['ToolUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['ToolCreateOrConnectWithoutRelationsInput']


class ToolUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'ToolCreateWithoutRelationsInput'
    connect: 'ToolWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'ToolUpdateInput'
    # upsert: 'ToolUpsertWithoutRelationsInput'
    # connectOrCreate: 'ToolCreateOrConnectWithoutRelationsInput'


class ToolUpsertInput(TypedDict):
    create: 'ToolCreateInput'
    update: 'ToolUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Tool_id_OrderByInput = TypedDict(
    '_Tool_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Tool_agentId_OrderByInput = TypedDict(
    '_Tool_agentId_OrderByInput',
    {
        'agentId': 'SortOrder',
    },
    total=True
)

_Tool_name_OrderByInput = TypedDict(
    '_Tool_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_Tool_description_OrderByInput = TypedDict(
    '_Tool_description_OrderByInput',
    {
        'description': 'SortOrder',
    },
    total=True
)

_Tool_functionSignature_OrderByInput = TypedDict(
    '_Tool_functionSignature_OrderByInput',
    {
        'functionSignature': 'SortOrder',
    },
    total=True
)

_Tool_connectionDetails_OrderByInput = TypedDict(
    '_Tool_connectionDetails_OrderByInput',
    {
        'connectionDetails': 'SortOrder',
    },
    total=True
)

_Tool_securityPolicy_OrderByInput = TypedDict(
    '_Tool_securityPolicy_OrderByInput',
    {
        'securityPolicy': 'SortOrder',
    },
    total=True
)

_Tool_mcpServerId_OrderByInput = TypedDict(
    '_Tool_mcpServerId_OrderByInput',
    {
        'mcpServerId': 'SortOrder',
    },
    total=True
)

_Tool_status_OrderByInput = TypedDict(
    '_Tool_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_Tool_createdAt_OrderByInput = TypedDict(
    '_Tool_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Tool_updatedAt_OrderByInput = TypedDict(
    '_Tool_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

ToolOrderByInput = Union[
    '_Tool_id_OrderByInput',
    '_Tool_agentId_OrderByInput',
    '_Tool_name_OrderByInput',
    '_Tool_description_OrderByInput',
    '_Tool_functionSignature_OrderByInput',
    '_Tool_connectionDetails_OrderByInput',
    '_Tool_securityPolicy_OrderByInput',
    '_Tool_mcpServerId_OrderByInput',
    '_Tool_status_OrderByInput',
    '_Tool_createdAt_OrderByInput',
    '_Tool_updatedAt_OrderByInput',
]



# recursive Tool types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

ToolRelationFilter = TypedDict(
    'ToolRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class ToolListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class ToolInclude(TypedDict, total=False):
    """Tool relational arguments"""
    agent: Union[bool, 'AgentArgsFromTool']
    mcpServer: Union[bool, 'MCPServerArgsFromTool']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromTool']


    

class AgentIncludeFromTool(TypedDict, total=False):
    """Relational arguments for Tool"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromToolRecursive1']
    tools: Union[bool, 'FindManyToolArgsFromToolRecursive1']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromToolRecursive1']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromToolRecursive1']


class AgentIncludeFromToolRecursive1(TypedDict, total=False):
    """Relational arguments for Tool"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromToolRecursive2']
    tools: Union[bool, 'FindManyToolArgsFromToolRecursive2']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromToolRecursive2']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromToolRecursive2']


class AgentIncludeFromToolRecursive2(TypedDict, total=False):
    """Relational arguments for Tool"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromToolRecursive3']
    tools: Union[bool, 'FindManyToolArgsFromToolRecursive3']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromToolRecursive3']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromToolRecursive3']


class AgentIncludeFromToolRecursive3(TypedDict, total=False):
    """Relational arguments for Tool"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromToolRecursive4']
    tools: Union[bool, 'FindManyToolArgsFromToolRecursive4']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromToolRecursive4']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromToolRecursive4']


class AgentIncludeFromToolRecursive4(TypedDict, total=False):
    """Relational arguments for Tool"""

    

class AgentArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'AgentIncludeFromAgentRecursive1'


class AgentArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'AgentIncludeFromAgentRecursive2'


class AgentArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'AgentIncludeFromAgentRecursive3'


class AgentArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'AgentIncludeFromAgentRecursive4'


class AgentArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    
    

class FindManyAgentArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive1'


class FindManyAgentArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive2'


class FindManyAgentArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive3'


class FindManyAgentArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive4'


class FindManyAgentArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    
    

class WorkflowIncludeFromTool(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive1']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromToolRecursive1']


class WorkflowIncludeFromToolRecursive1(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive2']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromToolRecursive2']


class WorkflowIncludeFromToolRecursive2(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive3']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromToolRecursive3']


class WorkflowIncludeFromToolRecursive3(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive4']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromToolRecursive4']


class WorkflowIncludeFromToolRecursive4(TypedDict, total=False):
    """Relational arguments for Tool"""

    

class WorkflowArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class WorkflowArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class WorkflowArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class WorkflowArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class WorkflowArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    
    

class FindManyWorkflowArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class FindManyWorkflowArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class FindManyWorkflowArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class FindManyWorkflowArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class FindManyWorkflowArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    
    

class WorkflowExecutionIncludeFromTool(TypedDict, total=False):
    """Relational arguments for Tool"""
    workflow: Union[bool, 'WorkflowArgsFromToolRecursive1']


class WorkflowExecutionIncludeFromToolRecursive1(TypedDict, total=False):
    """Relational arguments for Tool"""
    workflow: Union[bool, 'WorkflowArgsFromToolRecursive2']


class WorkflowExecutionIncludeFromToolRecursive2(TypedDict, total=False):
    """Relational arguments for Tool"""
    workflow: Union[bool, 'WorkflowArgsFromToolRecursive3']


class WorkflowExecutionIncludeFromToolRecursive3(TypedDict, total=False):
    """Relational arguments for Tool"""
    workflow: Union[bool, 'WorkflowArgsFromToolRecursive4']


class WorkflowExecutionIncludeFromToolRecursive4(TypedDict, total=False):
    """Relational arguments for Tool"""

    

class WorkflowExecutionArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class WorkflowExecutionArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class WorkflowExecutionArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class WorkflowExecutionArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class WorkflowExecutionArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    
    

class FindManyWorkflowExecutionArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class FindManyWorkflowExecutionArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class FindManyWorkflowExecutionArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class FindManyWorkflowExecutionArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class FindManyWorkflowExecutionArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    
    

class ToolIncludeFromTool(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive1']
    mcpServer: Union[bool, 'MCPServerArgsFromToolRecursive1']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromToolRecursive1']


class ToolIncludeFromToolRecursive1(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive2']
    mcpServer: Union[bool, 'MCPServerArgsFromToolRecursive2']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromToolRecursive2']


class ToolIncludeFromToolRecursive2(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive3']
    mcpServer: Union[bool, 'MCPServerArgsFromToolRecursive3']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromToolRecursive3']


class ToolIncludeFromToolRecursive3(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive4']
    mcpServer: Union[bool, 'MCPServerArgsFromToolRecursive4']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromToolRecursive4']


class ToolIncludeFromToolRecursive4(TypedDict, total=False):
    """Relational arguments for Tool"""

    

class ToolArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'ToolIncludeFromToolRecursive1'


class ToolArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'ToolIncludeFromToolRecursive2'


class ToolArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'ToolIncludeFromToolRecursive3'


class ToolArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'ToolIncludeFromToolRecursive4'


class ToolArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    
    

class FindManyToolArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive1'


class FindManyToolArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive2'


class FindManyToolArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive3'


class FindManyToolArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive4'


class FindManyToolArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    
    

class ToolInvocationIncludeFromTool(TypedDict, total=False):
    """Relational arguments for Tool"""
    tool: Union[bool, 'ToolArgsFromToolRecursive1']


class ToolInvocationIncludeFromToolRecursive1(TypedDict, total=False):
    """Relational arguments for Tool"""
    tool: Union[bool, 'ToolArgsFromToolRecursive2']


class ToolInvocationIncludeFromToolRecursive2(TypedDict, total=False):
    """Relational arguments for Tool"""
    tool: Union[bool, 'ToolArgsFromToolRecursive3']


class ToolInvocationIncludeFromToolRecursive3(TypedDict, total=False):
    """Relational arguments for Tool"""
    tool: Union[bool, 'ToolArgsFromToolRecursive4']


class ToolInvocationIncludeFromToolRecursive4(TypedDict, total=False):
    """Relational arguments for Tool"""

    

class ToolInvocationArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class ToolInvocationArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class ToolInvocationArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class ToolInvocationArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class ToolInvocationArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    
    

class FindManyToolInvocationArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class FindManyToolInvocationArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class FindManyToolInvocationArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class FindManyToolInvocationArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class FindManyToolInvocationArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    
    

class ConversationSessionIncludeFromTool(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromToolRecursive1']


class ConversationSessionIncludeFromToolRecursive1(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromToolRecursive2']


class ConversationSessionIncludeFromToolRecursive2(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromToolRecursive3']


class ConversationSessionIncludeFromToolRecursive3(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromToolRecursive4']


class ConversationSessionIncludeFromToolRecursive4(TypedDict, total=False):
    """Relational arguments for Tool"""

    

class ConversationSessionArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class ConversationSessionArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class ConversationSessionArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class ConversationSessionArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class ConversationSessionArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    
    

class FindManyConversationSessionArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class FindManyConversationSessionArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class FindManyConversationSessionArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class FindManyConversationSessionArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class FindManyConversationSessionArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    
    

class MessageIncludeFromTool(TypedDict, total=False):
    """Relational arguments for Tool"""
    session: Union[bool, 'ConversationSessionArgsFromToolRecursive1']


class MessageIncludeFromToolRecursive1(TypedDict, total=False):
    """Relational arguments for Tool"""
    session: Union[bool, 'ConversationSessionArgsFromToolRecursive2']


class MessageIncludeFromToolRecursive2(TypedDict, total=False):
    """Relational arguments for Tool"""
    session: Union[bool, 'ConversationSessionArgsFromToolRecursive3']


class MessageIncludeFromToolRecursive3(TypedDict, total=False):
    """Relational arguments for Tool"""
    session: Union[bool, 'ConversationSessionArgsFromToolRecursive4']


class MessageIncludeFromToolRecursive4(TypedDict, total=False):
    """Relational arguments for Tool"""

    

class MessageArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    
    

class FindManyMessageArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class VectorStoreIncludeFromTool(TypedDict, total=False):
    """Relational arguments for Tool"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromToolRecursive1']


class VectorStoreIncludeFromToolRecursive1(TypedDict, total=False):
    """Relational arguments for Tool"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromToolRecursive2']


class VectorStoreIncludeFromToolRecursive2(TypedDict, total=False):
    """Relational arguments for Tool"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromToolRecursive3']


class VectorStoreIncludeFromToolRecursive3(TypedDict, total=False):
    """Relational arguments for Tool"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromToolRecursive4']


class VectorStoreIncludeFromToolRecursive4(TypedDict, total=False):
    """Relational arguments for Tool"""

    

class VectorStoreArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class VectorStoreArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class VectorStoreArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class VectorStoreArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class VectorStoreArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    
    

class FindManyVectorStoreArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class FindManyVectorStoreArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class FindManyVectorStoreArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class FindManyVectorStoreArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class FindManyVectorStoreArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    
    

class EmbeddingIncludeFromTool(TypedDict, total=False):
    """Relational arguments for Tool"""
    vectorStore: Union[bool, 'VectorStoreArgsFromToolRecursive1']


class EmbeddingIncludeFromToolRecursive1(TypedDict, total=False):
    """Relational arguments for Tool"""
    vectorStore: Union[bool, 'VectorStoreArgsFromToolRecursive2']


class EmbeddingIncludeFromToolRecursive2(TypedDict, total=False):
    """Relational arguments for Tool"""
    vectorStore: Union[bool, 'VectorStoreArgsFromToolRecursive3']


class EmbeddingIncludeFromToolRecursive3(TypedDict, total=False):
    """Relational arguments for Tool"""
    vectorStore: Union[bool, 'VectorStoreArgsFromToolRecursive4']


class EmbeddingIncludeFromToolRecursive4(TypedDict, total=False):
    """Relational arguments for Tool"""

    

class EmbeddingArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class EmbeddingArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class EmbeddingArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class EmbeddingArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class EmbeddingArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    
    

class FindManyEmbeddingArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class FindManyEmbeddingArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class FindManyEmbeddingArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class FindManyEmbeddingArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class FindManyEmbeddingArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    
    

class MCPServerIncludeFromTool(TypedDict, total=False):
    """Relational arguments for Tool"""
    tools: Union[bool, 'FindManyToolArgsFromToolRecursive1']


class MCPServerIncludeFromToolRecursive1(TypedDict, total=False):
    """Relational arguments for Tool"""
    tools: Union[bool, 'FindManyToolArgsFromToolRecursive2']


class MCPServerIncludeFromToolRecursive2(TypedDict, total=False):
    """Relational arguments for Tool"""
    tools: Union[bool, 'FindManyToolArgsFromToolRecursive3']


class MCPServerIncludeFromToolRecursive3(TypedDict, total=False):
    """Relational arguments for Tool"""
    tools: Union[bool, 'FindManyToolArgsFromToolRecursive4']


class MCPServerIncludeFromToolRecursive4(TypedDict, total=False):
    """Relational arguments for Tool"""

    

class MCPServerArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class MCPServerArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class MCPServerArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class MCPServerArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class MCPServerArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    
    

class FindManyMCPServerArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class FindManyMCPServerArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class FindManyMCPServerArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class FindManyMCPServerArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class FindManyMCPServerArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    
    

class EvaluationIncludeFromTool(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive1']


class EvaluationIncludeFromToolRecursive1(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive2']


class EvaluationIncludeFromToolRecursive2(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive3']


class EvaluationIncludeFromToolRecursive3(TypedDict, total=False):
    """Relational arguments for Tool"""
    agent: Union[bool, 'AgentArgsFromToolRecursive4']


class EvaluationIncludeFromToolRecursive4(TypedDict, total=False):
    """Relational arguments for Tool"""

    

class EvaluationArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class EvaluationArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class EvaluationArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class EvaluationArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class EvaluationArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    
    

class FindManyEvaluationArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class FindManyEvaluationArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class FindManyEvaluationArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class FindManyEvaluationArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class FindManyEvaluationArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    
    

class UserIncludeFromTool(TypedDict, total=False):
    """Relational arguments for Tool"""


class UserIncludeFromToolRecursive1(TypedDict, total=False):
    """Relational arguments for Tool"""


class UserIncludeFromToolRecursive2(TypedDict, total=False):
    """Relational arguments for Tool"""


class UserIncludeFromToolRecursive3(TypedDict, total=False):
    """Relational arguments for Tool"""


class UserIncludeFromToolRecursive4(TypedDict, total=False):
    """Relational arguments for Tool"""

    

class UserArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    
    

class FindManyUserArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class SystemConfigIncludeFromTool(TypedDict, total=False):
    """Relational arguments for Tool"""


class SystemConfigIncludeFromToolRecursive1(TypedDict, total=False):
    """Relational arguments for Tool"""


class SystemConfigIncludeFromToolRecursive2(TypedDict, total=False):
    """Relational arguments for Tool"""


class SystemConfigIncludeFromToolRecursive3(TypedDict, total=False):
    """Relational arguments for Tool"""


class SystemConfigIncludeFromToolRecursive4(TypedDict, total=False):
    """Relational arguments for Tool"""

    

class SystemConfigArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class SystemConfigArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class SystemConfigArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class SystemConfigArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class SystemConfigArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    
    

class FindManySystemConfigArgsFromTool(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class FindManySystemConfigArgsFromToolRecursive1(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class FindManySystemConfigArgsFromToolRecursive2(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class FindManySystemConfigArgsFromToolRecursive3(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class FindManySystemConfigArgsFromToolRecursive4(TypedDict, total=False):
    """Arguments for Tool"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    


FindManyToolArgs = FindManyToolArgsFromTool
FindFirstToolArgs = FindManyToolArgsFromTool


    

class ToolWhereInput(TypedDict, total=False):
    """Tool arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    functionSignature: Union['fields.Json', 'types.JsonFilter']
    connectionDetails: Union['fields.Json', 'types.JsonFilter']
    securityPolicy: Union['fields.Json', 'types.JsonFilter']
    mcpServerId: Union[None, _str, 'types.StringFilter']
    status: 'enums.ToolStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    mcpServer: 'MCPServerRelationFilter'
    invocations: 'ToolInvocationListRelationFilter'

    # should be noted that AND and NOT should be Union['ToolWhereInputRecursive1', List['ToolWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['ToolWhereInputRecursive1']
    OR: List['ToolWhereInputRecursive1']
    NOT: List['ToolWhereInputRecursive1']


class ToolWhereInputRecursive1(TypedDict, total=False):
    """Tool arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    functionSignature: Union['fields.Json', 'types.JsonFilter']
    connectionDetails: Union['fields.Json', 'types.JsonFilter']
    securityPolicy: Union['fields.Json', 'types.JsonFilter']
    mcpServerId: Union[None, _str, 'types.StringFilter']
    status: 'enums.ToolStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    mcpServer: 'MCPServerRelationFilter'
    invocations: 'ToolInvocationListRelationFilter'

    # should be noted that AND and NOT should be Union['ToolWhereInputRecursive2', List['ToolWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['ToolWhereInputRecursive2']
    OR: List['ToolWhereInputRecursive2']
    NOT: List['ToolWhereInputRecursive2']


class ToolWhereInputRecursive2(TypedDict, total=False):
    """Tool arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    functionSignature: Union['fields.Json', 'types.JsonFilter']
    connectionDetails: Union['fields.Json', 'types.JsonFilter']
    securityPolicy: Union['fields.Json', 'types.JsonFilter']
    mcpServerId: Union[None, _str, 'types.StringFilter']
    status: 'enums.ToolStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    mcpServer: 'MCPServerRelationFilter'
    invocations: 'ToolInvocationListRelationFilter'

    # should be noted that AND and NOT should be Union['ToolWhereInputRecursive3', List['ToolWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['ToolWhereInputRecursive3']
    OR: List['ToolWhereInputRecursive3']
    NOT: List['ToolWhereInputRecursive3']


class ToolWhereInputRecursive3(TypedDict, total=False):
    """Tool arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    functionSignature: Union['fields.Json', 'types.JsonFilter']
    connectionDetails: Union['fields.Json', 'types.JsonFilter']
    securityPolicy: Union['fields.Json', 'types.JsonFilter']
    mcpServerId: Union[None, _str, 'types.StringFilter']
    status: 'enums.ToolStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    mcpServer: 'MCPServerRelationFilter'
    invocations: 'ToolInvocationListRelationFilter'

    # should be noted that AND and NOT should be Union['ToolWhereInputRecursive4', List['ToolWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['ToolWhereInputRecursive4']
    OR: List['ToolWhereInputRecursive4']
    NOT: List['ToolWhereInputRecursive4']


class ToolWhereInputRecursive4(TypedDict, total=False):
    """Tool arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    functionSignature: Union['fields.Json', 'types.JsonFilter']
    connectionDetails: Union['fields.Json', 'types.JsonFilter']
    securityPolicy: Union['fields.Json', 'types.JsonFilter']
    mcpServerId: Union[None, _str, 'types.StringFilter']
    status: 'enums.ToolStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    mcpServer: 'MCPServerRelationFilter'
    invocations: 'ToolInvocationListRelationFilter'



# aggregate Tool types


    

class ToolScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Tool arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    functionSignature: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    connectionDetails: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    securityPolicy: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    mcpServerId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.ToolStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ToolScalarWhereWithAggregatesInputRecursive1']
    OR: List['ToolScalarWhereWithAggregatesInputRecursive1']
    NOT: List['ToolScalarWhereWithAggregatesInputRecursive1']


class ToolScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Tool arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    functionSignature: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    connectionDetails: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    securityPolicy: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    mcpServerId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.ToolStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ToolScalarWhereWithAggregatesInputRecursive2']
    OR: List['ToolScalarWhereWithAggregatesInputRecursive2']
    NOT: List['ToolScalarWhereWithAggregatesInputRecursive2']


class ToolScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Tool arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    functionSignature: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    connectionDetails: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    securityPolicy: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    mcpServerId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.ToolStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ToolScalarWhereWithAggregatesInputRecursive3']
    OR: List['ToolScalarWhereWithAggregatesInputRecursive3']
    NOT: List['ToolScalarWhereWithAggregatesInputRecursive3']


class ToolScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Tool arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    functionSignature: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    connectionDetails: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    securityPolicy: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    mcpServerId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.ToolStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ToolScalarWhereWithAggregatesInputRecursive4']
    OR: List['ToolScalarWhereWithAggregatesInputRecursive4']
    NOT: List['ToolScalarWhereWithAggregatesInputRecursive4']


class ToolScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Tool arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    functionSignature: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    connectionDetails: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    securityPolicy: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    mcpServerId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.ToolStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class ToolGroupByOutput(TypedDict, total=False):
    id: _str
    agentId: _str
    name: _str
    description: _str
    functionSignature: 'fields.Json'
    connectionDetails: 'fields.Json'
    securityPolicy: 'fields.Json'
    mcpServerId: _str
    status: 'enums.ToolStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'ToolSumAggregateOutput'
    _avg: 'ToolAvgAggregateOutput'
    _min: 'ToolMinAggregateOutput'
    _max: 'ToolMaxAggregateOutput'
    _count: 'ToolCountAggregateOutput'


class ToolAvgAggregateOutput(TypedDict, total=False):
    """Tool output for aggregating averages"""


class ToolSumAggregateOutput(TypedDict, total=False):
    """Tool output for aggregating sums"""


class ToolScalarAggregateOutput(TypedDict, total=False):
    """Tool output including scalar fields"""
    id: _str
    agentId: _str
    name: _str
    description: _str
    functionSignature: 'fields.Json'
    connectionDetails: 'fields.Json'
    securityPolicy: 'fields.Json'
    mcpServerId: _str
    status: 'enums.ToolStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


ToolMinAggregateOutput = ToolScalarAggregateOutput
ToolMaxAggregateOutput = ToolScalarAggregateOutput


class ToolMaxAggregateInput(TypedDict, total=False):
    """Tool input for aggregating by max"""
    id: bool
    agentId: bool
    name: bool
    description: bool
    functionSignature: bool
    connectionDetails: bool
    securityPolicy: bool
    mcpServerId: bool
    status: bool
    createdAt: bool
    updatedAt: bool


class ToolMinAggregateInput(TypedDict, total=False):
    """Tool input for aggregating by min"""
    id: bool
    agentId: bool
    name: bool
    description: bool
    functionSignature: bool
    connectionDetails: bool
    securityPolicy: bool
    mcpServerId: bool
    status: bool
    createdAt: bool
    updatedAt: bool


class ToolNumberAggregateInput(TypedDict, total=False):
    """Tool input for aggregating numbers"""


ToolAvgAggregateInput = ToolNumberAggregateInput
ToolSumAggregateInput = ToolNumberAggregateInput


ToolCountAggregateInput = TypedDict(
    'ToolCountAggregateInput',
    {
        'id': bool,
        'agentId': bool,
        'name': bool,
        'description': bool,
        'functionSignature': bool,
        'connectionDetails': bool,
        'securityPolicy': bool,
        'mcpServerId': bool,
        'status': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

ToolCountAggregateOutput = TypedDict(
    'ToolCountAggregateOutput',
    {
        'id': int,
        'agentId': int,
        'name': int,
        'description': int,
        'functionSignature': int,
        'connectionDetails': int,
        'securityPolicy': int,
        'mcpServerId': int,
        'status': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


ToolKeys = Literal[
    'id',
    'agentId',
    'name',
    'description',
    'functionSignature',
    'connectionDetails',
    'securityPolicy',
    'mcpServerId',
    'status',
    'createdAt',
    'updatedAt',
    'agent',
    'mcpServer',
    'invocations',
]
ToolScalarFieldKeys = Literal[
    'id',
    'agentId',
    'name',
    'description',
    'functionSignature',
    'connectionDetails',
    'securityPolicy',
    'mcpServerId',
    'status',
    'createdAt',
    'updatedAt',
]
ToolScalarFieldKeysT = TypeVar('ToolScalarFieldKeysT', bound=ToolScalarFieldKeys)

ToolRelationalFieldKeys = Literal[
        'agent',
        'mcpServer',
        'invocations',
    ]

# ToolInvocation types

class ToolInvocationOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the ToolInvocation create method"""
    id: _str
    toolId: _str
    parameters: 'fields.Json'
    context: 'fields.Json'
    result: Optional['fields.Json']
    status: _str
    duration: Optional[_int]
    createdAt: datetime.datetime
    completedAt: Optional[datetime.datetime]
    tool: 'ToolCreateNestedWithoutRelationsInput'


class ToolInvocationCreateInput(ToolInvocationOptionalCreateInput):
    """Required arguments to the ToolInvocation create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class ToolInvocationOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the ToolInvocation create method, without relations"""
    id: _str
    toolId: _str
    parameters: 'fields.Json'
    context: 'fields.Json'
    result: Optional['fields.Json']
    status: _str
    duration: Optional[_int]
    createdAt: datetime.datetime
    completedAt: Optional[datetime.datetime]


class ToolInvocationCreateWithoutRelationsInput(ToolInvocationOptionalCreateWithoutRelationsInput):
    """Required arguments to the ToolInvocation create method, without relations"""


class ToolInvocationCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'ToolInvocationCreateWithoutRelationsInput'
    connect: 'ToolInvocationWhereUniqueInput'


class ToolInvocationCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['ToolInvocationCreateWithoutRelationsInput', List['ToolInvocationCreateWithoutRelationsInput']]
    connect: Union['ToolInvocationWhereUniqueInput', List['ToolInvocationWhereUniqueInput']]


_ToolInvocationWhereUnique_id_Input = TypedDict(
    '_ToolInvocationWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

ToolInvocationWhereUniqueInput = _ToolInvocationWhereUnique_id_Input


class ToolInvocationUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    parameters: 'fields.Json'
    context: 'fields.Json'
    result: Optional['fields.Json']
    status: _str
    duration: Optional[Union[AtomicIntInput, _int]]
    createdAt: datetime.datetime
    completedAt: Optional[datetime.datetime]
    tool: 'ToolUpdateOneWithoutRelationsInput'


class ToolInvocationUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    parameters: 'fields.Json'
    context: 'fields.Json'
    result: Optional['fields.Json']
    status: _str
    duration: Optional[Union[AtomicIntInput, _int]]
    createdAt: datetime.datetime
    completedAt: Optional[datetime.datetime]


class ToolInvocationUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['ToolInvocationCreateWithoutRelationsInput']
    connect: List['ToolInvocationWhereUniqueInput']
    set: List['ToolInvocationWhereUniqueInput']
    disconnect: List['ToolInvocationWhereUniqueInput']
    delete: List['ToolInvocationWhereUniqueInput']

    # TODO
    # update: List['ToolInvocationUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['ToolInvocationUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['ToolInvocationScalarWhereInput']
    # upsert: List['ToolInvocationUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['ToolInvocationCreateOrConnectWithoutRelationsInput']


class ToolInvocationUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'ToolInvocationCreateWithoutRelationsInput'
    connect: 'ToolInvocationWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'ToolInvocationUpdateInput'
    # upsert: 'ToolInvocationUpsertWithoutRelationsInput'
    # connectOrCreate: 'ToolInvocationCreateOrConnectWithoutRelationsInput'


class ToolInvocationUpsertInput(TypedDict):
    create: 'ToolInvocationCreateInput'
    update: 'ToolInvocationUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_ToolInvocation_id_OrderByInput = TypedDict(
    '_ToolInvocation_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_ToolInvocation_toolId_OrderByInput = TypedDict(
    '_ToolInvocation_toolId_OrderByInput',
    {
        'toolId': 'SortOrder',
    },
    total=True
)

_ToolInvocation_parameters_OrderByInput = TypedDict(
    '_ToolInvocation_parameters_OrderByInput',
    {
        'parameters': 'SortOrder',
    },
    total=True
)

_ToolInvocation_context_OrderByInput = TypedDict(
    '_ToolInvocation_context_OrderByInput',
    {
        'context': 'SortOrder',
    },
    total=True
)

_ToolInvocation_result_OrderByInput = TypedDict(
    '_ToolInvocation_result_OrderByInput',
    {
        'result': 'SortOrder',
    },
    total=True
)

_ToolInvocation_status_OrderByInput = TypedDict(
    '_ToolInvocation_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_ToolInvocation_duration_OrderByInput = TypedDict(
    '_ToolInvocation_duration_OrderByInput',
    {
        'duration': 'SortOrder',
    },
    total=True
)

_ToolInvocation_createdAt_OrderByInput = TypedDict(
    '_ToolInvocation_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_ToolInvocation_completedAt_OrderByInput = TypedDict(
    '_ToolInvocation_completedAt_OrderByInput',
    {
        'completedAt': 'SortOrder',
    },
    total=True
)

ToolInvocationOrderByInput = Union[
    '_ToolInvocation_id_OrderByInput',
    '_ToolInvocation_toolId_OrderByInput',
    '_ToolInvocation_parameters_OrderByInput',
    '_ToolInvocation_context_OrderByInput',
    '_ToolInvocation_result_OrderByInput',
    '_ToolInvocation_status_OrderByInput',
    '_ToolInvocation_duration_OrderByInput',
    '_ToolInvocation_createdAt_OrderByInput',
    '_ToolInvocation_completedAt_OrderByInput',
]



# recursive ToolInvocation types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

ToolInvocationRelationFilter = TypedDict(
    'ToolInvocationRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class ToolInvocationListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class ToolInvocationInclude(TypedDict, total=False):
    """ToolInvocation relational arguments"""
    tool: Union[bool, 'ToolArgsFromToolInvocation']


    

class AgentIncludeFromToolInvocation(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromToolInvocationRecursive1']
    tools: Union[bool, 'FindManyToolArgsFromToolInvocationRecursive1']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromToolInvocationRecursive1']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromToolInvocationRecursive1']


class AgentIncludeFromToolInvocationRecursive1(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromToolInvocationRecursive2']
    tools: Union[bool, 'FindManyToolArgsFromToolInvocationRecursive2']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromToolInvocationRecursive2']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromToolInvocationRecursive2']


class AgentIncludeFromToolInvocationRecursive2(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromToolInvocationRecursive3']
    tools: Union[bool, 'FindManyToolArgsFromToolInvocationRecursive3']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromToolInvocationRecursive3']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromToolInvocationRecursive3']


class AgentIncludeFromToolInvocationRecursive3(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromToolInvocationRecursive4']
    tools: Union[bool, 'FindManyToolArgsFromToolInvocationRecursive4']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromToolInvocationRecursive4']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromToolInvocationRecursive4']


class AgentIncludeFromToolInvocationRecursive4(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""

    

class AgentArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'AgentIncludeFromAgentRecursive1'


class AgentArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'AgentIncludeFromAgentRecursive2'


class AgentArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'AgentIncludeFromAgentRecursive3'


class AgentArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'AgentIncludeFromAgentRecursive4'


class AgentArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    
    

class FindManyAgentArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive1'


class FindManyAgentArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive2'


class FindManyAgentArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive3'


class FindManyAgentArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive4'


class FindManyAgentArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    
    

class WorkflowIncludeFromToolInvocation(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive1']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromToolInvocationRecursive1']


class WorkflowIncludeFromToolInvocationRecursive1(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive2']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromToolInvocationRecursive2']


class WorkflowIncludeFromToolInvocationRecursive2(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive3']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromToolInvocationRecursive3']


class WorkflowIncludeFromToolInvocationRecursive3(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive4']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromToolInvocationRecursive4']


class WorkflowIncludeFromToolInvocationRecursive4(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""

    

class WorkflowArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class WorkflowArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class WorkflowArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class WorkflowArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class WorkflowArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    
    

class FindManyWorkflowArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class FindManyWorkflowArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class FindManyWorkflowArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class FindManyWorkflowArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class FindManyWorkflowArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    
    

class WorkflowExecutionIncludeFromToolInvocation(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    workflow: Union[bool, 'WorkflowArgsFromToolInvocationRecursive1']


class WorkflowExecutionIncludeFromToolInvocationRecursive1(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    workflow: Union[bool, 'WorkflowArgsFromToolInvocationRecursive2']


class WorkflowExecutionIncludeFromToolInvocationRecursive2(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    workflow: Union[bool, 'WorkflowArgsFromToolInvocationRecursive3']


class WorkflowExecutionIncludeFromToolInvocationRecursive3(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    workflow: Union[bool, 'WorkflowArgsFromToolInvocationRecursive4']


class WorkflowExecutionIncludeFromToolInvocationRecursive4(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""

    

class WorkflowExecutionArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class WorkflowExecutionArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class WorkflowExecutionArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class WorkflowExecutionArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class WorkflowExecutionArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    
    

class FindManyWorkflowExecutionArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class FindManyWorkflowExecutionArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class FindManyWorkflowExecutionArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class FindManyWorkflowExecutionArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class FindManyWorkflowExecutionArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    
    

class ToolIncludeFromToolInvocation(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive1']
    mcpServer: Union[bool, 'MCPServerArgsFromToolInvocationRecursive1']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromToolInvocationRecursive1']


class ToolIncludeFromToolInvocationRecursive1(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive2']
    mcpServer: Union[bool, 'MCPServerArgsFromToolInvocationRecursive2']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromToolInvocationRecursive2']


class ToolIncludeFromToolInvocationRecursive2(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive3']
    mcpServer: Union[bool, 'MCPServerArgsFromToolInvocationRecursive3']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromToolInvocationRecursive3']


class ToolIncludeFromToolInvocationRecursive3(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive4']
    mcpServer: Union[bool, 'MCPServerArgsFromToolInvocationRecursive4']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromToolInvocationRecursive4']


class ToolIncludeFromToolInvocationRecursive4(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""

    

class ToolArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'ToolIncludeFromToolRecursive1'


class ToolArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'ToolIncludeFromToolRecursive2'


class ToolArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'ToolIncludeFromToolRecursive3'


class ToolArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'ToolIncludeFromToolRecursive4'


class ToolArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    
    

class FindManyToolArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive1'


class FindManyToolArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive2'


class FindManyToolArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive3'


class FindManyToolArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive4'


class FindManyToolArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    
    

class ToolInvocationIncludeFromToolInvocation(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    tool: Union[bool, 'ToolArgsFromToolInvocationRecursive1']


class ToolInvocationIncludeFromToolInvocationRecursive1(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    tool: Union[bool, 'ToolArgsFromToolInvocationRecursive2']


class ToolInvocationIncludeFromToolInvocationRecursive2(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    tool: Union[bool, 'ToolArgsFromToolInvocationRecursive3']


class ToolInvocationIncludeFromToolInvocationRecursive3(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    tool: Union[bool, 'ToolArgsFromToolInvocationRecursive4']


class ToolInvocationIncludeFromToolInvocationRecursive4(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""

    

class ToolInvocationArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class ToolInvocationArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class ToolInvocationArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class ToolInvocationArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class ToolInvocationArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    
    

class FindManyToolInvocationArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class FindManyToolInvocationArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class FindManyToolInvocationArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class FindManyToolInvocationArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class FindManyToolInvocationArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    
    

class ConversationSessionIncludeFromToolInvocation(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromToolInvocationRecursive1']


class ConversationSessionIncludeFromToolInvocationRecursive1(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromToolInvocationRecursive2']


class ConversationSessionIncludeFromToolInvocationRecursive2(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromToolInvocationRecursive3']


class ConversationSessionIncludeFromToolInvocationRecursive3(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromToolInvocationRecursive4']


class ConversationSessionIncludeFromToolInvocationRecursive4(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""

    

class ConversationSessionArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class ConversationSessionArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class ConversationSessionArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class ConversationSessionArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class ConversationSessionArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    
    

class FindManyConversationSessionArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class FindManyConversationSessionArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class FindManyConversationSessionArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class FindManyConversationSessionArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class FindManyConversationSessionArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    
    

class MessageIncludeFromToolInvocation(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    session: Union[bool, 'ConversationSessionArgsFromToolInvocationRecursive1']


class MessageIncludeFromToolInvocationRecursive1(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    session: Union[bool, 'ConversationSessionArgsFromToolInvocationRecursive2']


class MessageIncludeFromToolInvocationRecursive2(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    session: Union[bool, 'ConversationSessionArgsFromToolInvocationRecursive3']


class MessageIncludeFromToolInvocationRecursive3(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    session: Union[bool, 'ConversationSessionArgsFromToolInvocationRecursive4']


class MessageIncludeFromToolInvocationRecursive4(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""

    

class MessageArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    
    

class FindManyMessageArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class VectorStoreIncludeFromToolInvocation(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromToolInvocationRecursive1']


class VectorStoreIncludeFromToolInvocationRecursive1(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromToolInvocationRecursive2']


class VectorStoreIncludeFromToolInvocationRecursive2(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromToolInvocationRecursive3']


class VectorStoreIncludeFromToolInvocationRecursive3(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromToolInvocationRecursive4']


class VectorStoreIncludeFromToolInvocationRecursive4(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""

    

class VectorStoreArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class VectorStoreArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class VectorStoreArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class VectorStoreArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class VectorStoreArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    
    

class FindManyVectorStoreArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class FindManyVectorStoreArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class FindManyVectorStoreArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class FindManyVectorStoreArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class FindManyVectorStoreArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    
    

class EmbeddingIncludeFromToolInvocation(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    vectorStore: Union[bool, 'VectorStoreArgsFromToolInvocationRecursive1']


class EmbeddingIncludeFromToolInvocationRecursive1(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    vectorStore: Union[bool, 'VectorStoreArgsFromToolInvocationRecursive2']


class EmbeddingIncludeFromToolInvocationRecursive2(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    vectorStore: Union[bool, 'VectorStoreArgsFromToolInvocationRecursive3']


class EmbeddingIncludeFromToolInvocationRecursive3(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    vectorStore: Union[bool, 'VectorStoreArgsFromToolInvocationRecursive4']


class EmbeddingIncludeFromToolInvocationRecursive4(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""

    

class EmbeddingArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class EmbeddingArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class EmbeddingArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class EmbeddingArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class EmbeddingArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    
    

class FindManyEmbeddingArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class FindManyEmbeddingArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class FindManyEmbeddingArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class FindManyEmbeddingArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class FindManyEmbeddingArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    
    

class MCPServerIncludeFromToolInvocation(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    tools: Union[bool, 'FindManyToolArgsFromToolInvocationRecursive1']


class MCPServerIncludeFromToolInvocationRecursive1(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    tools: Union[bool, 'FindManyToolArgsFromToolInvocationRecursive2']


class MCPServerIncludeFromToolInvocationRecursive2(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    tools: Union[bool, 'FindManyToolArgsFromToolInvocationRecursive3']


class MCPServerIncludeFromToolInvocationRecursive3(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    tools: Union[bool, 'FindManyToolArgsFromToolInvocationRecursive4']


class MCPServerIncludeFromToolInvocationRecursive4(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""

    

class MCPServerArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class MCPServerArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class MCPServerArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class MCPServerArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class MCPServerArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    
    

class FindManyMCPServerArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class FindManyMCPServerArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class FindManyMCPServerArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class FindManyMCPServerArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class FindManyMCPServerArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    
    

class EvaluationIncludeFromToolInvocation(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive1']


class EvaluationIncludeFromToolInvocationRecursive1(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive2']


class EvaluationIncludeFromToolInvocationRecursive2(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive3']


class EvaluationIncludeFromToolInvocationRecursive3(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""
    agent: Union[bool, 'AgentArgsFromToolInvocationRecursive4']


class EvaluationIncludeFromToolInvocationRecursive4(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""

    

class EvaluationArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class EvaluationArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class EvaluationArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class EvaluationArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class EvaluationArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    
    

class FindManyEvaluationArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class FindManyEvaluationArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class FindManyEvaluationArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class FindManyEvaluationArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class FindManyEvaluationArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    
    

class UserIncludeFromToolInvocation(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""


class UserIncludeFromToolInvocationRecursive1(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""


class UserIncludeFromToolInvocationRecursive2(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""


class UserIncludeFromToolInvocationRecursive3(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""


class UserIncludeFromToolInvocationRecursive4(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""

    

class UserArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    
    

class FindManyUserArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class SystemConfigIncludeFromToolInvocation(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""


class SystemConfigIncludeFromToolInvocationRecursive1(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""


class SystemConfigIncludeFromToolInvocationRecursive2(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""


class SystemConfigIncludeFromToolInvocationRecursive3(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""


class SystemConfigIncludeFromToolInvocationRecursive4(TypedDict, total=False):
    """Relational arguments for ToolInvocation"""

    

class SystemConfigArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class SystemConfigArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class SystemConfigArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class SystemConfigArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class SystemConfigArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    
    

class FindManySystemConfigArgsFromToolInvocation(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class FindManySystemConfigArgsFromToolInvocationRecursive1(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class FindManySystemConfigArgsFromToolInvocationRecursive2(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class FindManySystemConfigArgsFromToolInvocationRecursive3(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class FindManySystemConfigArgsFromToolInvocationRecursive4(TypedDict, total=False):
    """Arguments for ToolInvocation"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    


FindManyToolInvocationArgs = FindManyToolInvocationArgsFromToolInvocation
FindFirstToolInvocationArgs = FindManyToolInvocationArgsFromToolInvocation


    

class ToolInvocationWhereInput(TypedDict, total=False):
    """ToolInvocation arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    toolId: Union[_str, 'types.StringFilter']
    parameters: Union['fields.Json', 'types.JsonFilter']
    context: Union['fields.Json', 'types.JsonFilter']
    result: Union[None, 'fields.Json', 'types.JsonFilter']
    status: Union[_str, 'types.StringFilter']
    duration: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    tool: 'ToolRelationFilter'

    # should be noted that AND and NOT should be Union['ToolInvocationWhereInputRecursive1', List['ToolInvocationWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['ToolInvocationWhereInputRecursive1']
    OR: List['ToolInvocationWhereInputRecursive1']
    NOT: List['ToolInvocationWhereInputRecursive1']


class ToolInvocationWhereInputRecursive1(TypedDict, total=False):
    """ToolInvocation arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    toolId: Union[_str, 'types.StringFilter']
    parameters: Union['fields.Json', 'types.JsonFilter']
    context: Union['fields.Json', 'types.JsonFilter']
    result: Union[None, 'fields.Json', 'types.JsonFilter']
    status: Union[_str, 'types.StringFilter']
    duration: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    tool: 'ToolRelationFilter'

    # should be noted that AND and NOT should be Union['ToolInvocationWhereInputRecursive2', List['ToolInvocationWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['ToolInvocationWhereInputRecursive2']
    OR: List['ToolInvocationWhereInputRecursive2']
    NOT: List['ToolInvocationWhereInputRecursive2']


class ToolInvocationWhereInputRecursive2(TypedDict, total=False):
    """ToolInvocation arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    toolId: Union[_str, 'types.StringFilter']
    parameters: Union['fields.Json', 'types.JsonFilter']
    context: Union['fields.Json', 'types.JsonFilter']
    result: Union[None, 'fields.Json', 'types.JsonFilter']
    status: Union[_str, 'types.StringFilter']
    duration: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    tool: 'ToolRelationFilter'

    # should be noted that AND and NOT should be Union['ToolInvocationWhereInputRecursive3', List['ToolInvocationWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['ToolInvocationWhereInputRecursive3']
    OR: List['ToolInvocationWhereInputRecursive3']
    NOT: List['ToolInvocationWhereInputRecursive3']


class ToolInvocationWhereInputRecursive3(TypedDict, total=False):
    """ToolInvocation arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    toolId: Union[_str, 'types.StringFilter']
    parameters: Union['fields.Json', 'types.JsonFilter']
    context: Union['fields.Json', 'types.JsonFilter']
    result: Union[None, 'fields.Json', 'types.JsonFilter']
    status: Union[_str, 'types.StringFilter']
    duration: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    tool: 'ToolRelationFilter'

    # should be noted that AND and NOT should be Union['ToolInvocationWhereInputRecursive4', List['ToolInvocationWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['ToolInvocationWhereInputRecursive4']
    OR: List['ToolInvocationWhereInputRecursive4']
    NOT: List['ToolInvocationWhereInputRecursive4']


class ToolInvocationWhereInputRecursive4(TypedDict, total=False):
    """ToolInvocation arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    toolId: Union[_str, 'types.StringFilter']
    parameters: Union['fields.Json', 'types.JsonFilter']
    context: Union['fields.Json', 'types.JsonFilter']
    result: Union[None, 'fields.Json', 'types.JsonFilter']
    status: Union[_str, 'types.StringFilter']
    duration: Union[None, _int, 'types.IntFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    completedAt: Union[None, datetime.datetime, 'types.DateTimeFilter']
    tool: 'ToolRelationFilter'



# aggregate ToolInvocation types


    

class ToolInvocationScalarWhereWithAggregatesInput(TypedDict, total=False):
    """ToolInvocation arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    toolId: Union[_str, 'types.StringWithAggregatesFilter']
    parameters: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    context: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    result: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    duration: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ToolInvocationScalarWhereWithAggregatesInputRecursive1']
    OR: List['ToolInvocationScalarWhereWithAggregatesInputRecursive1']
    NOT: List['ToolInvocationScalarWhereWithAggregatesInputRecursive1']


class ToolInvocationScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """ToolInvocation arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    toolId: Union[_str, 'types.StringWithAggregatesFilter']
    parameters: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    context: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    result: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    duration: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ToolInvocationScalarWhereWithAggregatesInputRecursive2']
    OR: List['ToolInvocationScalarWhereWithAggregatesInputRecursive2']
    NOT: List['ToolInvocationScalarWhereWithAggregatesInputRecursive2']


class ToolInvocationScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """ToolInvocation arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    toolId: Union[_str, 'types.StringWithAggregatesFilter']
    parameters: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    context: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    result: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    duration: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ToolInvocationScalarWhereWithAggregatesInputRecursive3']
    OR: List['ToolInvocationScalarWhereWithAggregatesInputRecursive3']
    NOT: List['ToolInvocationScalarWhereWithAggregatesInputRecursive3']


class ToolInvocationScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """ToolInvocation arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    toolId: Union[_str, 'types.StringWithAggregatesFilter']
    parameters: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    context: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    result: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    duration: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ToolInvocationScalarWhereWithAggregatesInputRecursive4']
    OR: List['ToolInvocationScalarWhereWithAggregatesInputRecursive4']
    NOT: List['ToolInvocationScalarWhereWithAggregatesInputRecursive4']


class ToolInvocationScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """ToolInvocation arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    toolId: Union[_str, 'types.StringWithAggregatesFilter']
    parameters: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    context: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    result: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    duration: Union[_int, 'types.IntWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    completedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class ToolInvocationGroupByOutput(TypedDict, total=False):
    id: _str
    toolId: _str
    parameters: 'fields.Json'
    context: 'fields.Json'
    result: 'fields.Json'
    status: _str
    duration: _int
    createdAt: datetime.datetime
    completedAt: datetime.datetime
    _sum: 'ToolInvocationSumAggregateOutput'
    _avg: 'ToolInvocationAvgAggregateOutput'
    _min: 'ToolInvocationMinAggregateOutput'
    _max: 'ToolInvocationMaxAggregateOutput'
    _count: 'ToolInvocationCountAggregateOutput'


class ToolInvocationAvgAggregateOutput(TypedDict, total=False):
    """ToolInvocation output for aggregating averages"""
    duration: float


class ToolInvocationSumAggregateOutput(TypedDict, total=False):
    """ToolInvocation output for aggregating sums"""
    duration: _int


class ToolInvocationScalarAggregateOutput(TypedDict, total=False):
    """ToolInvocation output including scalar fields"""
    id: _str
    toolId: _str
    parameters: 'fields.Json'
    context: 'fields.Json'
    result: 'fields.Json'
    status: _str
    duration: _int
    createdAt: datetime.datetime
    completedAt: datetime.datetime


ToolInvocationMinAggregateOutput = ToolInvocationScalarAggregateOutput
ToolInvocationMaxAggregateOutput = ToolInvocationScalarAggregateOutput


class ToolInvocationMaxAggregateInput(TypedDict, total=False):
    """ToolInvocation input for aggregating by max"""
    id: bool
    toolId: bool
    parameters: bool
    context: bool
    result: bool
    status: bool
    duration: bool
    createdAt: bool
    completedAt: bool


class ToolInvocationMinAggregateInput(TypedDict, total=False):
    """ToolInvocation input for aggregating by min"""
    id: bool
    toolId: bool
    parameters: bool
    context: bool
    result: bool
    status: bool
    duration: bool
    createdAt: bool
    completedAt: bool


class ToolInvocationNumberAggregateInput(TypedDict, total=False):
    """ToolInvocation input for aggregating numbers"""
    duration: bool


ToolInvocationAvgAggregateInput = ToolInvocationNumberAggregateInput
ToolInvocationSumAggregateInput = ToolInvocationNumberAggregateInput


ToolInvocationCountAggregateInput = TypedDict(
    'ToolInvocationCountAggregateInput',
    {
        'id': bool,
        'toolId': bool,
        'parameters': bool,
        'context': bool,
        'result': bool,
        'status': bool,
        'duration': bool,
        'createdAt': bool,
        'completedAt': bool,
        '_all': bool,
    },
    total=False,
)

ToolInvocationCountAggregateOutput = TypedDict(
    'ToolInvocationCountAggregateOutput',
    {
        'id': int,
        'toolId': int,
        'parameters': int,
        'context': int,
        'result': int,
        'status': int,
        'duration': int,
        'createdAt': int,
        'completedAt': int,
        '_all': int,
    },
    total=False,
)


ToolInvocationKeys = Literal[
    'id',
    'toolId',
    'parameters',
    'context',
    'result',
    'status',
    'duration',
    'createdAt',
    'completedAt',
    'tool',
]
ToolInvocationScalarFieldKeys = Literal[
    'id',
    'toolId',
    'parameters',
    'context',
    'result',
    'status',
    'duration',
    'createdAt',
    'completedAt',
]
ToolInvocationScalarFieldKeysT = TypeVar('ToolInvocationScalarFieldKeysT', bound=ToolInvocationScalarFieldKeys)

ToolInvocationRelationalFieldKeys = Literal[
        'tool',
    ]

# ConversationSession types

class ConversationSessionOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the ConversationSession create method"""
    id: _str
    agentId: _str
    status: 'enums.SessionStatus'
    context: 'fields.Json'
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    lastActivity: datetime.datetime
    agent: 'AgentCreateNestedWithoutRelationsInput'
    messages: 'MessageCreateManyNestedWithoutRelationsInput'


class ConversationSessionCreateInput(ConversationSessionOptionalCreateInput):
    """Required arguments to the ConversationSession create method"""
    userId: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class ConversationSessionOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the ConversationSession create method, without relations"""
    id: _str
    agentId: _str
    status: 'enums.SessionStatus'
    context: 'fields.Json'
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    lastActivity: datetime.datetime


class ConversationSessionCreateWithoutRelationsInput(ConversationSessionOptionalCreateWithoutRelationsInput):
    """Required arguments to the ConversationSession create method, without relations"""
    userId: _str


class ConversationSessionCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'ConversationSessionCreateWithoutRelationsInput'
    connect: 'ConversationSessionWhereUniqueInput'


class ConversationSessionCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['ConversationSessionCreateWithoutRelationsInput', List['ConversationSessionCreateWithoutRelationsInput']]
    connect: Union['ConversationSessionWhereUniqueInput', List['ConversationSessionWhereUniqueInput']]


_ConversationSessionWhereUnique_id_Input = TypedDict(
    '_ConversationSessionWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

ConversationSessionWhereUniqueInput = _ConversationSessionWhereUnique_id_Input


class ConversationSessionUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    userId: _str
    status: 'enums.SessionStatus'
    context: 'fields.Json'
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    lastActivity: datetime.datetime
    agent: 'AgentUpdateOneWithoutRelationsInput'
    messages: 'MessageUpdateManyWithoutRelationsInput'


class ConversationSessionUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    userId: _str
    status: 'enums.SessionStatus'
    context: 'fields.Json'
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    lastActivity: datetime.datetime


class ConversationSessionUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['ConversationSessionCreateWithoutRelationsInput']
    connect: List['ConversationSessionWhereUniqueInput']
    set: List['ConversationSessionWhereUniqueInput']
    disconnect: List['ConversationSessionWhereUniqueInput']
    delete: List['ConversationSessionWhereUniqueInput']

    # TODO
    # update: List['ConversationSessionUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['ConversationSessionUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['ConversationSessionScalarWhereInput']
    # upsert: List['ConversationSessionUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['ConversationSessionCreateOrConnectWithoutRelationsInput']


class ConversationSessionUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'ConversationSessionCreateWithoutRelationsInput'
    connect: 'ConversationSessionWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'ConversationSessionUpdateInput'
    # upsert: 'ConversationSessionUpsertWithoutRelationsInput'
    # connectOrCreate: 'ConversationSessionCreateOrConnectWithoutRelationsInput'


class ConversationSessionUpsertInput(TypedDict):
    create: 'ConversationSessionCreateInput'
    update: 'ConversationSessionUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_ConversationSession_id_OrderByInput = TypedDict(
    '_ConversationSession_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_ConversationSession_agentId_OrderByInput = TypedDict(
    '_ConversationSession_agentId_OrderByInput',
    {
        'agentId': 'SortOrder',
    },
    total=True
)

_ConversationSession_userId_OrderByInput = TypedDict(
    '_ConversationSession_userId_OrderByInput',
    {
        'userId': 'SortOrder',
    },
    total=True
)

_ConversationSession_status_OrderByInput = TypedDict(
    '_ConversationSession_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_ConversationSession_context_OrderByInput = TypedDict(
    '_ConversationSession_context_OrderByInput',
    {
        'context': 'SortOrder',
    },
    total=True
)

_ConversationSession_metadata_OrderByInput = TypedDict(
    '_ConversationSession_metadata_OrderByInput',
    {
        'metadata': 'SortOrder',
    },
    total=True
)

_ConversationSession_createdAt_OrderByInput = TypedDict(
    '_ConversationSession_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_ConversationSession_lastActivity_OrderByInput = TypedDict(
    '_ConversationSession_lastActivity_OrderByInput',
    {
        'lastActivity': 'SortOrder',
    },
    total=True
)

ConversationSessionOrderByInput = Union[
    '_ConversationSession_id_OrderByInput',
    '_ConversationSession_agentId_OrderByInput',
    '_ConversationSession_userId_OrderByInput',
    '_ConversationSession_status_OrderByInput',
    '_ConversationSession_context_OrderByInput',
    '_ConversationSession_metadata_OrderByInput',
    '_ConversationSession_createdAt_OrderByInput',
    '_ConversationSession_lastActivity_OrderByInput',
]



# recursive ConversationSession types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

ConversationSessionRelationFilter = TypedDict(
    'ConversationSessionRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class ConversationSessionListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class ConversationSessionInclude(TypedDict, total=False):
    """ConversationSession relational arguments"""
    agent: Union[bool, 'AgentArgsFromConversationSession']
    messages: Union[bool, 'FindManyMessageArgsFromConversationSession']


    

class AgentIncludeFromConversationSession(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromConversationSessionRecursive1']
    tools: Union[bool, 'FindManyToolArgsFromConversationSessionRecursive1']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromConversationSessionRecursive1']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromConversationSessionRecursive1']


class AgentIncludeFromConversationSessionRecursive1(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromConversationSessionRecursive2']
    tools: Union[bool, 'FindManyToolArgsFromConversationSessionRecursive2']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromConversationSessionRecursive2']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromConversationSessionRecursive2']


class AgentIncludeFromConversationSessionRecursive2(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromConversationSessionRecursive3']
    tools: Union[bool, 'FindManyToolArgsFromConversationSessionRecursive3']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromConversationSessionRecursive3']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromConversationSessionRecursive3']


class AgentIncludeFromConversationSessionRecursive3(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromConversationSessionRecursive4']
    tools: Union[bool, 'FindManyToolArgsFromConversationSessionRecursive4']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromConversationSessionRecursive4']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromConversationSessionRecursive4']


class AgentIncludeFromConversationSessionRecursive4(TypedDict, total=False):
    """Relational arguments for ConversationSession"""

    

class AgentArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'AgentIncludeFromAgentRecursive1'


class AgentArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'AgentIncludeFromAgentRecursive2'


class AgentArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'AgentIncludeFromAgentRecursive3'


class AgentArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'AgentIncludeFromAgentRecursive4'


class AgentArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    
    

class FindManyAgentArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive1'


class FindManyAgentArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive2'


class FindManyAgentArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive3'


class FindManyAgentArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive4'


class FindManyAgentArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    
    

class WorkflowIncludeFromConversationSession(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive1']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromConversationSessionRecursive1']


class WorkflowIncludeFromConversationSessionRecursive1(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive2']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromConversationSessionRecursive2']


class WorkflowIncludeFromConversationSessionRecursive2(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive3']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromConversationSessionRecursive3']


class WorkflowIncludeFromConversationSessionRecursive3(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive4']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromConversationSessionRecursive4']


class WorkflowIncludeFromConversationSessionRecursive4(TypedDict, total=False):
    """Relational arguments for ConversationSession"""

    

class WorkflowArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class WorkflowArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class WorkflowArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class WorkflowArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class WorkflowArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    
    

class FindManyWorkflowArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class FindManyWorkflowArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class FindManyWorkflowArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class FindManyWorkflowArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class FindManyWorkflowArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    
    

class WorkflowExecutionIncludeFromConversationSession(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    workflow: Union[bool, 'WorkflowArgsFromConversationSessionRecursive1']


class WorkflowExecutionIncludeFromConversationSessionRecursive1(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    workflow: Union[bool, 'WorkflowArgsFromConversationSessionRecursive2']


class WorkflowExecutionIncludeFromConversationSessionRecursive2(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    workflow: Union[bool, 'WorkflowArgsFromConversationSessionRecursive3']


class WorkflowExecutionIncludeFromConversationSessionRecursive3(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    workflow: Union[bool, 'WorkflowArgsFromConversationSessionRecursive4']


class WorkflowExecutionIncludeFromConversationSessionRecursive4(TypedDict, total=False):
    """Relational arguments for ConversationSession"""

    

class WorkflowExecutionArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class WorkflowExecutionArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class WorkflowExecutionArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class WorkflowExecutionArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class WorkflowExecutionArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    
    

class FindManyWorkflowExecutionArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class FindManyWorkflowExecutionArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class FindManyWorkflowExecutionArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class FindManyWorkflowExecutionArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class FindManyWorkflowExecutionArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    
    

class ToolIncludeFromConversationSession(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive1']
    mcpServer: Union[bool, 'MCPServerArgsFromConversationSessionRecursive1']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromConversationSessionRecursive1']


class ToolIncludeFromConversationSessionRecursive1(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive2']
    mcpServer: Union[bool, 'MCPServerArgsFromConversationSessionRecursive2']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromConversationSessionRecursive2']


class ToolIncludeFromConversationSessionRecursive2(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive3']
    mcpServer: Union[bool, 'MCPServerArgsFromConversationSessionRecursive3']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromConversationSessionRecursive3']


class ToolIncludeFromConversationSessionRecursive3(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive4']
    mcpServer: Union[bool, 'MCPServerArgsFromConversationSessionRecursive4']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromConversationSessionRecursive4']


class ToolIncludeFromConversationSessionRecursive4(TypedDict, total=False):
    """Relational arguments for ConversationSession"""

    

class ToolArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'ToolIncludeFromToolRecursive1'


class ToolArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'ToolIncludeFromToolRecursive2'


class ToolArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'ToolIncludeFromToolRecursive3'


class ToolArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'ToolIncludeFromToolRecursive4'


class ToolArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    
    

class FindManyToolArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive1'


class FindManyToolArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive2'


class FindManyToolArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive3'


class FindManyToolArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive4'


class FindManyToolArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    
    

class ToolInvocationIncludeFromConversationSession(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    tool: Union[bool, 'ToolArgsFromConversationSessionRecursive1']


class ToolInvocationIncludeFromConversationSessionRecursive1(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    tool: Union[bool, 'ToolArgsFromConversationSessionRecursive2']


class ToolInvocationIncludeFromConversationSessionRecursive2(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    tool: Union[bool, 'ToolArgsFromConversationSessionRecursive3']


class ToolInvocationIncludeFromConversationSessionRecursive3(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    tool: Union[bool, 'ToolArgsFromConversationSessionRecursive4']


class ToolInvocationIncludeFromConversationSessionRecursive4(TypedDict, total=False):
    """Relational arguments for ConversationSession"""

    

class ToolInvocationArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class ToolInvocationArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class ToolInvocationArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class ToolInvocationArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class ToolInvocationArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    
    

class FindManyToolInvocationArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class FindManyToolInvocationArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class FindManyToolInvocationArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class FindManyToolInvocationArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class FindManyToolInvocationArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    
    

class ConversationSessionIncludeFromConversationSession(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromConversationSessionRecursive1']


class ConversationSessionIncludeFromConversationSessionRecursive1(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromConversationSessionRecursive2']


class ConversationSessionIncludeFromConversationSessionRecursive2(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromConversationSessionRecursive3']


class ConversationSessionIncludeFromConversationSessionRecursive3(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromConversationSessionRecursive4']


class ConversationSessionIncludeFromConversationSessionRecursive4(TypedDict, total=False):
    """Relational arguments for ConversationSession"""

    

class ConversationSessionArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class ConversationSessionArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class ConversationSessionArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class ConversationSessionArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class ConversationSessionArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    
    

class FindManyConversationSessionArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class FindManyConversationSessionArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class FindManyConversationSessionArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class FindManyConversationSessionArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class FindManyConversationSessionArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    
    

class MessageIncludeFromConversationSession(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    session: Union[bool, 'ConversationSessionArgsFromConversationSessionRecursive1']


class MessageIncludeFromConversationSessionRecursive1(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    session: Union[bool, 'ConversationSessionArgsFromConversationSessionRecursive2']


class MessageIncludeFromConversationSessionRecursive2(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    session: Union[bool, 'ConversationSessionArgsFromConversationSessionRecursive3']


class MessageIncludeFromConversationSessionRecursive3(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    session: Union[bool, 'ConversationSessionArgsFromConversationSessionRecursive4']


class MessageIncludeFromConversationSessionRecursive4(TypedDict, total=False):
    """Relational arguments for ConversationSession"""

    

class MessageArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    
    

class FindManyMessageArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class VectorStoreIncludeFromConversationSession(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromConversationSessionRecursive1']


class VectorStoreIncludeFromConversationSessionRecursive1(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromConversationSessionRecursive2']


class VectorStoreIncludeFromConversationSessionRecursive2(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromConversationSessionRecursive3']


class VectorStoreIncludeFromConversationSessionRecursive3(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromConversationSessionRecursive4']


class VectorStoreIncludeFromConversationSessionRecursive4(TypedDict, total=False):
    """Relational arguments for ConversationSession"""

    

class VectorStoreArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class VectorStoreArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class VectorStoreArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class VectorStoreArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class VectorStoreArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    
    

class FindManyVectorStoreArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class FindManyVectorStoreArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class FindManyVectorStoreArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class FindManyVectorStoreArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class FindManyVectorStoreArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    
    

class EmbeddingIncludeFromConversationSession(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    vectorStore: Union[bool, 'VectorStoreArgsFromConversationSessionRecursive1']


class EmbeddingIncludeFromConversationSessionRecursive1(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    vectorStore: Union[bool, 'VectorStoreArgsFromConversationSessionRecursive2']


class EmbeddingIncludeFromConversationSessionRecursive2(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    vectorStore: Union[bool, 'VectorStoreArgsFromConversationSessionRecursive3']


class EmbeddingIncludeFromConversationSessionRecursive3(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    vectorStore: Union[bool, 'VectorStoreArgsFromConversationSessionRecursive4']


class EmbeddingIncludeFromConversationSessionRecursive4(TypedDict, total=False):
    """Relational arguments for ConversationSession"""

    

class EmbeddingArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class EmbeddingArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class EmbeddingArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class EmbeddingArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class EmbeddingArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    
    

class FindManyEmbeddingArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class FindManyEmbeddingArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class FindManyEmbeddingArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class FindManyEmbeddingArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class FindManyEmbeddingArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    
    

class MCPServerIncludeFromConversationSession(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    tools: Union[bool, 'FindManyToolArgsFromConversationSessionRecursive1']


class MCPServerIncludeFromConversationSessionRecursive1(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    tools: Union[bool, 'FindManyToolArgsFromConversationSessionRecursive2']


class MCPServerIncludeFromConversationSessionRecursive2(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    tools: Union[bool, 'FindManyToolArgsFromConversationSessionRecursive3']


class MCPServerIncludeFromConversationSessionRecursive3(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    tools: Union[bool, 'FindManyToolArgsFromConversationSessionRecursive4']


class MCPServerIncludeFromConversationSessionRecursive4(TypedDict, total=False):
    """Relational arguments for ConversationSession"""

    

class MCPServerArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class MCPServerArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class MCPServerArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class MCPServerArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class MCPServerArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    
    

class FindManyMCPServerArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class FindManyMCPServerArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class FindManyMCPServerArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class FindManyMCPServerArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class FindManyMCPServerArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    
    

class EvaluationIncludeFromConversationSession(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive1']


class EvaluationIncludeFromConversationSessionRecursive1(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive2']


class EvaluationIncludeFromConversationSessionRecursive2(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive3']


class EvaluationIncludeFromConversationSessionRecursive3(TypedDict, total=False):
    """Relational arguments for ConversationSession"""
    agent: Union[bool, 'AgentArgsFromConversationSessionRecursive4']


class EvaluationIncludeFromConversationSessionRecursive4(TypedDict, total=False):
    """Relational arguments for ConversationSession"""

    

class EvaluationArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class EvaluationArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class EvaluationArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class EvaluationArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class EvaluationArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    
    

class FindManyEvaluationArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class FindManyEvaluationArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class FindManyEvaluationArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class FindManyEvaluationArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class FindManyEvaluationArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    
    

class UserIncludeFromConversationSession(TypedDict, total=False):
    """Relational arguments for ConversationSession"""


class UserIncludeFromConversationSessionRecursive1(TypedDict, total=False):
    """Relational arguments for ConversationSession"""


class UserIncludeFromConversationSessionRecursive2(TypedDict, total=False):
    """Relational arguments for ConversationSession"""


class UserIncludeFromConversationSessionRecursive3(TypedDict, total=False):
    """Relational arguments for ConversationSession"""


class UserIncludeFromConversationSessionRecursive4(TypedDict, total=False):
    """Relational arguments for ConversationSession"""

    

class UserArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    
    

class FindManyUserArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class SystemConfigIncludeFromConversationSession(TypedDict, total=False):
    """Relational arguments for ConversationSession"""


class SystemConfigIncludeFromConversationSessionRecursive1(TypedDict, total=False):
    """Relational arguments for ConversationSession"""


class SystemConfigIncludeFromConversationSessionRecursive2(TypedDict, total=False):
    """Relational arguments for ConversationSession"""


class SystemConfigIncludeFromConversationSessionRecursive3(TypedDict, total=False):
    """Relational arguments for ConversationSession"""


class SystemConfigIncludeFromConversationSessionRecursive4(TypedDict, total=False):
    """Relational arguments for ConversationSession"""

    

class SystemConfigArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class SystemConfigArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class SystemConfigArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class SystemConfigArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class SystemConfigArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    
    

class FindManySystemConfigArgsFromConversationSession(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class FindManySystemConfigArgsFromConversationSessionRecursive1(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class FindManySystemConfigArgsFromConversationSessionRecursive2(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class FindManySystemConfigArgsFromConversationSessionRecursive3(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class FindManySystemConfigArgsFromConversationSessionRecursive4(TypedDict, total=False):
    """Arguments for ConversationSession"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    


FindManyConversationSessionArgs = FindManyConversationSessionArgsFromConversationSession
FindFirstConversationSessionArgs = FindManyConversationSessionArgsFromConversationSession


    

class ConversationSessionWhereInput(TypedDict, total=False):
    """ConversationSession arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    status: 'enums.SessionStatus'
    context: Union['fields.Json', 'types.JsonFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    lastActivity: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['ConversationSessionWhereInputRecursive1', List['ConversationSessionWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['ConversationSessionWhereInputRecursive1']
    OR: List['ConversationSessionWhereInputRecursive1']
    NOT: List['ConversationSessionWhereInputRecursive1']


class ConversationSessionWhereInputRecursive1(TypedDict, total=False):
    """ConversationSession arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    status: 'enums.SessionStatus'
    context: Union['fields.Json', 'types.JsonFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    lastActivity: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['ConversationSessionWhereInputRecursive2', List['ConversationSessionWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['ConversationSessionWhereInputRecursive2']
    OR: List['ConversationSessionWhereInputRecursive2']
    NOT: List['ConversationSessionWhereInputRecursive2']


class ConversationSessionWhereInputRecursive2(TypedDict, total=False):
    """ConversationSession arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    status: 'enums.SessionStatus'
    context: Union['fields.Json', 'types.JsonFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    lastActivity: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['ConversationSessionWhereInputRecursive3', List['ConversationSessionWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['ConversationSessionWhereInputRecursive3']
    OR: List['ConversationSessionWhereInputRecursive3']
    NOT: List['ConversationSessionWhereInputRecursive3']


class ConversationSessionWhereInputRecursive3(TypedDict, total=False):
    """ConversationSession arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    status: 'enums.SessionStatus'
    context: Union['fields.Json', 'types.JsonFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    lastActivity: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    messages: 'MessageListRelationFilter'

    # should be noted that AND and NOT should be Union['ConversationSessionWhereInputRecursive4', List['ConversationSessionWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['ConversationSessionWhereInputRecursive4']
    OR: List['ConversationSessionWhereInputRecursive4']
    NOT: List['ConversationSessionWhereInputRecursive4']


class ConversationSessionWhereInputRecursive4(TypedDict, total=False):
    """ConversationSession arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    userId: Union[_str, 'types.StringFilter']
    status: 'enums.SessionStatus'
    context: Union['fields.Json', 'types.JsonFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    lastActivity: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'
    messages: 'MessageListRelationFilter'



# aggregate ConversationSession types


    

class ConversationSessionScalarWhereWithAggregatesInput(TypedDict, total=False):
    """ConversationSession arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.SessionStatus'
    context: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    lastActivity: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ConversationSessionScalarWhereWithAggregatesInputRecursive1']
    OR: List['ConversationSessionScalarWhereWithAggregatesInputRecursive1']
    NOT: List['ConversationSessionScalarWhereWithAggregatesInputRecursive1']


class ConversationSessionScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """ConversationSession arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.SessionStatus'
    context: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    lastActivity: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ConversationSessionScalarWhereWithAggregatesInputRecursive2']
    OR: List['ConversationSessionScalarWhereWithAggregatesInputRecursive2']
    NOT: List['ConversationSessionScalarWhereWithAggregatesInputRecursive2']


class ConversationSessionScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """ConversationSession arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.SessionStatus'
    context: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    lastActivity: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ConversationSessionScalarWhereWithAggregatesInputRecursive3']
    OR: List['ConversationSessionScalarWhereWithAggregatesInputRecursive3']
    NOT: List['ConversationSessionScalarWhereWithAggregatesInputRecursive3']


class ConversationSessionScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """ConversationSession arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.SessionStatus'
    context: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    lastActivity: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['ConversationSessionScalarWhereWithAggregatesInputRecursive4']
    OR: List['ConversationSessionScalarWhereWithAggregatesInputRecursive4']
    NOT: List['ConversationSessionScalarWhereWithAggregatesInputRecursive4']


class ConversationSessionScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """ConversationSession arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    userId: Union[_str, 'types.StringWithAggregatesFilter']
    status: 'enums.SessionStatus'
    context: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    lastActivity: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class ConversationSessionGroupByOutput(TypedDict, total=False):
    id: _str
    agentId: _str
    userId: _str
    status: 'enums.SessionStatus'
    context: 'fields.Json'
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    lastActivity: datetime.datetime
    _sum: 'ConversationSessionSumAggregateOutput'
    _avg: 'ConversationSessionAvgAggregateOutput'
    _min: 'ConversationSessionMinAggregateOutput'
    _max: 'ConversationSessionMaxAggregateOutput'
    _count: 'ConversationSessionCountAggregateOutput'


class ConversationSessionAvgAggregateOutput(TypedDict, total=False):
    """ConversationSession output for aggregating averages"""


class ConversationSessionSumAggregateOutput(TypedDict, total=False):
    """ConversationSession output for aggregating sums"""


class ConversationSessionScalarAggregateOutput(TypedDict, total=False):
    """ConversationSession output including scalar fields"""
    id: _str
    agentId: _str
    userId: _str
    status: 'enums.SessionStatus'
    context: 'fields.Json'
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    lastActivity: datetime.datetime


ConversationSessionMinAggregateOutput = ConversationSessionScalarAggregateOutput
ConversationSessionMaxAggregateOutput = ConversationSessionScalarAggregateOutput


class ConversationSessionMaxAggregateInput(TypedDict, total=False):
    """ConversationSession input for aggregating by max"""
    id: bool
    agentId: bool
    userId: bool
    status: bool
    context: bool
    metadata: bool
    createdAt: bool
    lastActivity: bool


class ConversationSessionMinAggregateInput(TypedDict, total=False):
    """ConversationSession input for aggregating by min"""
    id: bool
    agentId: bool
    userId: bool
    status: bool
    context: bool
    metadata: bool
    createdAt: bool
    lastActivity: bool


class ConversationSessionNumberAggregateInput(TypedDict, total=False):
    """ConversationSession input for aggregating numbers"""


ConversationSessionAvgAggregateInput = ConversationSessionNumberAggregateInput
ConversationSessionSumAggregateInput = ConversationSessionNumberAggregateInput


ConversationSessionCountAggregateInput = TypedDict(
    'ConversationSessionCountAggregateInput',
    {
        'id': bool,
        'agentId': bool,
        'userId': bool,
        'status': bool,
        'context': bool,
        'metadata': bool,
        'createdAt': bool,
        'lastActivity': bool,
        '_all': bool,
    },
    total=False,
)

ConversationSessionCountAggregateOutput = TypedDict(
    'ConversationSessionCountAggregateOutput',
    {
        'id': int,
        'agentId': int,
        'userId': int,
        'status': int,
        'context': int,
        'metadata': int,
        'createdAt': int,
        'lastActivity': int,
        '_all': int,
    },
    total=False,
)


ConversationSessionKeys = Literal[
    'id',
    'agentId',
    'userId',
    'status',
    'context',
    'metadata',
    'createdAt',
    'lastActivity',
    'agent',
    'messages',
]
ConversationSessionScalarFieldKeys = Literal[
    'id',
    'agentId',
    'userId',
    'status',
    'context',
    'metadata',
    'createdAt',
    'lastActivity',
]
ConversationSessionScalarFieldKeysT = TypeVar('ConversationSessionScalarFieldKeysT', bound=ConversationSessionScalarFieldKeys)

ConversationSessionRelationalFieldKeys = Literal[
        'agent',
        'messages',
    ]

# Message types

class MessageOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Message create method"""
    id: _str
    sessionId: _str
    metadata: 'fields.Json'
    toolCalls: Optional['fields.Json']
    createdAt: datetime.datetime
    session: 'ConversationSessionCreateNestedWithoutRelationsInput'


class MessageCreateInput(MessageOptionalCreateInput):
    """Required arguments to the Message create method"""
    role: 'enums.MessageRole'
    content: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class MessageOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Message create method, without relations"""
    id: _str
    sessionId: _str
    metadata: 'fields.Json'
    toolCalls: Optional['fields.Json']
    createdAt: datetime.datetime


class MessageCreateWithoutRelationsInput(MessageOptionalCreateWithoutRelationsInput):
    """Required arguments to the Message create method, without relations"""
    role: 'enums.MessageRole'
    content: _str


class MessageCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'MessageCreateWithoutRelationsInput'
    connect: 'MessageWhereUniqueInput'


class MessageCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['MessageCreateWithoutRelationsInput', List['MessageCreateWithoutRelationsInput']]
    connect: Union['MessageWhereUniqueInput', List['MessageWhereUniqueInput']]


_MessageWhereUnique_id_Input = TypedDict(
    '_MessageWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

MessageWhereUniqueInput = _MessageWhereUnique_id_Input


class MessageUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    role: 'enums.MessageRole'
    content: _str
    metadata: 'fields.Json'
    toolCalls: Optional['fields.Json']
    createdAt: datetime.datetime
    session: 'ConversationSessionUpdateOneWithoutRelationsInput'


class MessageUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    role: 'enums.MessageRole'
    content: _str
    metadata: 'fields.Json'
    toolCalls: Optional['fields.Json']
    createdAt: datetime.datetime


class MessageUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['MessageCreateWithoutRelationsInput']
    connect: List['MessageWhereUniqueInput']
    set: List['MessageWhereUniqueInput']
    disconnect: List['MessageWhereUniqueInput']
    delete: List['MessageWhereUniqueInput']

    # TODO
    # update: List['MessageUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['MessageUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['MessageScalarWhereInput']
    # upsert: List['MessageUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['MessageCreateOrConnectWithoutRelationsInput']


class MessageUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'MessageCreateWithoutRelationsInput'
    connect: 'MessageWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'MessageUpdateInput'
    # upsert: 'MessageUpsertWithoutRelationsInput'
    # connectOrCreate: 'MessageCreateOrConnectWithoutRelationsInput'


class MessageUpsertInput(TypedDict):
    create: 'MessageCreateInput'
    update: 'MessageUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Message_id_OrderByInput = TypedDict(
    '_Message_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Message_sessionId_OrderByInput = TypedDict(
    '_Message_sessionId_OrderByInput',
    {
        'sessionId': 'SortOrder',
    },
    total=True
)

_Message_role_OrderByInput = TypedDict(
    '_Message_role_OrderByInput',
    {
        'role': 'SortOrder',
    },
    total=True
)

_Message_content_OrderByInput = TypedDict(
    '_Message_content_OrderByInput',
    {
        'content': 'SortOrder',
    },
    total=True
)

_Message_metadata_OrderByInput = TypedDict(
    '_Message_metadata_OrderByInput',
    {
        'metadata': 'SortOrder',
    },
    total=True
)

_Message_toolCalls_OrderByInput = TypedDict(
    '_Message_toolCalls_OrderByInput',
    {
        'toolCalls': 'SortOrder',
    },
    total=True
)

_Message_createdAt_OrderByInput = TypedDict(
    '_Message_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

MessageOrderByInput = Union[
    '_Message_id_OrderByInput',
    '_Message_sessionId_OrderByInput',
    '_Message_role_OrderByInput',
    '_Message_content_OrderByInput',
    '_Message_metadata_OrderByInput',
    '_Message_toolCalls_OrderByInput',
    '_Message_createdAt_OrderByInput',
]



# recursive Message types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

MessageRelationFilter = TypedDict(
    'MessageRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class MessageListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class MessageInclude(TypedDict, total=False):
    """Message relational arguments"""
    session: Union[bool, 'ConversationSessionArgsFromMessage']


    

class AgentIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromMessageRecursive1']
    tools: Union[bool, 'FindManyToolArgsFromMessageRecursive1']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromMessageRecursive1']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromMessageRecursive1']


class AgentIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromMessageRecursive2']
    tools: Union[bool, 'FindManyToolArgsFromMessageRecursive2']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromMessageRecursive2']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromMessageRecursive2']


class AgentIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromMessageRecursive3']
    tools: Union[bool, 'FindManyToolArgsFromMessageRecursive3']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromMessageRecursive3']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromMessageRecursive3']


class AgentIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromMessageRecursive4']
    tools: Union[bool, 'FindManyToolArgsFromMessageRecursive4']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromMessageRecursive4']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromMessageRecursive4']


class AgentIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class AgentArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'AgentIncludeFromAgentRecursive1'


class AgentArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'AgentIncludeFromAgentRecursive2'


class AgentArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'AgentIncludeFromAgentRecursive3'


class AgentArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'AgentIncludeFromAgentRecursive4'


class AgentArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyAgentArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive1'


class FindManyAgentArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive2'


class FindManyAgentArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive3'


class FindManyAgentArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive4'


class FindManyAgentArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    
    

class WorkflowIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive1']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromMessageRecursive1']


class WorkflowIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive2']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromMessageRecursive2']


class WorkflowIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive3']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromMessageRecursive3']


class WorkflowIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive4']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromMessageRecursive4']


class WorkflowIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class WorkflowArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class WorkflowArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class WorkflowArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class WorkflowArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class WorkflowArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyWorkflowArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class FindManyWorkflowArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class FindManyWorkflowArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class FindManyWorkflowArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class FindManyWorkflowArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    
    

class WorkflowExecutionIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    workflow: Union[bool, 'WorkflowArgsFromMessageRecursive1']


class WorkflowExecutionIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    workflow: Union[bool, 'WorkflowArgsFromMessageRecursive2']


class WorkflowExecutionIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    workflow: Union[bool, 'WorkflowArgsFromMessageRecursive3']


class WorkflowExecutionIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    workflow: Union[bool, 'WorkflowArgsFromMessageRecursive4']


class WorkflowExecutionIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class WorkflowExecutionArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class WorkflowExecutionArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class WorkflowExecutionArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class WorkflowExecutionArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class WorkflowExecutionArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyWorkflowExecutionArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class FindManyWorkflowExecutionArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class FindManyWorkflowExecutionArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class FindManyWorkflowExecutionArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class FindManyWorkflowExecutionArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    
    

class ToolIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive1']
    mcpServer: Union[bool, 'MCPServerArgsFromMessageRecursive1']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromMessageRecursive1']


class ToolIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive2']
    mcpServer: Union[bool, 'MCPServerArgsFromMessageRecursive2']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromMessageRecursive2']


class ToolIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive3']
    mcpServer: Union[bool, 'MCPServerArgsFromMessageRecursive3']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromMessageRecursive3']


class ToolIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive4']
    mcpServer: Union[bool, 'MCPServerArgsFromMessageRecursive4']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromMessageRecursive4']


class ToolIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class ToolArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ToolIncludeFromToolRecursive1'


class ToolArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ToolIncludeFromToolRecursive2'


class ToolArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ToolIncludeFromToolRecursive3'


class ToolArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ToolIncludeFromToolRecursive4'


class ToolArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyToolArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive1'


class FindManyToolArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive2'


class FindManyToolArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive3'


class FindManyToolArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive4'


class FindManyToolArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    
    

class ToolInvocationIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    tool: Union[bool, 'ToolArgsFromMessageRecursive1']


class ToolInvocationIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    tool: Union[bool, 'ToolArgsFromMessageRecursive2']


class ToolInvocationIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    tool: Union[bool, 'ToolArgsFromMessageRecursive3']


class ToolInvocationIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    tool: Union[bool, 'ToolArgsFromMessageRecursive4']


class ToolInvocationIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class ToolInvocationArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class ToolInvocationArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class ToolInvocationArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class ToolInvocationArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class ToolInvocationArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyToolInvocationArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class FindManyToolInvocationArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class FindManyToolInvocationArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class FindManyToolInvocationArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class FindManyToolInvocationArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    
    

class ConversationSessionIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive1']


class ConversationSessionIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive2']


class ConversationSessionIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive3']


class ConversationSessionIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromMessageRecursive4']


class ConversationSessionIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class ConversationSessionArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class ConversationSessionArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class ConversationSessionArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class ConversationSessionArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class ConversationSessionArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyConversationSessionArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class FindManyConversationSessionArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class FindManyConversationSessionArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class FindManyConversationSessionArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class FindManyConversationSessionArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    
    

class MessageIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    session: Union[bool, 'ConversationSessionArgsFromMessageRecursive1']


class MessageIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    session: Union[bool, 'ConversationSessionArgsFromMessageRecursive2']


class MessageIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    session: Union[bool, 'ConversationSessionArgsFromMessageRecursive3']


class MessageIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    session: Union[bool, 'ConversationSessionArgsFromMessageRecursive4']


class MessageIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class MessageArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyMessageArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class VectorStoreIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromMessageRecursive1']


class VectorStoreIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromMessageRecursive2']


class VectorStoreIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromMessageRecursive3']


class VectorStoreIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromMessageRecursive4']


class VectorStoreIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class VectorStoreArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class VectorStoreArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class VectorStoreArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class VectorStoreArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class VectorStoreArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyVectorStoreArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class FindManyVectorStoreArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class FindManyVectorStoreArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class FindManyVectorStoreArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class FindManyVectorStoreArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    
    

class EmbeddingIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    vectorStore: Union[bool, 'VectorStoreArgsFromMessageRecursive1']


class EmbeddingIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    vectorStore: Union[bool, 'VectorStoreArgsFromMessageRecursive2']


class EmbeddingIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    vectorStore: Union[bool, 'VectorStoreArgsFromMessageRecursive3']


class EmbeddingIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    vectorStore: Union[bool, 'VectorStoreArgsFromMessageRecursive4']


class EmbeddingIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class EmbeddingArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class EmbeddingArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class EmbeddingArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class EmbeddingArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class EmbeddingArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyEmbeddingArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class FindManyEmbeddingArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class FindManyEmbeddingArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class FindManyEmbeddingArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class FindManyEmbeddingArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    
    

class MCPServerIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    tools: Union[bool, 'FindManyToolArgsFromMessageRecursive1']


class MCPServerIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    tools: Union[bool, 'FindManyToolArgsFromMessageRecursive2']


class MCPServerIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    tools: Union[bool, 'FindManyToolArgsFromMessageRecursive3']


class MCPServerIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    tools: Union[bool, 'FindManyToolArgsFromMessageRecursive4']


class MCPServerIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class MCPServerArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class MCPServerArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class MCPServerArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class MCPServerArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class MCPServerArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyMCPServerArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class FindManyMCPServerArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class FindManyMCPServerArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class FindManyMCPServerArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class FindManyMCPServerArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    
    

class EvaluationIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive1']


class EvaluationIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive2']


class EvaluationIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive3']


class EvaluationIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""
    agent: Union[bool, 'AgentArgsFromMessageRecursive4']


class EvaluationIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class EvaluationArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class EvaluationArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class EvaluationArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class EvaluationArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class EvaluationArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyEvaluationArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class FindManyEvaluationArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class FindManyEvaluationArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class FindManyEvaluationArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class FindManyEvaluationArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    
    

class UserIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""


class UserIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""


class UserIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""


class UserIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""


class UserIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class UserArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManyUserArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class SystemConfigIncludeFromMessage(TypedDict, total=False):
    """Relational arguments for Message"""


class SystemConfigIncludeFromMessageRecursive1(TypedDict, total=False):
    """Relational arguments for Message"""


class SystemConfigIncludeFromMessageRecursive2(TypedDict, total=False):
    """Relational arguments for Message"""


class SystemConfigIncludeFromMessageRecursive3(TypedDict, total=False):
    """Relational arguments for Message"""


class SystemConfigIncludeFromMessageRecursive4(TypedDict, total=False):
    """Relational arguments for Message"""

    

class SystemConfigArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class SystemConfigArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class SystemConfigArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class SystemConfigArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class SystemConfigArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    
    

class FindManySystemConfigArgsFromMessage(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class FindManySystemConfigArgsFromMessageRecursive1(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class FindManySystemConfigArgsFromMessageRecursive2(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class FindManySystemConfigArgsFromMessageRecursive3(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class FindManySystemConfigArgsFromMessageRecursive4(TypedDict, total=False):
    """Arguments for Message"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    


FindManyMessageArgs = FindManyMessageArgsFromMessage
FindFirstMessageArgs = FindManyMessageArgsFromMessage


    

class MessageWhereInput(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    sessionId: Union[_str, 'types.StringFilter']
    role: 'enums.MessageRole'
    content: Union[_str, 'types.StringFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    toolCalls: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    session: 'ConversationSessionRelationFilter'

    # should be noted that AND and NOT should be Union['MessageWhereInputRecursive1', List['MessageWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['MessageWhereInputRecursive1']
    OR: List['MessageWhereInputRecursive1']
    NOT: List['MessageWhereInputRecursive1']


class MessageWhereInputRecursive1(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    sessionId: Union[_str, 'types.StringFilter']
    role: 'enums.MessageRole'
    content: Union[_str, 'types.StringFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    toolCalls: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    session: 'ConversationSessionRelationFilter'

    # should be noted that AND and NOT should be Union['MessageWhereInputRecursive2', List['MessageWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['MessageWhereInputRecursive2']
    OR: List['MessageWhereInputRecursive2']
    NOT: List['MessageWhereInputRecursive2']


class MessageWhereInputRecursive2(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    sessionId: Union[_str, 'types.StringFilter']
    role: 'enums.MessageRole'
    content: Union[_str, 'types.StringFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    toolCalls: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    session: 'ConversationSessionRelationFilter'

    # should be noted that AND and NOT should be Union['MessageWhereInputRecursive3', List['MessageWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['MessageWhereInputRecursive3']
    OR: List['MessageWhereInputRecursive3']
    NOT: List['MessageWhereInputRecursive3']


class MessageWhereInputRecursive3(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    sessionId: Union[_str, 'types.StringFilter']
    role: 'enums.MessageRole'
    content: Union[_str, 'types.StringFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    toolCalls: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    session: 'ConversationSessionRelationFilter'

    # should be noted that AND and NOT should be Union['MessageWhereInputRecursive4', List['MessageWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['MessageWhereInputRecursive4']
    OR: List['MessageWhereInputRecursive4']
    NOT: List['MessageWhereInputRecursive4']


class MessageWhereInputRecursive4(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    sessionId: Union[_str, 'types.StringFilter']
    role: 'enums.MessageRole'
    content: Union[_str, 'types.StringFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    toolCalls: Union[None, 'fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    session: 'ConversationSessionRelationFilter'



# aggregate Message types


    

class MessageScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    sessionId: Union[_str, 'types.StringWithAggregatesFilter']
    role: 'enums.MessageRole'
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    toolCalls: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['MessageScalarWhereWithAggregatesInputRecursive1']
    OR: List['MessageScalarWhereWithAggregatesInputRecursive1']
    NOT: List['MessageScalarWhereWithAggregatesInputRecursive1']


class MessageScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    sessionId: Union[_str, 'types.StringWithAggregatesFilter']
    role: 'enums.MessageRole'
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    toolCalls: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['MessageScalarWhereWithAggregatesInputRecursive2']
    OR: List['MessageScalarWhereWithAggregatesInputRecursive2']
    NOT: List['MessageScalarWhereWithAggregatesInputRecursive2']


class MessageScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    sessionId: Union[_str, 'types.StringWithAggregatesFilter']
    role: 'enums.MessageRole'
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    toolCalls: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['MessageScalarWhereWithAggregatesInputRecursive3']
    OR: List['MessageScalarWhereWithAggregatesInputRecursive3']
    NOT: List['MessageScalarWhereWithAggregatesInputRecursive3']


class MessageScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    sessionId: Union[_str, 'types.StringWithAggregatesFilter']
    role: 'enums.MessageRole'
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    toolCalls: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['MessageScalarWhereWithAggregatesInputRecursive4']
    OR: List['MessageScalarWhereWithAggregatesInputRecursive4']
    NOT: List['MessageScalarWhereWithAggregatesInputRecursive4']


class MessageScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Message arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    sessionId: Union[_str, 'types.StringWithAggregatesFilter']
    role: 'enums.MessageRole'
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    toolCalls: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class MessageGroupByOutput(TypedDict, total=False):
    id: _str
    sessionId: _str
    role: 'enums.MessageRole'
    content: _str
    metadata: 'fields.Json'
    toolCalls: 'fields.Json'
    createdAt: datetime.datetime
    _sum: 'MessageSumAggregateOutput'
    _avg: 'MessageAvgAggregateOutput'
    _min: 'MessageMinAggregateOutput'
    _max: 'MessageMaxAggregateOutput'
    _count: 'MessageCountAggregateOutput'


class MessageAvgAggregateOutput(TypedDict, total=False):
    """Message output for aggregating averages"""


class MessageSumAggregateOutput(TypedDict, total=False):
    """Message output for aggregating sums"""


class MessageScalarAggregateOutput(TypedDict, total=False):
    """Message output including scalar fields"""
    id: _str
    sessionId: _str
    role: 'enums.MessageRole'
    content: _str
    metadata: 'fields.Json'
    toolCalls: 'fields.Json'
    createdAt: datetime.datetime


MessageMinAggregateOutput = MessageScalarAggregateOutput
MessageMaxAggregateOutput = MessageScalarAggregateOutput


class MessageMaxAggregateInput(TypedDict, total=False):
    """Message input for aggregating by max"""
    id: bool
    sessionId: bool
    role: bool
    content: bool
    metadata: bool
    toolCalls: bool
    createdAt: bool


class MessageMinAggregateInput(TypedDict, total=False):
    """Message input for aggregating by min"""
    id: bool
    sessionId: bool
    role: bool
    content: bool
    metadata: bool
    toolCalls: bool
    createdAt: bool


class MessageNumberAggregateInput(TypedDict, total=False):
    """Message input for aggregating numbers"""


MessageAvgAggregateInput = MessageNumberAggregateInput
MessageSumAggregateInput = MessageNumberAggregateInput


MessageCountAggregateInput = TypedDict(
    'MessageCountAggregateInput',
    {
        'id': bool,
        'sessionId': bool,
        'role': bool,
        'content': bool,
        'metadata': bool,
        'toolCalls': bool,
        'createdAt': bool,
        '_all': bool,
    },
    total=False,
)

MessageCountAggregateOutput = TypedDict(
    'MessageCountAggregateOutput',
    {
        'id': int,
        'sessionId': int,
        'role': int,
        'content': int,
        'metadata': int,
        'toolCalls': int,
        'createdAt': int,
        '_all': int,
    },
    total=False,
)


MessageKeys = Literal[
    'id',
    'sessionId',
    'role',
    'content',
    'metadata',
    'toolCalls',
    'createdAt',
    'session',
]
MessageScalarFieldKeys = Literal[
    'id',
    'sessionId',
    'role',
    'content',
    'metadata',
    'toolCalls',
    'createdAt',
]
MessageScalarFieldKeysT = TypeVar('MessageScalarFieldKeysT', bound=MessageScalarFieldKeys)

MessageRelationalFieldKeys = Literal[
        'session',
    ]

# VectorStore types

class VectorStoreOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the VectorStore create method"""
    id: _str
    status: 'enums.VectorStoreStatus'
    statistics: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    embeddings: 'EmbeddingCreateManyNestedWithoutRelationsInput'


class VectorStoreCreateInput(VectorStoreOptionalCreateInput):
    """Required arguments to the VectorStore create method"""
    name: _str
    type: 'enums.VectorStoreType'
    configuration: 'fields.Json'


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class VectorStoreOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the VectorStore create method, without relations"""
    id: _str
    status: 'enums.VectorStoreStatus'
    statistics: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class VectorStoreCreateWithoutRelationsInput(VectorStoreOptionalCreateWithoutRelationsInput):
    """Required arguments to the VectorStore create method, without relations"""
    name: _str
    type: 'enums.VectorStoreType'
    configuration: 'fields.Json'


class VectorStoreCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'VectorStoreCreateWithoutRelationsInput'
    connect: 'VectorStoreWhereUniqueInput'


class VectorStoreCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['VectorStoreCreateWithoutRelationsInput', List['VectorStoreCreateWithoutRelationsInput']]
    connect: Union['VectorStoreWhereUniqueInput', List['VectorStoreWhereUniqueInput']]


_VectorStoreWhereUnique_id_Input = TypedDict(
    '_VectorStoreWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

VectorStoreWhereUniqueInput = _VectorStoreWhereUnique_id_Input


class VectorStoreUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    name: _str
    type: 'enums.VectorStoreType'
    configuration: 'fields.Json'
    status: 'enums.VectorStoreStatus'
    statistics: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    embeddings: 'EmbeddingUpdateManyWithoutRelationsInput'


class VectorStoreUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    name: _str
    type: 'enums.VectorStoreType'
    configuration: 'fields.Json'
    status: 'enums.VectorStoreStatus'
    statistics: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class VectorStoreUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['VectorStoreCreateWithoutRelationsInput']
    connect: List['VectorStoreWhereUniqueInput']
    set: List['VectorStoreWhereUniqueInput']
    disconnect: List['VectorStoreWhereUniqueInput']
    delete: List['VectorStoreWhereUniqueInput']

    # TODO
    # update: List['VectorStoreUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['VectorStoreUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['VectorStoreScalarWhereInput']
    # upsert: List['VectorStoreUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['VectorStoreCreateOrConnectWithoutRelationsInput']


class VectorStoreUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'VectorStoreCreateWithoutRelationsInput'
    connect: 'VectorStoreWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'VectorStoreUpdateInput'
    # upsert: 'VectorStoreUpsertWithoutRelationsInput'
    # connectOrCreate: 'VectorStoreCreateOrConnectWithoutRelationsInput'


class VectorStoreUpsertInput(TypedDict):
    create: 'VectorStoreCreateInput'
    update: 'VectorStoreUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_VectorStore_id_OrderByInput = TypedDict(
    '_VectorStore_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_VectorStore_name_OrderByInput = TypedDict(
    '_VectorStore_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_VectorStore_type_OrderByInput = TypedDict(
    '_VectorStore_type_OrderByInput',
    {
        'type': 'SortOrder',
    },
    total=True
)

_VectorStore_configuration_OrderByInput = TypedDict(
    '_VectorStore_configuration_OrderByInput',
    {
        'configuration': 'SortOrder',
    },
    total=True
)

_VectorStore_status_OrderByInput = TypedDict(
    '_VectorStore_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_VectorStore_statistics_OrderByInput = TypedDict(
    '_VectorStore_statistics_OrderByInput',
    {
        'statistics': 'SortOrder',
    },
    total=True
)

_VectorStore_createdAt_OrderByInput = TypedDict(
    '_VectorStore_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_VectorStore_updatedAt_OrderByInput = TypedDict(
    '_VectorStore_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

VectorStoreOrderByInput = Union[
    '_VectorStore_id_OrderByInput',
    '_VectorStore_name_OrderByInput',
    '_VectorStore_type_OrderByInput',
    '_VectorStore_configuration_OrderByInput',
    '_VectorStore_status_OrderByInput',
    '_VectorStore_statistics_OrderByInput',
    '_VectorStore_createdAt_OrderByInput',
    '_VectorStore_updatedAt_OrderByInput',
]



# recursive VectorStore types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

VectorStoreRelationFilter = TypedDict(
    'VectorStoreRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class VectorStoreListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class VectorStoreInclude(TypedDict, total=False):
    """VectorStore relational arguments"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromVectorStore']


    

class AgentIncludeFromVectorStore(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromVectorStoreRecursive1']
    tools: Union[bool, 'FindManyToolArgsFromVectorStoreRecursive1']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromVectorStoreRecursive1']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromVectorStoreRecursive1']


class AgentIncludeFromVectorStoreRecursive1(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromVectorStoreRecursive2']
    tools: Union[bool, 'FindManyToolArgsFromVectorStoreRecursive2']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromVectorStoreRecursive2']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromVectorStoreRecursive2']


class AgentIncludeFromVectorStoreRecursive2(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromVectorStoreRecursive3']
    tools: Union[bool, 'FindManyToolArgsFromVectorStoreRecursive3']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromVectorStoreRecursive3']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromVectorStoreRecursive3']


class AgentIncludeFromVectorStoreRecursive3(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromVectorStoreRecursive4']
    tools: Union[bool, 'FindManyToolArgsFromVectorStoreRecursive4']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromVectorStoreRecursive4']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromVectorStoreRecursive4']


class AgentIncludeFromVectorStoreRecursive4(TypedDict, total=False):
    """Relational arguments for VectorStore"""

    

class AgentArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'AgentIncludeFromAgentRecursive1'


class AgentArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'AgentIncludeFromAgentRecursive2'


class AgentArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'AgentIncludeFromAgentRecursive3'


class AgentArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'AgentIncludeFromAgentRecursive4'


class AgentArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    
    

class FindManyAgentArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive1'


class FindManyAgentArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive2'


class FindManyAgentArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive3'


class FindManyAgentArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive4'


class FindManyAgentArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    
    

class WorkflowIncludeFromVectorStore(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive1']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromVectorStoreRecursive1']


class WorkflowIncludeFromVectorStoreRecursive1(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive2']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromVectorStoreRecursive2']


class WorkflowIncludeFromVectorStoreRecursive2(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive3']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromVectorStoreRecursive3']


class WorkflowIncludeFromVectorStoreRecursive3(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive4']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromVectorStoreRecursive4']


class WorkflowIncludeFromVectorStoreRecursive4(TypedDict, total=False):
    """Relational arguments for VectorStore"""

    

class WorkflowArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class WorkflowArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class WorkflowArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class WorkflowArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class WorkflowArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    
    

class FindManyWorkflowArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class FindManyWorkflowArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class FindManyWorkflowArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class FindManyWorkflowArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class FindManyWorkflowArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    
    

class WorkflowExecutionIncludeFromVectorStore(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    workflow: Union[bool, 'WorkflowArgsFromVectorStoreRecursive1']


class WorkflowExecutionIncludeFromVectorStoreRecursive1(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    workflow: Union[bool, 'WorkflowArgsFromVectorStoreRecursive2']


class WorkflowExecutionIncludeFromVectorStoreRecursive2(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    workflow: Union[bool, 'WorkflowArgsFromVectorStoreRecursive3']


class WorkflowExecutionIncludeFromVectorStoreRecursive3(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    workflow: Union[bool, 'WorkflowArgsFromVectorStoreRecursive4']


class WorkflowExecutionIncludeFromVectorStoreRecursive4(TypedDict, total=False):
    """Relational arguments for VectorStore"""

    

class WorkflowExecutionArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class WorkflowExecutionArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class WorkflowExecutionArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class WorkflowExecutionArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class WorkflowExecutionArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    
    

class FindManyWorkflowExecutionArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class FindManyWorkflowExecutionArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class FindManyWorkflowExecutionArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class FindManyWorkflowExecutionArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class FindManyWorkflowExecutionArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    
    

class ToolIncludeFromVectorStore(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive1']
    mcpServer: Union[bool, 'MCPServerArgsFromVectorStoreRecursive1']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromVectorStoreRecursive1']


class ToolIncludeFromVectorStoreRecursive1(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive2']
    mcpServer: Union[bool, 'MCPServerArgsFromVectorStoreRecursive2']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromVectorStoreRecursive2']


class ToolIncludeFromVectorStoreRecursive2(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive3']
    mcpServer: Union[bool, 'MCPServerArgsFromVectorStoreRecursive3']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromVectorStoreRecursive3']


class ToolIncludeFromVectorStoreRecursive3(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive4']
    mcpServer: Union[bool, 'MCPServerArgsFromVectorStoreRecursive4']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromVectorStoreRecursive4']


class ToolIncludeFromVectorStoreRecursive4(TypedDict, total=False):
    """Relational arguments for VectorStore"""

    

class ToolArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'ToolIncludeFromToolRecursive1'


class ToolArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'ToolIncludeFromToolRecursive2'


class ToolArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'ToolIncludeFromToolRecursive3'


class ToolArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'ToolIncludeFromToolRecursive4'


class ToolArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    
    

class FindManyToolArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive1'


class FindManyToolArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive2'


class FindManyToolArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive3'


class FindManyToolArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive4'


class FindManyToolArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    
    

class ToolInvocationIncludeFromVectorStore(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    tool: Union[bool, 'ToolArgsFromVectorStoreRecursive1']


class ToolInvocationIncludeFromVectorStoreRecursive1(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    tool: Union[bool, 'ToolArgsFromVectorStoreRecursive2']


class ToolInvocationIncludeFromVectorStoreRecursive2(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    tool: Union[bool, 'ToolArgsFromVectorStoreRecursive3']


class ToolInvocationIncludeFromVectorStoreRecursive3(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    tool: Union[bool, 'ToolArgsFromVectorStoreRecursive4']


class ToolInvocationIncludeFromVectorStoreRecursive4(TypedDict, total=False):
    """Relational arguments for VectorStore"""

    

class ToolInvocationArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class ToolInvocationArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class ToolInvocationArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class ToolInvocationArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class ToolInvocationArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    
    

class FindManyToolInvocationArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class FindManyToolInvocationArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class FindManyToolInvocationArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class FindManyToolInvocationArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class FindManyToolInvocationArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    
    

class ConversationSessionIncludeFromVectorStore(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromVectorStoreRecursive1']


class ConversationSessionIncludeFromVectorStoreRecursive1(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromVectorStoreRecursive2']


class ConversationSessionIncludeFromVectorStoreRecursive2(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromVectorStoreRecursive3']


class ConversationSessionIncludeFromVectorStoreRecursive3(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromVectorStoreRecursive4']


class ConversationSessionIncludeFromVectorStoreRecursive4(TypedDict, total=False):
    """Relational arguments for VectorStore"""

    

class ConversationSessionArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class ConversationSessionArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class ConversationSessionArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class ConversationSessionArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class ConversationSessionArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    
    

class FindManyConversationSessionArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class FindManyConversationSessionArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class FindManyConversationSessionArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class FindManyConversationSessionArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class FindManyConversationSessionArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    
    

class MessageIncludeFromVectorStore(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    session: Union[bool, 'ConversationSessionArgsFromVectorStoreRecursive1']


class MessageIncludeFromVectorStoreRecursive1(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    session: Union[bool, 'ConversationSessionArgsFromVectorStoreRecursive2']


class MessageIncludeFromVectorStoreRecursive2(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    session: Union[bool, 'ConversationSessionArgsFromVectorStoreRecursive3']


class MessageIncludeFromVectorStoreRecursive3(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    session: Union[bool, 'ConversationSessionArgsFromVectorStoreRecursive4']


class MessageIncludeFromVectorStoreRecursive4(TypedDict, total=False):
    """Relational arguments for VectorStore"""

    

class MessageArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    
    

class FindManyMessageArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class VectorStoreIncludeFromVectorStore(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromVectorStoreRecursive1']


class VectorStoreIncludeFromVectorStoreRecursive1(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromVectorStoreRecursive2']


class VectorStoreIncludeFromVectorStoreRecursive2(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromVectorStoreRecursive3']


class VectorStoreIncludeFromVectorStoreRecursive3(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromVectorStoreRecursive4']


class VectorStoreIncludeFromVectorStoreRecursive4(TypedDict, total=False):
    """Relational arguments for VectorStore"""

    

class VectorStoreArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class VectorStoreArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class VectorStoreArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class VectorStoreArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class VectorStoreArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    
    

class FindManyVectorStoreArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class FindManyVectorStoreArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class FindManyVectorStoreArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class FindManyVectorStoreArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class FindManyVectorStoreArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    
    

class EmbeddingIncludeFromVectorStore(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    vectorStore: Union[bool, 'VectorStoreArgsFromVectorStoreRecursive1']


class EmbeddingIncludeFromVectorStoreRecursive1(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    vectorStore: Union[bool, 'VectorStoreArgsFromVectorStoreRecursive2']


class EmbeddingIncludeFromVectorStoreRecursive2(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    vectorStore: Union[bool, 'VectorStoreArgsFromVectorStoreRecursive3']


class EmbeddingIncludeFromVectorStoreRecursive3(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    vectorStore: Union[bool, 'VectorStoreArgsFromVectorStoreRecursive4']


class EmbeddingIncludeFromVectorStoreRecursive4(TypedDict, total=False):
    """Relational arguments for VectorStore"""

    

class EmbeddingArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class EmbeddingArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class EmbeddingArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class EmbeddingArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class EmbeddingArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    
    

class FindManyEmbeddingArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class FindManyEmbeddingArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class FindManyEmbeddingArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class FindManyEmbeddingArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class FindManyEmbeddingArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    
    

class MCPServerIncludeFromVectorStore(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    tools: Union[bool, 'FindManyToolArgsFromVectorStoreRecursive1']


class MCPServerIncludeFromVectorStoreRecursive1(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    tools: Union[bool, 'FindManyToolArgsFromVectorStoreRecursive2']


class MCPServerIncludeFromVectorStoreRecursive2(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    tools: Union[bool, 'FindManyToolArgsFromVectorStoreRecursive3']


class MCPServerIncludeFromVectorStoreRecursive3(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    tools: Union[bool, 'FindManyToolArgsFromVectorStoreRecursive4']


class MCPServerIncludeFromVectorStoreRecursive4(TypedDict, total=False):
    """Relational arguments for VectorStore"""

    

class MCPServerArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class MCPServerArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class MCPServerArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class MCPServerArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class MCPServerArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    
    

class FindManyMCPServerArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class FindManyMCPServerArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class FindManyMCPServerArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class FindManyMCPServerArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class FindManyMCPServerArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    
    

class EvaluationIncludeFromVectorStore(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive1']


class EvaluationIncludeFromVectorStoreRecursive1(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive2']


class EvaluationIncludeFromVectorStoreRecursive2(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive3']


class EvaluationIncludeFromVectorStoreRecursive3(TypedDict, total=False):
    """Relational arguments for VectorStore"""
    agent: Union[bool, 'AgentArgsFromVectorStoreRecursive4']


class EvaluationIncludeFromVectorStoreRecursive4(TypedDict, total=False):
    """Relational arguments for VectorStore"""

    

class EvaluationArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class EvaluationArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class EvaluationArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class EvaluationArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class EvaluationArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    
    

class FindManyEvaluationArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class FindManyEvaluationArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class FindManyEvaluationArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class FindManyEvaluationArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class FindManyEvaluationArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    
    

class UserIncludeFromVectorStore(TypedDict, total=False):
    """Relational arguments for VectorStore"""


class UserIncludeFromVectorStoreRecursive1(TypedDict, total=False):
    """Relational arguments for VectorStore"""


class UserIncludeFromVectorStoreRecursive2(TypedDict, total=False):
    """Relational arguments for VectorStore"""


class UserIncludeFromVectorStoreRecursive3(TypedDict, total=False):
    """Relational arguments for VectorStore"""


class UserIncludeFromVectorStoreRecursive4(TypedDict, total=False):
    """Relational arguments for VectorStore"""

    

class UserArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    
    

class FindManyUserArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class SystemConfigIncludeFromVectorStore(TypedDict, total=False):
    """Relational arguments for VectorStore"""


class SystemConfigIncludeFromVectorStoreRecursive1(TypedDict, total=False):
    """Relational arguments for VectorStore"""


class SystemConfigIncludeFromVectorStoreRecursive2(TypedDict, total=False):
    """Relational arguments for VectorStore"""


class SystemConfigIncludeFromVectorStoreRecursive3(TypedDict, total=False):
    """Relational arguments for VectorStore"""


class SystemConfigIncludeFromVectorStoreRecursive4(TypedDict, total=False):
    """Relational arguments for VectorStore"""

    

class SystemConfigArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class SystemConfigArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class SystemConfigArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class SystemConfigArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class SystemConfigArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    
    

class FindManySystemConfigArgsFromVectorStore(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class FindManySystemConfigArgsFromVectorStoreRecursive1(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class FindManySystemConfigArgsFromVectorStoreRecursive2(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class FindManySystemConfigArgsFromVectorStoreRecursive3(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class FindManySystemConfigArgsFromVectorStoreRecursive4(TypedDict, total=False):
    """Arguments for VectorStore"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    


FindManyVectorStoreArgs = FindManyVectorStoreArgsFromVectorStore
FindFirstVectorStoreArgs = FindManyVectorStoreArgsFromVectorStore


    

class VectorStoreWhereInput(TypedDict, total=False):
    """VectorStore arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    type: 'enums.VectorStoreType'
    configuration: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.VectorStoreStatus'
    statistics: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    embeddings: 'EmbeddingListRelationFilter'

    # should be noted that AND and NOT should be Union['VectorStoreWhereInputRecursive1', List['VectorStoreWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['VectorStoreWhereInputRecursive1']
    OR: List['VectorStoreWhereInputRecursive1']
    NOT: List['VectorStoreWhereInputRecursive1']


class VectorStoreWhereInputRecursive1(TypedDict, total=False):
    """VectorStore arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    type: 'enums.VectorStoreType'
    configuration: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.VectorStoreStatus'
    statistics: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    embeddings: 'EmbeddingListRelationFilter'

    # should be noted that AND and NOT should be Union['VectorStoreWhereInputRecursive2', List['VectorStoreWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['VectorStoreWhereInputRecursive2']
    OR: List['VectorStoreWhereInputRecursive2']
    NOT: List['VectorStoreWhereInputRecursive2']


class VectorStoreWhereInputRecursive2(TypedDict, total=False):
    """VectorStore arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    type: 'enums.VectorStoreType'
    configuration: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.VectorStoreStatus'
    statistics: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    embeddings: 'EmbeddingListRelationFilter'

    # should be noted that AND and NOT should be Union['VectorStoreWhereInputRecursive3', List['VectorStoreWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['VectorStoreWhereInputRecursive3']
    OR: List['VectorStoreWhereInputRecursive3']
    NOT: List['VectorStoreWhereInputRecursive3']


class VectorStoreWhereInputRecursive3(TypedDict, total=False):
    """VectorStore arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    type: 'enums.VectorStoreType'
    configuration: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.VectorStoreStatus'
    statistics: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    embeddings: 'EmbeddingListRelationFilter'

    # should be noted that AND and NOT should be Union['VectorStoreWhereInputRecursive4', List['VectorStoreWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['VectorStoreWhereInputRecursive4']
    OR: List['VectorStoreWhereInputRecursive4']
    NOT: List['VectorStoreWhereInputRecursive4']


class VectorStoreWhereInputRecursive4(TypedDict, total=False):
    """VectorStore arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    type: 'enums.VectorStoreType'
    configuration: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.VectorStoreStatus'
    statistics: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    embeddings: 'EmbeddingListRelationFilter'



# aggregate VectorStore types


    

class VectorStoreScalarWhereWithAggregatesInput(TypedDict, total=False):
    """VectorStore arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.VectorStoreType'
    configuration: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.VectorStoreStatus'
    statistics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['VectorStoreScalarWhereWithAggregatesInputRecursive1']
    OR: List['VectorStoreScalarWhereWithAggregatesInputRecursive1']
    NOT: List['VectorStoreScalarWhereWithAggregatesInputRecursive1']


class VectorStoreScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """VectorStore arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.VectorStoreType'
    configuration: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.VectorStoreStatus'
    statistics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['VectorStoreScalarWhereWithAggregatesInputRecursive2']
    OR: List['VectorStoreScalarWhereWithAggregatesInputRecursive2']
    NOT: List['VectorStoreScalarWhereWithAggregatesInputRecursive2']


class VectorStoreScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """VectorStore arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.VectorStoreType'
    configuration: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.VectorStoreStatus'
    statistics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['VectorStoreScalarWhereWithAggregatesInputRecursive3']
    OR: List['VectorStoreScalarWhereWithAggregatesInputRecursive3']
    NOT: List['VectorStoreScalarWhereWithAggregatesInputRecursive3']


class VectorStoreScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """VectorStore arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.VectorStoreType'
    configuration: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.VectorStoreStatus'
    statistics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['VectorStoreScalarWhereWithAggregatesInputRecursive4']
    OR: List['VectorStoreScalarWhereWithAggregatesInputRecursive4']
    NOT: List['VectorStoreScalarWhereWithAggregatesInputRecursive4']


class VectorStoreScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """VectorStore arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    type: 'enums.VectorStoreType'
    configuration: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.VectorStoreStatus'
    statistics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class VectorStoreGroupByOutput(TypedDict, total=False):
    id: _str
    name: _str
    type: 'enums.VectorStoreType'
    configuration: 'fields.Json'
    status: 'enums.VectorStoreStatus'
    statistics: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'VectorStoreSumAggregateOutput'
    _avg: 'VectorStoreAvgAggregateOutput'
    _min: 'VectorStoreMinAggregateOutput'
    _max: 'VectorStoreMaxAggregateOutput'
    _count: 'VectorStoreCountAggregateOutput'


class VectorStoreAvgAggregateOutput(TypedDict, total=False):
    """VectorStore output for aggregating averages"""


class VectorStoreSumAggregateOutput(TypedDict, total=False):
    """VectorStore output for aggregating sums"""


class VectorStoreScalarAggregateOutput(TypedDict, total=False):
    """VectorStore output including scalar fields"""
    id: _str
    name: _str
    type: 'enums.VectorStoreType'
    configuration: 'fields.Json'
    status: 'enums.VectorStoreStatus'
    statistics: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


VectorStoreMinAggregateOutput = VectorStoreScalarAggregateOutput
VectorStoreMaxAggregateOutput = VectorStoreScalarAggregateOutput


class VectorStoreMaxAggregateInput(TypedDict, total=False):
    """VectorStore input for aggregating by max"""
    id: bool
    name: bool
    type: bool
    configuration: bool
    status: bool
    statistics: bool
    createdAt: bool
    updatedAt: bool


class VectorStoreMinAggregateInput(TypedDict, total=False):
    """VectorStore input for aggregating by min"""
    id: bool
    name: bool
    type: bool
    configuration: bool
    status: bool
    statistics: bool
    createdAt: bool
    updatedAt: bool


class VectorStoreNumberAggregateInput(TypedDict, total=False):
    """VectorStore input for aggregating numbers"""


VectorStoreAvgAggregateInput = VectorStoreNumberAggregateInput
VectorStoreSumAggregateInput = VectorStoreNumberAggregateInput


VectorStoreCountAggregateInput = TypedDict(
    'VectorStoreCountAggregateInput',
    {
        'id': bool,
        'name': bool,
        'type': bool,
        'configuration': bool,
        'status': bool,
        'statistics': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

VectorStoreCountAggregateOutput = TypedDict(
    'VectorStoreCountAggregateOutput',
    {
        'id': int,
        'name': int,
        'type': int,
        'configuration': int,
        'status': int,
        'statistics': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


VectorStoreKeys = Literal[
    'id',
    'name',
    'type',
    'configuration',
    'status',
    'statistics',
    'createdAt',
    'updatedAt',
    'embeddings',
]
VectorStoreScalarFieldKeys = Literal[
    'id',
    'name',
    'type',
    'configuration',
    'status',
    'statistics',
    'createdAt',
    'updatedAt',
]
VectorStoreScalarFieldKeysT = TypeVar('VectorStoreScalarFieldKeysT', bound=VectorStoreScalarFieldKeys)

VectorStoreRelationalFieldKeys = Literal[
        'embeddings',
    ]

# Embedding types

class EmbeddingOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Embedding create method"""
    id: _str
    vectorStoreId: _str
    metadata: 'fields.Json'
    vector: List[_float]
    createdAt: datetime.datetime
    vectorStore: 'VectorStoreCreateNestedWithoutRelationsInput'


class EmbeddingCreateInput(EmbeddingOptionalCreateInput):
    """Required arguments to the Embedding create method"""
    documentId: _str
    chunkIndex: _int
    content: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class EmbeddingOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Embedding create method, without relations"""
    id: _str
    vectorStoreId: _str
    metadata: 'fields.Json'
    vector: List[_float]
    createdAt: datetime.datetime


class EmbeddingCreateWithoutRelationsInput(EmbeddingOptionalCreateWithoutRelationsInput):
    """Required arguments to the Embedding create method, without relations"""
    documentId: _str
    chunkIndex: _int
    content: _str


class EmbeddingCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'EmbeddingCreateWithoutRelationsInput'
    connect: 'EmbeddingWhereUniqueInput'


class EmbeddingCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['EmbeddingCreateWithoutRelationsInput', List['EmbeddingCreateWithoutRelationsInput']]
    connect: Union['EmbeddingWhereUniqueInput', List['EmbeddingWhereUniqueInput']]


_EmbeddingWhereUnique_id_Input = TypedDict(
    '_EmbeddingWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_EmbeddingCompoundvectorStoreId_documentId_chunkIndexKeyInner = TypedDict(
    '_EmbeddingCompoundvectorStoreId_documentId_chunkIndexKeyInner',
    {
        'vectorStoreId': '_str',
        'documentId': '_str',
        'chunkIndex': '_int',
    },
    total=True
)

_EmbeddingCompoundvectorStoreId_documentId_chunkIndexKey = TypedDict(
    '_EmbeddingCompoundvectorStoreId_documentId_chunkIndexKey',
    {
        'vectorStoreId_documentId_chunkIndex': '_EmbeddingCompoundvectorStoreId_documentId_chunkIndexKeyInner',
    },
    total=True
)

EmbeddingWhereUniqueInput = Union[
    '_EmbeddingWhereUnique_id_Input',
    '_EmbeddingCompoundvectorStoreId_documentId_chunkIndexKey',
]


class EmbeddingUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    documentId: _str
    chunkIndex: Union[AtomicIntInput, _int]
    content: _str
    metadata: 'fields.Json'
    vector: 'types.FloatListUpdate'
    createdAt: datetime.datetime
    vectorStore: 'VectorStoreUpdateOneWithoutRelationsInput'


class EmbeddingUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    documentId: _str
    chunkIndex: Union[AtomicIntInput, _int]
    content: _str
    metadata: 'fields.Json'
    vector: 'types.FloatListUpdate'
    createdAt: datetime.datetime


class EmbeddingUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['EmbeddingCreateWithoutRelationsInput']
    connect: List['EmbeddingWhereUniqueInput']
    set: List['EmbeddingWhereUniqueInput']
    disconnect: List['EmbeddingWhereUniqueInput']
    delete: List['EmbeddingWhereUniqueInput']

    # TODO
    # update: List['EmbeddingUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['EmbeddingUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['EmbeddingScalarWhereInput']
    # upsert: List['EmbeddingUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['EmbeddingCreateOrConnectWithoutRelationsInput']


class EmbeddingUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'EmbeddingCreateWithoutRelationsInput'
    connect: 'EmbeddingWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'EmbeddingUpdateInput'
    # upsert: 'EmbeddingUpsertWithoutRelationsInput'
    # connectOrCreate: 'EmbeddingCreateOrConnectWithoutRelationsInput'


class EmbeddingUpsertInput(TypedDict):
    create: 'EmbeddingCreateInput'
    update: 'EmbeddingUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Embedding_id_OrderByInput = TypedDict(
    '_Embedding_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Embedding_vectorStoreId_OrderByInput = TypedDict(
    '_Embedding_vectorStoreId_OrderByInput',
    {
        'vectorStoreId': 'SortOrder',
    },
    total=True
)

_Embedding_documentId_OrderByInput = TypedDict(
    '_Embedding_documentId_OrderByInput',
    {
        'documentId': 'SortOrder',
    },
    total=True
)

_Embedding_chunkIndex_OrderByInput = TypedDict(
    '_Embedding_chunkIndex_OrderByInput',
    {
        'chunkIndex': 'SortOrder',
    },
    total=True
)

_Embedding_content_OrderByInput = TypedDict(
    '_Embedding_content_OrderByInput',
    {
        'content': 'SortOrder',
    },
    total=True
)

_Embedding_metadata_OrderByInput = TypedDict(
    '_Embedding_metadata_OrderByInput',
    {
        'metadata': 'SortOrder',
    },
    total=True
)

_Embedding_vector_OrderByInput = TypedDict(
    '_Embedding_vector_OrderByInput',
    {
        'vector': 'SortOrder',
    },
    total=True
)

_Embedding_createdAt_OrderByInput = TypedDict(
    '_Embedding_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

EmbeddingOrderByInput = Union[
    '_Embedding_id_OrderByInput',
    '_Embedding_vectorStoreId_OrderByInput',
    '_Embedding_documentId_OrderByInput',
    '_Embedding_chunkIndex_OrderByInput',
    '_Embedding_content_OrderByInput',
    '_Embedding_metadata_OrderByInput',
    '_Embedding_vector_OrderByInput',
    '_Embedding_createdAt_OrderByInput',
]



# recursive Embedding types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

EmbeddingRelationFilter = TypedDict(
    'EmbeddingRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class EmbeddingListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class EmbeddingInclude(TypedDict, total=False):
    """Embedding relational arguments"""
    vectorStore: Union[bool, 'VectorStoreArgsFromEmbedding']


    

class AgentIncludeFromEmbedding(TypedDict, total=False):
    """Relational arguments for Embedding"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromEmbeddingRecursive1']
    tools: Union[bool, 'FindManyToolArgsFromEmbeddingRecursive1']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromEmbeddingRecursive1']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromEmbeddingRecursive1']


class AgentIncludeFromEmbeddingRecursive1(TypedDict, total=False):
    """Relational arguments for Embedding"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromEmbeddingRecursive2']
    tools: Union[bool, 'FindManyToolArgsFromEmbeddingRecursive2']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromEmbeddingRecursive2']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromEmbeddingRecursive2']


class AgentIncludeFromEmbeddingRecursive2(TypedDict, total=False):
    """Relational arguments for Embedding"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromEmbeddingRecursive3']
    tools: Union[bool, 'FindManyToolArgsFromEmbeddingRecursive3']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromEmbeddingRecursive3']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromEmbeddingRecursive3']


class AgentIncludeFromEmbeddingRecursive3(TypedDict, total=False):
    """Relational arguments for Embedding"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromEmbeddingRecursive4']
    tools: Union[bool, 'FindManyToolArgsFromEmbeddingRecursive4']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromEmbeddingRecursive4']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromEmbeddingRecursive4']


class AgentIncludeFromEmbeddingRecursive4(TypedDict, total=False):
    """Relational arguments for Embedding"""

    

class AgentArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'AgentIncludeFromAgentRecursive1'


class AgentArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'AgentIncludeFromAgentRecursive2'


class AgentArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'AgentIncludeFromAgentRecursive3'


class AgentArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'AgentIncludeFromAgentRecursive4'


class AgentArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    
    

class FindManyAgentArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive1'


class FindManyAgentArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive2'


class FindManyAgentArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive3'


class FindManyAgentArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive4'


class FindManyAgentArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    
    

class WorkflowIncludeFromEmbedding(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive1']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromEmbeddingRecursive1']


class WorkflowIncludeFromEmbeddingRecursive1(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive2']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromEmbeddingRecursive2']


class WorkflowIncludeFromEmbeddingRecursive2(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive3']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromEmbeddingRecursive3']


class WorkflowIncludeFromEmbeddingRecursive3(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive4']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromEmbeddingRecursive4']


class WorkflowIncludeFromEmbeddingRecursive4(TypedDict, total=False):
    """Relational arguments for Embedding"""

    

class WorkflowArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class WorkflowArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class WorkflowArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class WorkflowArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class WorkflowArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    
    

class FindManyWorkflowArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class FindManyWorkflowArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class FindManyWorkflowArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class FindManyWorkflowArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class FindManyWorkflowArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    
    

class WorkflowExecutionIncludeFromEmbedding(TypedDict, total=False):
    """Relational arguments for Embedding"""
    workflow: Union[bool, 'WorkflowArgsFromEmbeddingRecursive1']


class WorkflowExecutionIncludeFromEmbeddingRecursive1(TypedDict, total=False):
    """Relational arguments for Embedding"""
    workflow: Union[bool, 'WorkflowArgsFromEmbeddingRecursive2']


class WorkflowExecutionIncludeFromEmbeddingRecursive2(TypedDict, total=False):
    """Relational arguments for Embedding"""
    workflow: Union[bool, 'WorkflowArgsFromEmbeddingRecursive3']


class WorkflowExecutionIncludeFromEmbeddingRecursive3(TypedDict, total=False):
    """Relational arguments for Embedding"""
    workflow: Union[bool, 'WorkflowArgsFromEmbeddingRecursive4']


class WorkflowExecutionIncludeFromEmbeddingRecursive4(TypedDict, total=False):
    """Relational arguments for Embedding"""

    

class WorkflowExecutionArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class WorkflowExecutionArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class WorkflowExecutionArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class WorkflowExecutionArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class WorkflowExecutionArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    
    

class FindManyWorkflowExecutionArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class FindManyWorkflowExecutionArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class FindManyWorkflowExecutionArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class FindManyWorkflowExecutionArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class FindManyWorkflowExecutionArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    
    

class ToolIncludeFromEmbedding(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive1']
    mcpServer: Union[bool, 'MCPServerArgsFromEmbeddingRecursive1']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromEmbeddingRecursive1']


class ToolIncludeFromEmbeddingRecursive1(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive2']
    mcpServer: Union[bool, 'MCPServerArgsFromEmbeddingRecursive2']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromEmbeddingRecursive2']


class ToolIncludeFromEmbeddingRecursive2(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive3']
    mcpServer: Union[bool, 'MCPServerArgsFromEmbeddingRecursive3']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromEmbeddingRecursive3']


class ToolIncludeFromEmbeddingRecursive3(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive4']
    mcpServer: Union[bool, 'MCPServerArgsFromEmbeddingRecursive4']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromEmbeddingRecursive4']


class ToolIncludeFromEmbeddingRecursive4(TypedDict, total=False):
    """Relational arguments for Embedding"""

    

class ToolArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'ToolIncludeFromToolRecursive1'


class ToolArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'ToolIncludeFromToolRecursive2'


class ToolArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'ToolIncludeFromToolRecursive3'


class ToolArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'ToolIncludeFromToolRecursive4'


class ToolArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    
    

class FindManyToolArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive1'


class FindManyToolArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive2'


class FindManyToolArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive3'


class FindManyToolArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive4'


class FindManyToolArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    
    

class ToolInvocationIncludeFromEmbedding(TypedDict, total=False):
    """Relational arguments for Embedding"""
    tool: Union[bool, 'ToolArgsFromEmbeddingRecursive1']


class ToolInvocationIncludeFromEmbeddingRecursive1(TypedDict, total=False):
    """Relational arguments for Embedding"""
    tool: Union[bool, 'ToolArgsFromEmbeddingRecursive2']


class ToolInvocationIncludeFromEmbeddingRecursive2(TypedDict, total=False):
    """Relational arguments for Embedding"""
    tool: Union[bool, 'ToolArgsFromEmbeddingRecursive3']


class ToolInvocationIncludeFromEmbeddingRecursive3(TypedDict, total=False):
    """Relational arguments for Embedding"""
    tool: Union[bool, 'ToolArgsFromEmbeddingRecursive4']


class ToolInvocationIncludeFromEmbeddingRecursive4(TypedDict, total=False):
    """Relational arguments for Embedding"""

    

class ToolInvocationArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class ToolInvocationArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class ToolInvocationArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class ToolInvocationArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class ToolInvocationArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    
    

class FindManyToolInvocationArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class FindManyToolInvocationArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class FindManyToolInvocationArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class FindManyToolInvocationArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class FindManyToolInvocationArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    
    

class ConversationSessionIncludeFromEmbedding(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromEmbeddingRecursive1']


class ConversationSessionIncludeFromEmbeddingRecursive1(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromEmbeddingRecursive2']


class ConversationSessionIncludeFromEmbeddingRecursive2(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromEmbeddingRecursive3']


class ConversationSessionIncludeFromEmbeddingRecursive3(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromEmbeddingRecursive4']


class ConversationSessionIncludeFromEmbeddingRecursive4(TypedDict, total=False):
    """Relational arguments for Embedding"""

    

class ConversationSessionArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class ConversationSessionArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class ConversationSessionArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class ConversationSessionArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class ConversationSessionArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    
    

class FindManyConversationSessionArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class FindManyConversationSessionArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class FindManyConversationSessionArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class FindManyConversationSessionArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class FindManyConversationSessionArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    
    

class MessageIncludeFromEmbedding(TypedDict, total=False):
    """Relational arguments for Embedding"""
    session: Union[bool, 'ConversationSessionArgsFromEmbeddingRecursive1']


class MessageIncludeFromEmbeddingRecursive1(TypedDict, total=False):
    """Relational arguments for Embedding"""
    session: Union[bool, 'ConversationSessionArgsFromEmbeddingRecursive2']


class MessageIncludeFromEmbeddingRecursive2(TypedDict, total=False):
    """Relational arguments for Embedding"""
    session: Union[bool, 'ConversationSessionArgsFromEmbeddingRecursive3']


class MessageIncludeFromEmbeddingRecursive3(TypedDict, total=False):
    """Relational arguments for Embedding"""
    session: Union[bool, 'ConversationSessionArgsFromEmbeddingRecursive4']


class MessageIncludeFromEmbeddingRecursive4(TypedDict, total=False):
    """Relational arguments for Embedding"""

    

class MessageArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    
    

class FindManyMessageArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class VectorStoreIncludeFromEmbedding(TypedDict, total=False):
    """Relational arguments for Embedding"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromEmbeddingRecursive1']


class VectorStoreIncludeFromEmbeddingRecursive1(TypedDict, total=False):
    """Relational arguments for Embedding"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromEmbeddingRecursive2']


class VectorStoreIncludeFromEmbeddingRecursive2(TypedDict, total=False):
    """Relational arguments for Embedding"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromEmbeddingRecursive3']


class VectorStoreIncludeFromEmbeddingRecursive3(TypedDict, total=False):
    """Relational arguments for Embedding"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromEmbeddingRecursive4']


class VectorStoreIncludeFromEmbeddingRecursive4(TypedDict, total=False):
    """Relational arguments for Embedding"""

    

class VectorStoreArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class VectorStoreArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class VectorStoreArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class VectorStoreArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class VectorStoreArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    
    

class FindManyVectorStoreArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class FindManyVectorStoreArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class FindManyVectorStoreArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class FindManyVectorStoreArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class FindManyVectorStoreArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    
    

class EmbeddingIncludeFromEmbedding(TypedDict, total=False):
    """Relational arguments for Embedding"""
    vectorStore: Union[bool, 'VectorStoreArgsFromEmbeddingRecursive1']


class EmbeddingIncludeFromEmbeddingRecursive1(TypedDict, total=False):
    """Relational arguments for Embedding"""
    vectorStore: Union[bool, 'VectorStoreArgsFromEmbeddingRecursive2']


class EmbeddingIncludeFromEmbeddingRecursive2(TypedDict, total=False):
    """Relational arguments for Embedding"""
    vectorStore: Union[bool, 'VectorStoreArgsFromEmbeddingRecursive3']


class EmbeddingIncludeFromEmbeddingRecursive3(TypedDict, total=False):
    """Relational arguments for Embedding"""
    vectorStore: Union[bool, 'VectorStoreArgsFromEmbeddingRecursive4']


class EmbeddingIncludeFromEmbeddingRecursive4(TypedDict, total=False):
    """Relational arguments for Embedding"""

    

class EmbeddingArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class EmbeddingArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class EmbeddingArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class EmbeddingArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class EmbeddingArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    
    

class FindManyEmbeddingArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class FindManyEmbeddingArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class FindManyEmbeddingArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class FindManyEmbeddingArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class FindManyEmbeddingArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    
    

class MCPServerIncludeFromEmbedding(TypedDict, total=False):
    """Relational arguments for Embedding"""
    tools: Union[bool, 'FindManyToolArgsFromEmbeddingRecursive1']


class MCPServerIncludeFromEmbeddingRecursive1(TypedDict, total=False):
    """Relational arguments for Embedding"""
    tools: Union[bool, 'FindManyToolArgsFromEmbeddingRecursive2']


class MCPServerIncludeFromEmbeddingRecursive2(TypedDict, total=False):
    """Relational arguments for Embedding"""
    tools: Union[bool, 'FindManyToolArgsFromEmbeddingRecursive3']


class MCPServerIncludeFromEmbeddingRecursive3(TypedDict, total=False):
    """Relational arguments for Embedding"""
    tools: Union[bool, 'FindManyToolArgsFromEmbeddingRecursive4']


class MCPServerIncludeFromEmbeddingRecursive4(TypedDict, total=False):
    """Relational arguments for Embedding"""

    

class MCPServerArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class MCPServerArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class MCPServerArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class MCPServerArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class MCPServerArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    
    

class FindManyMCPServerArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class FindManyMCPServerArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class FindManyMCPServerArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class FindManyMCPServerArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class FindManyMCPServerArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    
    

class EvaluationIncludeFromEmbedding(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive1']


class EvaluationIncludeFromEmbeddingRecursive1(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive2']


class EvaluationIncludeFromEmbeddingRecursive2(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive3']


class EvaluationIncludeFromEmbeddingRecursive3(TypedDict, total=False):
    """Relational arguments for Embedding"""
    agent: Union[bool, 'AgentArgsFromEmbeddingRecursive4']


class EvaluationIncludeFromEmbeddingRecursive4(TypedDict, total=False):
    """Relational arguments for Embedding"""

    

class EvaluationArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class EvaluationArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class EvaluationArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class EvaluationArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class EvaluationArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    
    

class FindManyEvaluationArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class FindManyEvaluationArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class FindManyEvaluationArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class FindManyEvaluationArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class FindManyEvaluationArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    
    

class UserIncludeFromEmbedding(TypedDict, total=False):
    """Relational arguments for Embedding"""


class UserIncludeFromEmbeddingRecursive1(TypedDict, total=False):
    """Relational arguments for Embedding"""


class UserIncludeFromEmbeddingRecursive2(TypedDict, total=False):
    """Relational arguments for Embedding"""


class UserIncludeFromEmbeddingRecursive3(TypedDict, total=False):
    """Relational arguments for Embedding"""


class UserIncludeFromEmbeddingRecursive4(TypedDict, total=False):
    """Relational arguments for Embedding"""

    

class UserArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    
    

class FindManyUserArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class SystemConfigIncludeFromEmbedding(TypedDict, total=False):
    """Relational arguments for Embedding"""


class SystemConfigIncludeFromEmbeddingRecursive1(TypedDict, total=False):
    """Relational arguments for Embedding"""


class SystemConfigIncludeFromEmbeddingRecursive2(TypedDict, total=False):
    """Relational arguments for Embedding"""


class SystemConfigIncludeFromEmbeddingRecursive3(TypedDict, total=False):
    """Relational arguments for Embedding"""


class SystemConfigIncludeFromEmbeddingRecursive4(TypedDict, total=False):
    """Relational arguments for Embedding"""

    

class SystemConfigArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class SystemConfigArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class SystemConfigArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class SystemConfigArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class SystemConfigArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    
    

class FindManySystemConfigArgsFromEmbedding(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class FindManySystemConfigArgsFromEmbeddingRecursive1(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class FindManySystemConfigArgsFromEmbeddingRecursive2(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class FindManySystemConfigArgsFromEmbeddingRecursive3(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class FindManySystemConfigArgsFromEmbeddingRecursive4(TypedDict, total=False):
    """Arguments for Embedding"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    


FindManyEmbeddingArgs = FindManyEmbeddingArgsFromEmbedding
FindFirstEmbeddingArgs = FindManyEmbeddingArgsFromEmbedding


    

class EmbeddingWhereInput(TypedDict, total=False):
    """Embedding arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    vectorStoreId: Union[_str, 'types.StringFilter']
    documentId: Union[_str, 'types.StringFilter']
    chunkIndex: Union[_int, 'types.IntFilter']
    content: Union[_str, 'types.StringFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    vector: 'types.FloatListFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    vectorStore: 'VectorStoreRelationFilter'

    # should be noted that AND and NOT should be Union['EmbeddingWhereInputRecursive1', List['EmbeddingWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['EmbeddingWhereInputRecursive1']
    OR: List['EmbeddingWhereInputRecursive1']
    NOT: List['EmbeddingWhereInputRecursive1']


class EmbeddingWhereInputRecursive1(TypedDict, total=False):
    """Embedding arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    vectorStoreId: Union[_str, 'types.StringFilter']
    documentId: Union[_str, 'types.StringFilter']
    chunkIndex: Union[_int, 'types.IntFilter']
    content: Union[_str, 'types.StringFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    vector: 'types.FloatListFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    vectorStore: 'VectorStoreRelationFilter'

    # should be noted that AND and NOT should be Union['EmbeddingWhereInputRecursive2', List['EmbeddingWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['EmbeddingWhereInputRecursive2']
    OR: List['EmbeddingWhereInputRecursive2']
    NOT: List['EmbeddingWhereInputRecursive2']


class EmbeddingWhereInputRecursive2(TypedDict, total=False):
    """Embedding arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    vectorStoreId: Union[_str, 'types.StringFilter']
    documentId: Union[_str, 'types.StringFilter']
    chunkIndex: Union[_int, 'types.IntFilter']
    content: Union[_str, 'types.StringFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    vector: 'types.FloatListFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    vectorStore: 'VectorStoreRelationFilter'

    # should be noted that AND and NOT should be Union['EmbeddingWhereInputRecursive3', List['EmbeddingWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['EmbeddingWhereInputRecursive3']
    OR: List['EmbeddingWhereInputRecursive3']
    NOT: List['EmbeddingWhereInputRecursive3']


class EmbeddingWhereInputRecursive3(TypedDict, total=False):
    """Embedding arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    vectorStoreId: Union[_str, 'types.StringFilter']
    documentId: Union[_str, 'types.StringFilter']
    chunkIndex: Union[_int, 'types.IntFilter']
    content: Union[_str, 'types.StringFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    vector: 'types.FloatListFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    vectorStore: 'VectorStoreRelationFilter'

    # should be noted that AND and NOT should be Union['EmbeddingWhereInputRecursive4', List['EmbeddingWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['EmbeddingWhereInputRecursive4']
    OR: List['EmbeddingWhereInputRecursive4']
    NOT: List['EmbeddingWhereInputRecursive4']


class EmbeddingWhereInputRecursive4(TypedDict, total=False):
    """Embedding arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    vectorStoreId: Union[_str, 'types.StringFilter']
    documentId: Union[_str, 'types.StringFilter']
    chunkIndex: Union[_int, 'types.IntFilter']
    content: Union[_str, 'types.StringFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    vector: 'types.FloatListFilter'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    vectorStore: 'VectorStoreRelationFilter'



# aggregate Embedding types


    

class EmbeddingScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Embedding arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    vectorStoreId: Union[_str, 'types.StringWithAggregatesFilter']
    documentId: Union[_str, 'types.StringWithAggregatesFilter']
    chunkIndex: Union[_int, 'types.IntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    vector: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['EmbeddingScalarWhereWithAggregatesInputRecursive1']
    OR: List['EmbeddingScalarWhereWithAggregatesInputRecursive1']
    NOT: List['EmbeddingScalarWhereWithAggregatesInputRecursive1']


class EmbeddingScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Embedding arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    vectorStoreId: Union[_str, 'types.StringWithAggregatesFilter']
    documentId: Union[_str, 'types.StringWithAggregatesFilter']
    chunkIndex: Union[_int, 'types.IntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    vector: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['EmbeddingScalarWhereWithAggregatesInputRecursive2']
    OR: List['EmbeddingScalarWhereWithAggregatesInputRecursive2']
    NOT: List['EmbeddingScalarWhereWithAggregatesInputRecursive2']


class EmbeddingScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Embedding arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    vectorStoreId: Union[_str, 'types.StringWithAggregatesFilter']
    documentId: Union[_str, 'types.StringWithAggregatesFilter']
    chunkIndex: Union[_int, 'types.IntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    vector: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['EmbeddingScalarWhereWithAggregatesInputRecursive3']
    OR: List['EmbeddingScalarWhereWithAggregatesInputRecursive3']
    NOT: List['EmbeddingScalarWhereWithAggregatesInputRecursive3']


class EmbeddingScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Embedding arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    vectorStoreId: Union[_str, 'types.StringWithAggregatesFilter']
    documentId: Union[_str, 'types.StringWithAggregatesFilter']
    chunkIndex: Union[_int, 'types.IntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    vector: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['EmbeddingScalarWhereWithAggregatesInputRecursive4']
    OR: List['EmbeddingScalarWhereWithAggregatesInputRecursive4']
    NOT: List['EmbeddingScalarWhereWithAggregatesInputRecursive4']


class EmbeddingScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Embedding arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    vectorStoreId: Union[_str, 'types.StringWithAggregatesFilter']
    documentId: Union[_str, 'types.StringWithAggregatesFilter']
    chunkIndex: Union[_int, 'types.IntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    vector: Union[_float, 'types.FloatWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class EmbeddingGroupByOutput(TypedDict, total=False):
    id: _str
    vectorStoreId: _str
    documentId: _str
    chunkIndex: _int
    content: _str
    metadata: 'fields.Json'
    vector: List[_float]
    createdAt: datetime.datetime
    _sum: 'EmbeddingSumAggregateOutput'
    _avg: 'EmbeddingAvgAggregateOutput'
    _min: 'EmbeddingMinAggregateOutput'
    _max: 'EmbeddingMaxAggregateOutput'
    _count: 'EmbeddingCountAggregateOutput'


class EmbeddingAvgAggregateOutput(TypedDict, total=False):
    """Embedding output for aggregating averages"""
    chunkIndex: float
    vector: float


class EmbeddingSumAggregateOutput(TypedDict, total=False):
    """Embedding output for aggregating sums"""
    chunkIndex: _int
    vector: List[_float]


class EmbeddingScalarAggregateOutput(TypedDict, total=False):
    """Embedding output including scalar fields"""
    id: _str
    vectorStoreId: _str
    documentId: _str
    chunkIndex: _int
    content: _str
    metadata: 'fields.Json'
    vector: List[_float]
    createdAt: datetime.datetime


EmbeddingMinAggregateOutput = EmbeddingScalarAggregateOutput
EmbeddingMaxAggregateOutput = EmbeddingScalarAggregateOutput


class EmbeddingMaxAggregateInput(TypedDict, total=False):
    """Embedding input for aggregating by max"""
    id: bool
    vectorStoreId: bool
    documentId: bool
    chunkIndex: bool
    content: bool
    metadata: bool
    vector: bool
    createdAt: bool


class EmbeddingMinAggregateInput(TypedDict, total=False):
    """Embedding input for aggregating by min"""
    id: bool
    vectorStoreId: bool
    documentId: bool
    chunkIndex: bool
    content: bool
    metadata: bool
    vector: bool
    createdAt: bool


class EmbeddingNumberAggregateInput(TypedDict, total=False):
    """Embedding input for aggregating numbers"""
    chunkIndex: bool
    vector: bool


EmbeddingAvgAggregateInput = EmbeddingNumberAggregateInput
EmbeddingSumAggregateInput = EmbeddingNumberAggregateInput


EmbeddingCountAggregateInput = TypedDict(
    'EmbeddingCountAggregateInput',
    {
        'id': bool,
        'vectorStoreId': bool,
        'documentId': bool,
        'chunkIndex': bool,
        'content': bool,
        'metadata': bool,
        'vector': bool,
        'createdAt': bool,
        '_all': bool,
    },
    total=False,
)

EmbeddingCountAggregateOutput = TypedDict(
    'EmbeddingCountAggregateOutput',
    {
        'id': int,
        'vectorStoreId': int,
        'documentId': int,
        'chunkIndex': int,
        'content': int,
        'metadata': int,
        'vector': int,
        'createdAt': int,
        '_all': int,
    },
    total=False,
)


EmbeddingKeys = Literal[
    'id',
    'vectorStoreId',
    'documentId',
    'chunkIndex',
    'content',
    'metadata',
    'vector',
    'createdAt',
    'vectorStore',
]
EmbeddingScalarFieldKeys = Literal[
    'id',
    'vectorStoreId',
    'documentId',
    'chunkIndex',
    'content',
    'metadata',
    'vector',
    'createdAt',
]
EmbeddingScalarFieldKeysT = TypeVar('EmbeddingScalarFieldKeysT', bound=EmbeddingScalarFieldKeys)

EmbeddingRelationalFieldKeys = Literal[
        'vectorStore',
    ]

# MCPServer types

class MCPServerOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the MCPServer create method"""
    id: _str
    capabilities: 'fields.Json'
    status: 'enums.MCPServerStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    tools: 'ToolCreateManyNestedWithoutRelationsInput'


class MCPServerCreateInput(MCPServerOptionalCreateInput):
    """Required arguments to the MCPServer create method"""
    name: _str
    endpointUrl: _str
    authenticationDetails: 'fields.Json'
    securityPolicy: 'fields.Json'


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class MCPServerOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the MCPServer create method, without relations"""
    id: _str
    capabilities: 'fields.Json'
    status: 'enums.MCPServerStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class MCPServerCreateWithoutRelationsInput(MCPServerOptionalCreateWithoutRelationsInput):
    """Required arguments to the MCPServer create method, without relations"""
    name: _str
    endpointUrl: _str
    authenticationDetails: 'fields.Json'
    securityPolicy: 'fields.Json'


class MCPServerCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'MCPServerCreateWithoutRelationsInput'
    connect: 'MCPServerWhereUniqueInput'


class MCPServerCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['MCPServerCreateWithoutRelationsInput', List['MCPServerCreateWithoutRelationsInput']]
    connect: Union['MCPServerWhereUniqueInput', List['MCPServerWhereUniqueInput']]


_MCPServerWhereUnique_id_Input = TypedDict(
    '_MCPServerWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_MCPServerWhereUnique_name_Input = TypedDict(
    '_MCPServerWhereUnique_name_Input',
    {
        'name': '_str',
    },
    total=True
)

MCPServerWhereUniqueInput = Union[
    '_MCPServerWhereUnique_id_Input',
    '_MCPServerWhereUnique_name_Input',
]


class MCPServerUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    name: _str
    endpointUrl: _str
    authenticationDetails: 'fields.Json'
    capabilities: 'fields.Json'
    securityPolicy: 'fields.Json'
    status: 'enums.MCPServerStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    tools: 'ToolUpdateManyWithoutRelationsInput'


class MCPServerUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    name: _str
    endpointUrl: _str
    authenticationDetails: 'fields.Json'
    capabilities: 'fields.Json'
    securityPolicy: 'fields.Json'
    status: 'enums.MCPServerStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class MCPServerUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['MCPServerCreateWithoutRelationsInput']
    connect: List['MCPServerWhereUniqueInput']
    set: List['MCPServerWhereUniqueInput']
    disconnect: List['MCPServerWhereUniqueInput']
    delete: List['MCPServerWhereUniqueInput']

    # TODO
    # update: List['MCPServerUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['MCPServerUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['MCPServerScalarWhereInput']
    # upsert: List['MCPServerUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['MCPServerCreateOrConnectWithoutRelationsInput']


class MCPServerUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'MCPServerCreateWithoutRelationsInput'
    connect: 'MCPServerWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'MCPServerUpdateInput'
    # upsert: 'MCPServerUpsertWithoutRelationsInput'
    # connectOrCreate: 'MCPServerCreateOrConnectWithoutRelationsInput'


class MCPServerUpsertInput(TypedDict):
    create: 'MCPServerCreateInput'
    update: 'MCPServerUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_MCPServer_id_OrderByInput = TypedDict(
    '_MCPServer_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_MCPServer_name_OrderByInput = TypedDict(
    '_MCPServer_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_MCPServer_endpointUrl_OrderByInput = TypedDict(
    '_MCPServer_endpointUrl_OrderByInput',
    {
        'endpointUrl': 'SortOrder',
    },
    total=True
)

_MCPServer_authenticationDetails_OrderByInput = TypedDict(
    '_MCPServer_authenticationDetails_OrderByInput',
    {
        'authenticationDetails': 'SortOrder',
    },
    total=True
)

_MCPServer_capabilities_OrderByInput = TypedDict(
    '_MCPServer_capabilities_OrderByInput',
    {
        'capabilities': 'SortOrder',
    },
    total=True
)

_MCPServer_securityPolicy_OrderByInput = TypedDict(
    '_MCPServer_securityPolicy_OrderByInput',
    {
        'securityPolicy': 'SortOrder',
    },
    total=True
)

_MCPServer_status_OrderByInput = TypedDict(
    '_MCPServer_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_MCPServer_createdAt_OrderByInput = TypedDict(
    '_MCPServer_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_MCPServer_updatedAt_OrderByInput = TypedDict(
    '_MCPServer_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

MCPServerOrderByInput = Union[
    '_MCPServer_id_OrderByInput',
    '_MCPServer_name_OrderByInput',
    '_MCPServer_endpointUrl_OrderByInput',
    '_MCPServer_authenticationDetails_OrderByInput',
    '_MCPServer_capabilities_OrderByInput',
    '_MCPServer_securityPolicy_OrderByInput',
    '_MCPServer_status_OrderByInput',
    '_MCPServer_createdAt_OrderByInput',
    '_MCPServer_updatedAt_OrderByInput',
]



# recursive MCPServer types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

MCPServerRelationFilter = TypedDict(
    'MCPServerRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class MCPServerListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class MCPServerInclude(TypedDict, total=False):
    """MCPServer relational arguments"""
    tools: Union[bool, 'FindManyToolArgsFromMCPServer']


    

class AgentIncludeFromMCPServer(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromMCPServerRecursive1']
    tools: Union[bool, 'FindManyToolArgsFromMCPServerRecursive1']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromMCPServerRecursive1']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromMCPServerRecursive1']


class AgentIncludeFromMCPServerRecursive1(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromMCPServerRecursive2']
    tools: Union[bool, 'FindManyToolArgsFromMCPServerRecursive2']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromMCPServerRecursive2']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromMCPServerRecursive2']


class AgentIncludeFromMCPServerRecursive2(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromMCPServerRecursive3']
    tools: Union[bool, 'FindManyToolArgsFromMCPServerRecursive3']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromMCPServerRecursive3']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromMCPServerRecursive3']


class AgentIncludeFromMCPServerRecursive3(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromMCPServerRecursive4']
    tools: Union[bool, 'FindManyToolArgsFromMCPServerRecursive4']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromMCPServerRecursive4']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromMCPServerRecursive4']


class AgentIncludeFromMCPServerRecursive4(TypedDict, total=False):
    """Relational arguments for MCPServer"""

    

class AgentArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'AgentIncludeFromAgentRecursive1'


class AgentArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'AgentIncludeFromAgentRecursive2'


class AgentArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'AgentIncludeFromAgentRecursive3'


class AgentArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'AgentIncludeFromAgentRecursive4'


class AgentArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    
    

class FindManyAgentArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive1'


class FindManyAgentArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive2'


class FindManyAgentArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive3'


class FindManyAgentArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive4'


class FindManyAgentArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    
    

class WorkflowIncludeFromMCPServer(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive1']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromMCPServerRecursive1']


class WorkflowIncludeFromMCPServerRecursive1(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive2']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromMCPServerRecursive2']


class WorkflowIncludeFromMCPServerRecursive2(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive3']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromMCPServerRecursive3']


class WorkflowIncludeFromMCPServerRecursive3(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive4']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromMCPServerRecursive4']


class WorkflowIncludeFromMCPServerRecursive4(TypedDict, total=False):
    """Relational arguments for MCPServer"""

    

class WorkflowArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class WorkflowArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class WorkflowArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class WorkflowArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class WorkflowArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    
    

class FindManyWorkflowArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class FindManyWorkflowArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class FindManyWorkflowArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class FindManyWorkflowArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class FindManyWorkflowArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    
    

class WorkflowExecutionIncludeFromMCPServer(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    workflow: Union[bool, 'WorkflowArgsFromMCPServerRecursive1']


class WorkflowExecutionIncludeFromMCPServerRecursive1(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    workflow: Union[bool, 'WorkflowArgsFromMCPServerRecursive2']


class WorkflowExecutionIncludeFromMCPServerRecursive2(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    workflow: Union[bool, 'WorkflowArgsFromMCPServerRecursive3']


class WorkflowExecutionIncludeFromMCPServerRecursive3(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    workflow: Union[bool, 'WorkflowArgsFromMCPServerRecursive4']


class WorkflowExecutionIncludeFromMCPServerRecursive4(TypedDict, total=False):
    """Relational arguments for MCPServer"""

    

class WorkflowExecutionArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class WorkflowExecutionArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class WorkflowExecutionArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class WorkflowExecutionArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class WorkflowExecutionArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    
    

class FindManyWorkflowExecutionArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class FindManyWorkflowExecutionArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class FindManyWorkflowExecutionArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class FindManyWorkflowExecutionArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class FindManyWorkflowExecutionArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    
    

class ToolIncludeFromMCPServer(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive1']
    mcpServer: Union[bool, 'MCPServerArgsFromMCPServerRecursive1']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromMCPServerRecursive1']


class ToolIncludeFromMCPServerRecursive1(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive2']
    mcpServer: Union[bool, 'MCPServerArgsFromMCPServerRecursive2']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromMCPServerRecursive2']


class ToolIncludeFromMCPServerRecursive2(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive3']
    mcpServer: Union[bool, 'MCPServerArgsFromMCPServerRecursive3']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromMCPServerRecursive3']


class ToolIncludeFromMCPServerRecursive3(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive4']
    mcpServer: Union[bool, 'MCPServerArgsFromMCPServerRecursive4']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromMCPServerRecursive4']


class ToolIncludeFromMCPServerRecursive4(TypedDict, total=False):
    """Relational arguments for MCPServer"""

    

class ToolArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'ToolIncludeFromToolRecursive1'


class ToolArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'ToolIncludeFromToolRecursive2'


class ToolArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'ToolIncludeFromToolRecursive3'


class ToolArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'ToolIncludeFromToolRecursive4'


class ToolArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    
    

class FindManyToolArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive1'


class FindManyToolArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive2'


class FindManyToolArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive3'


class FindManyToolArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive4'


class FindManyToolArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    
    

class ToolInvocationIncludeFromMCPServer(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    tool: Union[bool, 'ToolArgsFromMCPServerRecursive1']


class ToolInvocationIncludeFromMCPServerRecursive1(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    tool: Union[bool, 'ToolArgsFromMCPServerRecursive2']


class ToolInvocationIncludeFromMCPServerRecursive2(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    tool: Union[bool, 'ToolArgsFromMCPServerRecursive3']


class ToolInvocationIncludeFromMCPServerRecursive3(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    tool: Union[bool, 'ToolArgsFromMCPServerRecursive4']


class ToolInvocationIncludeFromMCPServerRecursive4(TypedDict, total=False):
    """Relational arguments for MCPServer"""

    

class ToolInvocationArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class ToolInvocationArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class ToolInvocationArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class ToolInvocationArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class ToolInvocationArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    
    

class FindManyToolInvocationArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class FindManyToolInvocationArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class FindManyToolInvocationArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class FindManyToolInvocationArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class FindManyToolInvocationArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    
    

class ConversationSessionIncludeFromMCPServer(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromMCPServerRecursive1']


class ConversationSessionIncludeFromMCPServerRecursive1(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromMCPServerRecursive2']


class ConversationSessionIncludeFromMCPServerRecursive2(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromMCPServerRecursive3']


class ConversationSessionIncludeFromMCPServerRecursive3(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromMCPServerRecursive4']


class ConversationSessionIncludeFromMCPServerRecursive4(TypedDict, total=False):
    """Relational arguments for MCPServer"""

    

class ConversationSessionArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class ConversationSessionArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class ConversationSessionArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class ConversationSessionArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class ConversationSessionArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    
    

class FindManyConversationSessionArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class FindManyConversationSessionArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class FindManyConversationSessionArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class FindManyConversationSessionArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class FindManyConversationSessionArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    
    

class MessageIncludeFromMCPServer(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    session: Union[bool, 'ConversationSessionArgsFromMCPServerRecursive1']


class MessageIncludeFromMCPServerRecursive1(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    session: Union[bool, 'ConversationSessionArgsFromMCPServerRecursive2']


class MessageIncludeFromMCPServerRecursive2(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    session: Union[bool, 'ConversationSessionArgsFromMCPServerRecursive3']


class MessageIncludeFromMCPServerRecursive3(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    session: Union[bool, 'ConversationSessionArgsFromMCPServerRecursive4']


class MessageIncludeFromMCPServerRecursive4(TypedDict, total=False):
    """Relational arguments for MCPServer"""

    

class MessageArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    
    

class FindManyMessageArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class VectorStoreIncludeFromMCPServer(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromMCPServerRecursive1']


class VectorStoreIncludeFromMCPServerRecursive1(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromMCPServerRecursive2']


class VectorStoreIncludeFromMCPServerRecursive2(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromMCPServerRecursive3']


class VectorStoreIncludeFromMCPServerRecursive3(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromMCPServerRecursive4']


class VectorStoreIncludeFromMCPServerRecursive4(TypedDict, total=False):
    """Relational arguments for MCPServer"""

    

class VectorStoreArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class VectorStoreArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class VectorStoreArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class VectorStoreArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class VectorStoreArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    
    

class FindManyVectorStoreArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class FindManyVectorStoreArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class FindManyVectorStoreArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class FindManyVectorStoreArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class FindManyVectorStoreArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    
    

class EmbeddingIncludeFromMCPServer(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    vectorStore: Union[bool, 'VectorStoreArgsFromMCPServerRecursive1']


class EmbeddingIncludeFromMCPServerRecursive1(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    vectorStore: Union[bool, 'VectorStoreArgsFromMCPServerRecursive2']


class EmbeddingIncludeFromMCPServerRecursive2(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    vectorStore: Union[bool, 'VectorStoreArgsFromMCPServerRecursive3']


class EmbeddingIncludeFromMCPServerRecursive3(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    vectorStore: Union[bool, 'VectorStoreArgsFromMCPServerRecursive4']


class EmbeddingIncludeFromMCPServerRecursive4(TypedDict, total=False):
    """Relational arguments for MCPServer"""

    

class EmbeddingArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class EmbeddingArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class EmbeddingArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class EmbeddingArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class EmbeddingArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    
    

class FindManyEmbeddingArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class FindManyEmbeddingArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class FindManyEmbeddingArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class FindManyEmbeddingArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class FindManyEmbeddingArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    
    

class MCPServerIncludeFromMCPServer(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    tools: Union[bool, 'FindManyToolArgsFromMCPServerRecursive1']


class MCPServerIncludeFromMCPServerRecursive1(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    tools: Union[bool, 'FindManyToolArgsFromMCPServerRecursive2']


class MCPServerIncludeFromMCPServerRecursive2(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    tools: Union[bool, 'FindManyToolArgsFromMCPServerRecursive3']


class MCPServerIncludeFromMCPServerRecursive3(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    tools: Union[bool, 'FindManyToolArgsFromMCPServerRecursive4']


class MCPServerIncludeFromMCPServerRecursive4(TypedDict, total=False):
    """Relational arguments for MCPServer"""

    

class MCPServerArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class MCPServerArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class MCPServerArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class MCPServerArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class MCPServerArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    
    

class FindManyMCPServerArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class FindManyMCPServerArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class FindManyMCPServerArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class FindManyMCPServerArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class FindManyMCPServerArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    
    

class EvaluationIncludeFromMCPServer(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive1']


class EvaluationIncludeFromMCPServerRecursive1(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive2']


class EvaluationIncludeFromMCPServerRecursive2(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive3']


class EvaluationIncludeFromMCPServerRecursive3(TypedDict, total=False):
    """Relational arguments for MCPServer"""
    agent: Union[bool, 'AgentArgsFromMCPServerRecursive4']


class EvaluationIncludeFromMCPServerRecursive4(TypedDict, total=False):
    """Relational arguments for MCPServer"""

    

class EvaluationArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class EvaluationArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class EvaluationArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class EvaluationArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class EvaluationArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    
    

class FindManyEvaluationArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class FindManyEvaluationArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class FindManyEvaluationArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class FindManyEvaluationArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class FindManyEvaluationArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    
    

class UserIncludeFromMCPServer(TypedDict, total=False):
    """Relational arguments for MCPServer"""


class UserIncludeFromMCPServerRecursive1(TypedDict, total=False):
    """Relational arguments for MCPServer"""


class UserIncludeFromMCPServerRecursive2(TypedDict, total=False):
    """Relational arguments for MCPServer"""


class UserIncludeFromMCPServerRecursive3(TypedDict, total=False):
    """Relational arguments for MCPServer"""


class UserIncludeFromMCPServerRecursive4(TypedDict, total=False):
    """Relational arguments for MCPServer"""

    

class UserArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    
    

class FindManyUserArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class SystemConfigIncludeFromMCPServer(TypedDict, total=False):
    """Relational arguments for MCPServer"""


class SystemConfigIncludeFromMCPServerRecursive1(TypedDict, total=False):
    """Relational arguments for MCPServer"""


class SystemConfigIncludeFromMCPServerRecursive2(TypedDict, total=False):
    """Relational arguments for MCPServer"""


class SystemConfigIncludeFromMCPServerRecursive3(TypedDict, total=False):
    """Relational arguments for MCPServer"""


class SystemConfigIncludeFromMCPServerRecursive4(TypedDict, total=False):
    """Relational arguments for MCPServer"""

    

class SystemConfigArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class SystemConfigArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class SystemConfigArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class SystemConfigArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class SystemConfigArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    
    

class FindManySystemConfigArgsFromMCPServer(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class FindManySystemConfigArgsFromMCPServerRecursive1(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class FindManySystemConfigArgsFromMCPServerRecursive2(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class FindManySystemConfigArgsFromMCPServerRecursive3(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class FindManySystemConfigArgsFromMCPServerRecursive4(TypedDict, total=False):
    """Arguments for MCPServer"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    


FindManyMCPServerArgs = FindManyMCPServerArgsFromMCPServer
FindFirstMCPServerArgs = FindManyMCPServerArgsFromMCPServer


    

class MCPServerWhereInput(TypedDict, total=False):
    """MCPServer arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    endpointUrl: Union[_str, 'types.StringFilter']
    authenticationDetails: Union['fields.Json', 'types.JsonFilter']
    capabilities: Union['fields.Json', 'types.JsonFilter']
    securityPolicy: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.MCPServerStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    tools: 'ToolListRelationFilter'

    # should be noted that AND and NOT should be Union['MCPServerWhereInputRecursive1', List['MCPServerWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['MCPServerWhereInputRecursive1']
    OR: List['MCPServerWhereInputRecursive1']
    NOT: List['MCPServerWhereInputRecursive1']


class MCPServerWhereInputRecursive1(TypedDict, total=False):
    """MCPServer arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    endpointUrl: Union[_str, 'types.StringFilter']
    authenticationDetails: Union['fields.Json', 'types.JsonFilter']
    capabilities: Union['fields.Json', 'types.JsonFilter']
    securityPolicy: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.MCPServerStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    tools: 'ToolListRelationFilter'

    # should be noted that AND and NOT should be Union['MCPServerWhereInputRecursive2', List['MCPServerWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['MCPServerWhereInputRecursive2']
    OR: List['MCPServerWhereInputRecursive2']
    NOT: List['MCPServerWhereInputRecursive2']


class MCPServerWhereInputRecursive2(TypedDict, total=False):
    """MCPServer arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    endpointUrl: Union[_str, 'types.StringFilter']
    authenticationDetails: Union['fields.Json', 'types.JsonFilter']
    capabilities: Union['fields.Json', 'types.JsonFilter']
    securityPolicy: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.MCPServerStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    tools: 'ToolListRelationFilter'

    # should be noted that AND and NOT should be Union['MCPServerWhereInputRecursive3', List['MCPServerWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['MCPServerWhereInputRecursive3']
    OR: List['MCPServerWhereInputRecursive3']
    NOT: List['MCPServerWhereInputRecursive3']


class MCPServerWhereInputRecursive3(TypedDict, total=False):
    """MCPServer arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    endpointUrl: Union[_str, 'types.StringFilter']
    authenticationDetails: Union['fields.Json', 'types.JsonFilter']
    capabilities: Union['fields.Json', 'types.JsonFilter']
    securityPolicy: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.MCPServerStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    tools: 'ToolListRelationFilter'

    # should be noted that AND and NOT should be Union['MCPServerWhereInputRecursive4', List['MCPServerWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['MCPServerWhereInputRecursive4']
    OR: List['MCPServerWhereInputRecursive4']
    NOT: List['MCPServerWhereInputRecursive4']


class MCPServerWhereInputRecursive4(TypedDict, total=False):
    """MCPServer arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    endpointUrl: Union[_str, 'types.StringFilter']
    authenticationDetails: Union['fields.Json', 'types.JsonFilter']
    capabilities: Union['fields.Json', 'types.JsonFilter']
    securityPolicy: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.MCPServerStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    tools: 'ToolListRelationFilter'



# aggregate MCPServer types


    

class MCPServerScalarWhereWithAggregatesInput(TypedDict, total=False):
    """MCPServer arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    endpointUrl: Union[_str, 'types.StringWithAggregatesFilter']
    authenticationDetails: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    capabilities: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    securityPolicy: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.MCPServerStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['MCPServerScalarWhereWithAggregatesInputRecursive1']
    OR: List['MCPServerScalarWhereWithAggregatesInputRecursive1']
    NOT: List['MCPServerScalarWhereWithAggregatesInputRecursive1']


class MCPServerScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """MCPServer arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    endpointUrl: Union[_str, 'types.StringWithAggregatesFilter']
    authenticationDetails: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    capabilities: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    securityPolicy: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.MCPServerStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['MCPServerScalarWhereWithAggregatesInputRecursive2']
    OR: List['MCPServerScalarWhereWithAggregatesInputRecursive2']
    NOT: List['MCPServerScalarWhereWithAggregatesInputRecursive2']


class MCPServerScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """MCPServer arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    endpointUrl: Union[_str, 'types.StringWithAggregatesFilter']
    authenticationDetails: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    capabilities: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    securityPolicy: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.MCPServerStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['MCPServerScalarWhereWithAggregatesInputRecursive3']
    OR: List['MCPServerScalarWhereWithAggregatesInputRecursive3']
    NOT: List['MCPServerScalarWhereWithAggregatesInputRecursive3']


class MCPServerScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """MCPServer arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    endpointUrl: Union[_str, 'types.StringWithAggregatesFilter']
    authenticationDetails: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    capabilities: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    securityPolicy: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.MCPServerStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['MCPServerScalarWhereWithAggregatesInputRecursive4']
    OR: List['MCPServerScalarWhereWithAggregatesInputRecursive4']
    NOT: List['MCPServerScalarWhereWithAggregatesInputRecursive4']


class MCPServerScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """MCPServer arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    endpointUrl: Union[_str, 'types.StringWithAggregatesFilter']
    authenticationDetails: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    capabilities: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    securityPolicy: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.MCPServerStatus'
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class MCPServerGroupByOutput(TypedDict, total=False):
    id: _str
    name: _str
    endpointUrl: _str
    authenticationDetails: 'fields.Json'
    capabilities: 'fields.Json'
    securityPolicy: 'fields.Json'
    status: 'enums.MCPServerStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'MCPServerSumAggregateOutput'
    _avg: 'MCPServerAvgAggregateOutput'
    _min: 'MCPServerMinAggregateOutput'
    _max: 'MCPServerMaxAggregateOutput'
    _count: 'MCPServerCountAggregateOutput'


class MCPServerAvgAggregateOutput(TypedDict, total=False):
    """MCPServer output for aggregating averages"""


class MCPServerSumAggregateOutput(TypedDict, total=False):
    """MCPServer output for aggregating sums"""


class MCPServerScalarAggregateOutput(TypedDict, total=False):
    """MCPServer output including scalar fields"""
    id: _str
    name: _str
    endpointUrl: _str
    authenticationDetails: 'fields.Json'
    capabilities: 'fields.Json'
    securityPolicy: 'fields.Json'
    status: 'enums.MCPServerStatus'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


MCPServerMinAggregateOutput = MCPServerScalarAggregateOutput
MCPServerMaxAggregateOutput = MCPServerScalarAggregateOutput


class MCPServerMaxAggregateInput(TypedDict, total=False):
    """MCPServer input for aggregating by max"""
    id: bool
    name: bool
    endpointUrl: bool
    authenticationDetails: bool
    capabilities: bool
    securityPolicy: bool
    status: bool
    createdAt: bool
    updatedAt: bool


class MCPServerMinAggregateInput(TypedDict, total=False):
    """MCPServer input for aggregating by min"""
    id: bool
    name: bool
    endpointUrl: bool
    authenticationDetails: bool
    capabilities: bool
    securityPolicy: bool
    status: bool
    createdAt: bool
    updatedAt: bool


class MCPServerNumberAggregateInput(TypedDict, total=False):
    """MCPServer input for aggregating numbers"""


MCPServerAvgAggregateInput = MCPServerNumberAggregateInput
MCPServerSumAggregateInput = MCPServerNumberAggregateInput


MCPServerCountAggregateInput = TypedDict(
    'MCPServerCountAggregateInput',
    {
        'id': bool,
        'name': bool,
        'endpointUrl': bool,
        'authenticationDetails': bool,
        'capabilities': bool,
        'securityPolicy': bool,
        'status': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

MCPServerCountAggregateOutput = TypedDict(
    'MCPServerCountAggregateOutput',
    {
        'id': int,
        'name': int,
        'endpointUrl': int,
        'authenticationDetails': int,
        'capabilities': int,
        'securityPolicy': int,
        'status': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


MCPServerKeys = Literal[
    'id',
    'name',
    'endpointUrl',
    'authenticationDetails',
    'capabilities',
    'securityPolicy',
    'status',
    'createdAt',
    'updatedAt',
    'tools',
]
MCPServerScalarFieldKeys = Literal[
    'id',
    'name',
    'endpointUrl',
    'authenticationDetails',
    'capabilities',
    'securityPolicy',
    'status',
    'createdAt',
    'updatedAt',
]
MCPServerScalarFieldKeysT = TypeVar('MCPServerScalarFieldKeysT', bound=MCPServerScalarFieldKeys)

MCPServerRelationalFieldKeys = Literal[
        'tools',
    ]

# Evaluation types

class EvaluationOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Evaluation create method"""
    id: _str
    agentId: _str
    description: Optional[_str]
    testDatasetId: Optional[_str]
    metrics: 'fields.Json'
    status: 'enums.EvaluationStatus'
    results: Optional['fields.Json']
    startTime: Optional[datetime.datetime]
    endTime: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    agent: 'AgentCreateNestedWithoutRelationsInput'


class EvaluationCreateInput(EvaluationOptionalCreateInput):
    """Required arguments to the Evaluation create method"""
    name: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class EvaluationOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Evaluation create method, without relations"""
    id: _str
    agentId: _str
    description: Optional[_str]
    testDatasetId: Optional[_str]
    metrics: 'fields.Json'
    status: 'enums.EvaluationStatus'
    results: Optional['fields.Json']
    startTime: Optional[datetime.datetime]
    endTime: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class EvaluationCreateWithoutRelationsInput(EvaluationOptionalCreateWithoutRelationsInput):
    """Required arguments to the Evaluation create method, without relations"""
    name: _str


class EvaluationCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'EvaluationCreateWithoutRelationsInput'
    connect: 'EvaluationWhereUniqueInput'


class EvaluationCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['EvaluationCreateWithoutRelationsInput', List['EvaluationCreateWithoutRelationsInput']]
    connect: Union['EvaluationWhereUniqueInput', List['EvaluationWhereUniqueInput']]


_EvaluationWhereUnique_id_Input = TypedDict(
    '_EvaluationWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

EvaluationWhereUniqueInput = _EvaluationWhereUnique_id_Input


class EvaluationUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    name: _str
    description: Optional[_str]
    testDatasetId: Optional[_str]
    metrics: 'fields.Json'
    status: 'enums.EvaluationStatus'
    results: Optional['fields.Json']
    startTime: Optional[datetime.datetime]
    endTime: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    agent: 'AgentUpdateOneWithoutRelationsInput'


class EvaluationUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    name: _str
    description: Optional[_str]
    testDatasetId: Optional[_str]
    metrics: 'fields.Json'
    status: 'enums.EvaluationStatus'
    results: Optional['fields.Json']
    startTime: Optional[datetime.datetime]
    endTime: Optional[datetime.datetime]
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class EvaluationUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['EvaluationCreateWithoutRelationsInput']
    connect: List['EvaluationWhereUniqueInput']
    set: List['EvaluationWhereUniqueInput']
    disconnect: List['EvaluationWhereUniqueInput']
    delete: List['EvaluationWhereUniqueInput']

    # TODO
    # update: List['EvaluationUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['EvaluationUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['EvaluationScalarWhereInput']
    # upsert: List['EvaluationUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['EvaluationCreateOrConnectWithoutRelationsInput']


class EvaluationUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'EvaluationCreateWithoutRelationsInput'
    connect: 'EvaluationWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'EvaluationUpdateInput'
    # upsert: 'EvaluationUpsertWithoutRelationsInput'
    # connectOrCreate: 'EvaluationCreateOrConnectWithoutRelationsInput'


class EvaluationUpsertInput(TypedDict):
    create: 'EvaluationCreateInput'
    update: 'EvaluationUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Evaluation_id_OrderByInput = TypedDict(
    '_Evaluation_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Evaluation_agentId_OrderByInput = TypedDict(
    '_Evaluation_agentId_OrderByInput',
    {
        'agentId': 'SortOrder',
    },
    total=True
)

_Evaluation_name_OrderByInput = TypedDict(
    '_Evaluation_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_Evaluation_description_OrderByInput = TypedDict(
    '_Evaluation_description_OrderByInput',
    {
        'description': 'SortOrder',
    },
    total=True
)

_Evaluation_testDatasetId_OrderByInput = TypedDict(
    '_Evaluation_testDatasetId_OrderByInput',
    {
        'testDatasetId': 'SortOrder',
    },
    total=True
)

_Evaluation_metrics_OrderByInput = TypedDict(
    '_Evaluation_metrics_OrderByInput',
    {
        'metrics': 'SortOrder',
    },
    total=True
)

_Evaluation_status_OrderByInput = TypedDict(
    '_Evaluation_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_Evaluation_results_OrderByInput = TypedDict(
    '_Evaluation_results_OrderByInput',
    {
        'results': 'SortOrder',
    },
    total=True
)

_Evaluation_startTime_OrderByInput = TypedDict(
    '_Evaluation_startTime_OrderByInput',
    {
        'startTime': 'SortOrder',
    },
    total=True
)

_Evaluation_endTime_OrderByInput = TypedDict(
    '_Evaluation_endTime_OrderByInput',
    {
        'endTime': 'SortOrder',
    },
    total=True
)

_Evaluation_createdAt_OrderByInput = TypedDict(
    '_Evaluation_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_Evaluation_updatedAt_OrderByInput = TypedDict(
    '_Evaluation_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

EvaluationOrderByInput = Union[
    '_Evaluation_id_OrderByInput',
    '_Evaluation_agentId_OrderByInput',
    '_Evaluation_name_OrderByInput',
    '_Evaluation_description_OrderByInput',
    '_Evaluation_testDatasetId_OrderByInput',
    '_Evaluation_metrics_OrderByInput',
    '_Evaluation_status_OrderByInput',
    '_Evaluation_results_OrderByInput',
    '_Evaluation_startTime_OrderByInput',
    '_Evaluation_endTime_OrderByInput',
    '_Evaluation_createdAt_OrderByInput',
    '_Evaluation_updatedAt_OrderByInput',
]



# recursive Evaluation types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

EvaluationRelationFilter = TypedDict(
    'EvaluationRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class EvaluationListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class EvaluationInclude(TypedDict, total=False):
    """Evaluation relational arguments"""
    agent: Union[bool, 'AgentArgsFromEvaluation']


    

class AgentIncludeFromEvaluation(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromEvaluationRecursive1']
    tools: Union[bool, 'FindManyToolArgsFromEvaluationRecursive1']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromEvaluationRecursive1']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromEvaluationRecursive1']


class AgentIncludeFromEvaluationRecursive1(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromEvaluationRecursive2']
    tools: Union[bool, 'FindManyToolArgsFromEvaluationRecursive2']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromEvaluationRecursive2']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromEvaluationRecursive2']


class AgentIncludeFromEvaluationRecursive2(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromEvaluationRecursive3']
    tools: Union[bool, 'FindManyToolArgsFromEvaluationRecursive3']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromEvaluationRecursive3']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromEvaluationRecursive3']


class AgentIncludeFromEvaluationRecursive3(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromEvaluationRecursive4']
    tools: Union[bool, 'FindManyToolArgsFromEvaluationRecursive4']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromEvaluationRecursive4']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromEvaluationRecursive4']


class AgentIncludeFromEvaluationRecursive4(TypedDict, total=False):
    """Relational arguments for Evaluation"""

    

class AgentArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'AgentIncludeFromAgentRecursive1'


class AgentArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'AgentIncludeFromAgentRecursive2'


class AgentArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'AgentIncludeFromAgentRecursive3'


class AgentArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'AgentIncludeFromAgentRecursive4'


class AgentArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    
    

class FindManyAgentArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive1'


class FindManyAgentArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive2'


class FindManyAgentArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive3'


class FindManyAgentArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive4'


class FindManyAgentArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    
    

class WorkflowIncludeFromEvaluation(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive1']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromEvaluationRecursive1']


class WorkflowIncludeFromEvaluationRecursive1(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive2']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromEvaluationRecursive2']


class WorkflowIncludeFromEvaluationRecursive2(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive3']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromEvaluationRecursive3']


class WorkflowIncludeFromEvaluationRecursive3(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive4']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromEvaluationRecursive4']


class WorkflowIncludeFromEvaluationRecursive4(TypedDict, total=False):
    """Relational arguments for Evaluation"""

    

class WorkflowArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class WorkflowArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class WorkflowArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class WorkflowArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class WorkflowArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    
    

class FindManyWorkflowArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class FindManyWorkflowArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class FindManyWorkflowArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class FindManyWorkflowArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class FindManyWorkflowArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    
    

class WorkflowExecutionIncludeFromEvaluation(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    workflow: Union[bool, 'WorkflowArgsFromEvaluationRecursive1']


class WorkflowExecutionIncludeFromEvaluationRecursive1(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    workflow: Union[bool, 'WorkflowArgsFromEvaluationRecursive2']


class WorkflowExecutionIncludeFromEvaluationRecursive2(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    workflow: Union[bool, 'WorkflowArgsFromEvaluationRecursive3']


class WorkflowExecutionIncludeFromEvaluationRecursive3(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    workflow: Union[bool, 'WorkflowArgsFromEvaluationRecursive4']


class WorkflowExecutionIncludeFromEvaluationRecursive4(TypedDict, total=False):
    """Relational arguments for Evaluation"""

    

class WorkflowExecutionArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class WorkflowExecutionArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class WorkflowExecutionArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class WorkflowExecutionArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class WorkflowExecutionArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    
    

class FindManyWorkflowExecutionArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class FindManyWorkflowExecutionArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class FindManyWorkflowExecutionArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class FindManyWorkflowExecutionArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class FindManyWorkflowExecutionArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    
    

class ToolIncludeFromEvaluation(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive1']
    mcpServer: Union[bool, 'MCPServerArgsFromEvaluationRecursive1']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromEvaluationRecursive1']


class ToolIncludeFromEvaluationRecursive1(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive2']
    mcpServer: Union[bool, 'MCPServerArgsFromEvaluationRecursive2']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromEvaluationRecursive2']


class ToolIncludeFromEvaluationRecursive2(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive3']
    mcpServer: Union[bool, 'MCPServerArgsFromEvaluationRecursive3']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromEvaluationRecursive3']


class ToolIncludeFromEvaluationRecursive3(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive4']
    mcpServer: Union[bool, 'MCPServerArgsFromEvaluationRecursive4']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromEvaluationRecursive4']


class ToolIncludeFromEvaluationRecursive4(TypedDict, total=False):
    """Relational arguments for Evaluation"""

    

class ToolArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'ToolIncludeFromToolRecursive1'


class ToolArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'ToolIncludeFromToolRecursive2'


class ToolArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'ToolIncludeFromToolRecursive3'


class ToolArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'ToolIncludeFromToolRecursive4'


class ToolArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    
    

class FindManyToolArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive1'


class FindManyToolArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive2'


class FindManyToolArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive3'


class FindManyToolArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive4'


class FindManyToolArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    
    

class ToolInvocationIncludeFromEvaluation(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    tool: Union[bool, 'ToolArgsFromEvaluationRecursive1']


class ToolInvocationIncludeFromEvaluationRecursive1(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    tool: Union[bool, 'ToolArgsFromEvaluationRecursive2']


class ToolInvocationIncludeFromEvaluationRecursive2(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    tool: Union[bool, 'ToolArgsFromEvaluationRecursive3']


class ToolInvocationIncludeFromEvaluationRecursive3(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    tool: Union[bool, 'ToolArgsFromEvaluationRecursive4']


class ToolInvocationIncludeFromEvaluationRecursive4(TypedDict, total=False):
    """Relational arguments for Evaluation"""

    

class ToolInvocationArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class ToolInvocationArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class ToolInvocationArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class ToolInvocationArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class ToolInvocationArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    
    

class FindManyToolInvocationArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class FindManyToolInvocationArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class FindManyToolInvocationArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class FindManyToolInvocationArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class FindManyToolInvocationArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    
    

class ConversationSessionIncludeFromEvaluation(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromEvaluationRecursive1']


class ConversationSessionIncludeFromEvaluationRecursive1(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromEvaluationRecursive2']


class ConversationSessionIncludeFromEvaluationRecursive2(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromEvaluationRecursive3']


class ConversationSessionIncludeFromEvaluationRecursive3(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromEvaluationRecursive4']


class ConversationSessionIncludeFromEvaluationRecursive4(TypedDict, total=False):
    """Relational arguments for Evaluation"""

    

class ConversationSessionArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class ConversationSessionArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class ConversationSessionArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class ConversationSessionArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class ConversationSessionArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    
    

class FindManyConversationSessionArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class FindManyConversationSessionArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class FindManyConversationSessionArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class FindManyConversationSessionArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class FindManyConversationSessionArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    
    

class MessageIncludeFromEvaluation(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    session: Union[bool, 'ConversationSessionArgsFromEvaluationRecursive1']


class MessageIncludeFromEvaluationRecursive1(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    session: Union[bool, 'ConversationSessionArgsFromEvaluationRecursive2']


class MessageIncludeFromEvaluationRecursive2(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    session: Union[bool, 'ConversationSessionArgsFromEvaluationRecursive3']


class MessageIncludeFromEvaluationRecursive3(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    session: Union[bool, 'ConversationSessionArgsFromEvaluationRecursive4']


class MessageIncludeFromEvaluationRecursive4(TypedDict, total=False):
    """Relational arguments for Evaluation"""

    

class MessageArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    
    

class FindManyMessageArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class VectorStoreIncludeFromEvaluation(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromEvaluationRecursive1']


class VectorStoreIncludeFromEvaluationRecursive1(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromEvaluationRecursive2']


class VectorStoreIncludeFromEvaluationRecursive2(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromEvaluationRecursive3']


class VectorStoreIncludeFromEvaluationRecursive3(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromEvaluationRecursive4']


class VectorStoreIncludeFromEvaluationRecursive4(TypedDict, total=False):
    """Relational arguments for Evaluation"""

    

class VectorStoreArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class VectorStoreArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class VectorStoreArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class VectorStoreArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class VectorStoreArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    
    

class FindManyVectorStoreArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class FindManyVectorStoreArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class FindManyVectorStoreArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class FindManyVectorStoreArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class FindManyVectorStoreArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    
    

class EmbeddingIncludeFromEvaluation(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    vectorStore: Union[bool, 'VectorStoreArgsFromEvaluationRecursive1']


class EmbeddingIncludeFromEvaluationRecursive1(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    vectorStore: Union[bool, 'VectorStoreArgsFromEvaluationRecursive2']


class EmbeddingIncludeFromEvaluationRecursive2(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    vectorStore: Union[bool, 'VectorStoreArgsFromEvaluationRecursive3']


class EmbeddingIncludeFromEvaluationRecursive3(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    vectorStore: Union[bool, 'VectorStoreArgsFromEvaluationRecursive4']


class EmbeddingIncludeFromEvaluationRecursive4(TypedDict, total=False):
    """Relational arguments for Evaluation"""

    

class EmbeddingArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class EmbeddingArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class EmbeddingArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class EmbeddingArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class EmbeddingArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    
    

class FindManyEmbeddingArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class FindManyEmbeddingArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class FindManyEmbeddingArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class FindManyEmbeddingArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class FindManyEmbeddingArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    
    

class MCPServerIncludeFromEvaluation(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    tools: Union[bool, 'FindManyToolArgsFromEvaluationRecursive1']


class MCPServerIncludeFromEvaluationRecursive1(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    tools: Union[bool, 'FindManyToolArgsFromEvaluationRecursive2']


class MCPServerIncludeFromEvaluationRecursive2(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    tools: Union[bool, 'FindManyToolArgsFromEvaluationRecursive3']


class MCPServerIncludeFromEvaluationRecursive3(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    tools: Union[bool, 'FindManyToolArgsFromEvaluationRecursive4']


class MCPServerIncludeFromEvaluationRecursive4(TypedDict, total=False):
    """Relational arguments for Evaluation"""

    

class MCPServerArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class MCPServerArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class MCPServerArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class MCPServerArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class MCPServerArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    
    

class FindManyMCPServerArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class FindManyMCPServerArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class FindManyMCPServerArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class FindManyMCPServerArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class FindManyMCPServerArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    
    

class EvaluationIncludeFromEvaluation(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive1']


class EvaluationIncludeFromEvaluationRecursive1(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive2']


class EvaluationIncludeFromEvaluationRecursive2(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive3']


class EvaluationIncludeFromEvaluationRecursive3(TypedDict, total=False):
    """Relational arguments for Evaluation"""
    agent: Union[bool, 'AgentArgsFromEvaluationRecursive4']


class EvaluationIncludeFromEvaluationRecursive4(TypedDict, total=False):
    """Relational arguments for Evaluation"""

    

class EvaluationArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class EvaluationArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class EvaluationArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class EvaluationArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class EvaluationArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    
    

class FindManyEvaluationArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class FindManyEvaluationArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class FindManyEvaluationArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class FindManyEvaluationArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class FindManyEvaluationArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    
    

class UserIncludeFromEvaluation(TypedDict, total=False):
    """Relational arguments for Evaluation"""


class UserIncludeFromEvaluationRecursive1(TypedDict, total=False):
    """Relational arguments for Evaluation"""


class UserIncludeFromEvaluationRecursive2(TypedDict, total=False):
    """Relational arguments for Evaluation"""


class UserIncludeFromEvaluationRecursive3(TypedDict, total=False):
    """Relational arguments for Evaluation"""


class UserIncludeFromEvaluationRecursive4(TypedDict, total=False):
    """Relational arguments for Evaluation"""

    

class UserArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    
    

class FindManyUserArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class SystemConfigIncludeFromEvaluation(TypedDict, total=False):
    """Relational arguments for Evaluation"""


class SystemConfigIncludeFromEvaluationRecursive1(TypedDict, total=False):
    """Relational arguments for Evaluation"""


class SystemConfigIncludeFromEvaluationRecursive2(TypedDict, total=False):
    """Relational arguments for Evaluation"""


class SystemConfigIncludeFromEvaluationRecursive3(TypedDict, total=False):
    """Relational arguments for Evaluation"""


class SystemConfigIncludeFromEvaluationRecursive4(TypedDict, total=False):
    """Relational arguments for Evaluation"""

    

class SystemConfigArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class SystemConfigArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class SystemConfigArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class SystemConfigArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class SystemConfigArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    
    

class FindManySystemConfigArgsFromEvaluation(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class FindManySystemConfigArgsFromEvaluationRecursive1(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class FindManySystemConfigArgsFromEvaluationRecursive2(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class FindManySystemConfigArgsFromEvaluationRecursive3(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class FindManySystemConfigArgsFromEvaluationRecursive4(TypedDict, total=False):
    """Arguments for Evaluation"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    


FindManyEvaluationArgs = FindManyEvaluationArgsFromEvaluation
FindFirstEvaluationArgs = FindManyEvaluationArgsFromEvaluation


    

class EvaluationWhereInput(TypedDict, total=False):
    """Evaluation arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    testDatasetId: Union[None, _str, 'types.StringFilter']
    metrics: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.EvaluationStatus'
    results: Union[None, 'fields.Json', 'types.JsonFilter']
    startTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'

    # should be noted that AND and NOT should be Union['EvaluationWhereInputRecursive1', List['EvaluationWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['EvaluationWhereInputRecursive1']
    OR: List['EvaluationWhereInputRecursive1']
    NOT: List['EvaluationWhereInputRecursive1']


class EvaluationWhereInputRecursive1(TypedDict, total=False):
    """Evaluation arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    testDatasetId: Union[None, _str, 'types.StringFilter']
    metrics: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.EvaluationStatus'
    results: Union[None, 'fields.Json', 'types.JsonFilter']
    startTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'

    # should be noted that AND and NOT should be Union['EvaluationWhereInputRecursive2', List['EvaluationWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['EvaluationWhereInputRecursive2']
    OR: List['EvaluationWhereInputRecursive2']
    NOT: List['EvaluationWhereInputRecursive2']


class EvaluationWhereInputRecursive2(TypedDict, total=False):
    """Evaluation arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    testDatasetId: Union[None, _str, 'types.StringFilter']
    metrics: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.EvaluationStatus'
    results: Union[None, 'fields.Json', 'types.JsonFilter']
    startTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'

    # should be noted that AND and NOT should be Union['EvaluationWhereInputRecursive3', List['EvaluationWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['EvaluationWhereInputRecursive3']
    OR: List['EvaluationWhereInputRecursive3']
    NOT: List['EvaluationWhereInputRecursive3']


class EvaluationWhereInputRecursive3(TypedDict, total=False):
    """Evaluation arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    testDatasetId: Union[None, _str, 'types.StringFilter']
    metrics: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.EvaluationStatus'
    results: Union[None, 'fields.Json', 'types.JsonFilter']
    startTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'

    # should be noted that AND and NOT should be Union['EvaluationWhereInputRecursive4', List['EvaluationWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['EvaluationWhereInputRecursive4']
    OR: List['EvaluationWhereInputRecursive4']
    NOT: List['EvaluationWhereInputRecursive4']


class EvaluationWhereInputRecursive4(TypedDict, total=False):
    """Evaluation arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    agentId: Union[_str, 'types.StringFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    testDatasetId: Union[None, _str, 'types.StringFilter']
    metrics: Union['fields.Json', 'types.JsonFilter']
    status: 'enums.EvaluationStatus'
    results: Union[None, 'fields.Json', 'types.JsonFilter']
    startTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    endTime: Union[None, datetime.datetime, 'types.DateTimeFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']
    agent: 'AgentRelationFilter'



# aggregate Evaluation types


    

class EvaluationScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Evaluation arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    testDatasetId: Union[_str, 'types.StringWithAggregatesFilter']
    metrics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.EvaluationStatus'
    results: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    startTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['EvaluationScalarWhereWithAggregatesInputRecursive1']
    OR: List['EvaluationScalarWhereWithAggregatesInputRecursive1']
    NOT: List['EvaluationScalarWhereWithAggregatesInputRecursive1']


class EvaluationScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Evaluation arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    testDatasetId: Union[_str, 'types.StringWithAggregatesFilter']
    metrics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.EvaluationStatus'
    results: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    startTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['EvaluationScalarWhereWithAggregatesInputRecursive2']
    OR: List['EvaluationScalarWhereWithAggregatesInputRecursive2']
    NOT: List['EvaluationScalarWhereWithAggregatesInputRecursive2']


class EvaluationScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Evaluation arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    testDatasetId: Union[_str, 'types.StringWithAggregatesFilter']
    metrics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.EvaluationStatus'
    results: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    startTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['EvaluationScalarWhereWithAggregatesInputRecursive3']
    OR: List['EvaluationScalarWhereWithAggregatesInputRecursive3']
    NOT: List['EvaluationScalarWhereWithAggregatesInputRecursive3']


class EvaluationScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Evaluation arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    testDatasetId: Union[_str, 'types.StringWithAggregatesFilter']
    metrics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.EvaluationStatus'
    results: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    startTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['EvaluationScalarWhereWithAggregatesInputRecursive4']
    OR: List['EvaluationScalarWhereWithAggregatesInputRecursive4']
    NOT: List['EvaluationScalarWhereWithAggregatesInputRecursive4']


class EvaluationScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Evaluation arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    agentId: Union[_str, 'types.StringWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    testDatasetId: Union[_str, 'types.StringWithAggregatesFilter']
    metrics: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    status: 'enums.EvaluationStatus'
    results: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    startTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    endTime: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class EvaluationGroupByOutput(TypedDict, total=False):
    id: _str
    agentId: _str
    name: _str
    description: _str
    testDatasetId: _str
    metrics: 'fields.Json'
    status: 'enums.EvaluationStatus'
    results: 'fields.Json'
    startTime: datetime.datetime
    endTime: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'EvaluationSumAggregateOutput'
    _avg: 'EvaluationAvgAggregateOutput'
    _min: 'EvaluationMinAggregateOutput'
    _max: 'EvaluationMaxAggregateOutput'
    _count: 'EvaluationCountAggregateOutput'


class EvaluationAvgAggregateOutput(TypedDict, total=False):
    """Evaluation output for aggregating averages"""


class EvaluationSumAggregateOutput(TypedDict, total=False):
    """Evaluation output for aggregating sums"""


class EvaluationScalarAggregateOutput(TypedDict, total=False):
    """Evaluation output including scalar fields"""
    id: _str
    agentId: _str
    name: _str
    description: _str
    testDatasetId: _str
    metrics: 'fields.Json'
    status: 'enums.EvaluationStatus'
    results: 'fields.Json'
    startTime: datetime.datetime
    endTime: datetime.datetime
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


EvaluationMinAggregateOutput = EvaluationScalarAggregateOutput
EvaluationMaxAggregateOutput = EvaluationScalarAggregateOutput


class EvaluationMaxAggregateInput(TypedDict, total=False):
    """Evaluation input for aggregating by max"""
    id: bool
    agentId: bool
    name: bool
    description: bool
    testDatasetId: bool
    metrics: bool
    status: bool
    results: bool
    startTime: bool
    endTime: bool
    createdAt: bool
    updatedAt: bool


class EvaluationMinAggregateInput(TypedDict, total=False):
    """Evaluation input for aggregating by min"""
    id: bool
    agentId: bool
    name: bool
    description: bool
    testDatasetId: bool
    metrics: bool
    status: bool
    results: bool
    startTime: bool
    endTime: bool
    createdAt: bool
    updatedAt: bool


class EvaluationNumberAggregateInput(TypedDict, total=False):
    """Evaluation input for aggregating numbers"""


EvaluationAvgAggregateInput = EvaluationNumberAggregateInput
EvaluationSumAggregateInput = EvaluationNumberAggregateInput


EvaluationCountAggregateInput = TypedDict(
    'EvaluationCountAggregateInput',
    {
        'id': bool,
        'agentId': bool,
        'name': bool,
        'description': bool,
        'testDatasetId': bool,
        'metrics': bool,
        'status': bool,
        'results': bool,
        'startTime': bool,
        'endTime': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

EvaluationCountAggregateOutput = TypedDict(
    'EvaluationCountAggregateOutput',
    {
        'id': int,
        'agentId': int,
        'name': int,
        'description': int,
        'testDatasetId': int,
        'metrics': int,
        'status': int,
        'results': int,
        'startTime': int,
        'endTime': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


EvaluationKeys = Literal[
    'id',
    'agentId',
    'name',
    'description',
    'testDatasetId',
    'metrics',
    'status',
    'results',
    'startTime',
    'endTime',
    'createdAt',
    'updatedAt',
    'agent',
]
EvaluationScalarFieldKeys = Literal[
    'id',
    'agentId',
    'name',
    'description',
    'testDatasetId',
    'metrics',
    'status',
    'results',
    'startTime',
    'endTime',
    'createdAt',
    'updatedAt',
]
EvaluationScalarFieldKeysT = TypeVar('EvaluationScalarFieldKeysT', bound=EvaluationScalarFieldKeys)

EvaluationRelationalFieldKeys = Literal[
        'agent',
    ]

# User types

class UserOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the User create method"""
    id: _str
    isActive: _bool
    isAdmin: _bool
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class UserCreateInput(UserOptionalCreateInput):
    """Required arguments to the User create method"""
    email: _str
    username: _str
    hashedPassword: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class UserOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the User create method, without relations"""
    id: _str
    isActive: _bool
    isAdmin: _bool
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class UserCreateWithoutRelationsInput(UserOptionalCreateWithoutRelationsInput):
    """Required arguments to the User create method, without relations"""
    email: _str
    username: _str
    hashedPassword: _str


class UserCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'UserCreateWithoutRelationsInput'
    connect: 'UserWhereUniqueInput'


class UserCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['UserCreateWithoutRelationsInput', List['UserCreateWithoutRelationsInput']]
    connect: Union['UserWhereUniqueInput', List['UserWhereUniqueInput']]


_UserWhereUnique_id_Input = TypedDict(
    '_UserWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_UserWhereUnique_email_Input = TypedDict(
    '_UserWhereUnique_email_Input',
    {
        'email': '_str',
    },
    total=True
)

_UserWhereUnique_username_Input = TypedDict(
    '_UserWhereUnique_username_Input',
    {
        'username': '_str',
    },
    total=True
)

UserWhereUniqueInput = Union[
    '_UserWhereUnique_id_Input',
    '_UserWhereUnique_email_Input',
    '_UserWhereUnique_username_Input',
]


class UserUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    email: _str
    username: _str
    hashedPassword: _str
    isActive: _bool
    isAdmin: _bool
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class UserUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    email: _str
    username: _str
    hashedPassword: _str
    isActive: _bool
    isAdmin: _bool
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class UserUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['UserCreateWithoutRelationsInput']
    connect: List['UserWhereUniqueInput']
    set: List['UserWhereUniqueInput']
    disconnect: List['UserWhereUniqueInput']
    delete: List['UserWhereUniqueInput']

    # TODO
    # update: List['UserUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['UserUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['UserScalarWhereInput']
    # upsert: List['UserUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['UserCreateOrConnectWithoutRelationsInput']


class UserUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'UserCreateWithoutRelationsInput'
    connect: 'UserWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'UserUpdateInput'
    # upsert: 'UserUpsertWithoutRelationsInput'
    # connectOrCreate: 'UserCreateOrConnectWithoutRelationsInput'


class UserUpsertInput(TypedDict):
    create: 'UserCreateInput'
    update: 'UserUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_User_id_OrderByInput = TypedDict(
    '_User_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_User_email_OrderByInput = TypedDict(
    '_User_email_OrderByInput',
    {
        'email': 'SortOrder',
    },
    total=True
)

_User_username_OrderByInput = TypedDict(
    '_User_username_OrderByInput',
    {
        'username': 'SortOrder',
    },
    total=True
)

_User_hashedPassword_OrderByInput = TypedDict(
    '_User_hashedPassword_OrderByInput',
    {
        'hashedPassword': 'SortOrder',
    },
    total=True
)

_User_isActive_OrderByInput = TypedDict(
    '_User_isActive_OrderByInput',
    {
        'isActive': 'SortOrder',
    },
    total=True
)

_User_isAdmin_OrderByInput = TypedDict(
    '_User_isAdmin_OrderByInput',
    {
        'isAdmin': 'SortOrder',
    },
    total=True
)

_User_metadata_OrderByInput = TypedDict(
    '_User_metadata_OrderByInput',
    {
        'metadata': 'SortOrder',
    },
    total=True
)

_User_createdAt_OrderByInput = TypedDict(
    '_User_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_User_updatedAt_OrderByInput = TypedDict(
    '_User_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

UserOrderByInput = Union[
    '_User_id_OrderByInput',
    '_User_email_OrderByInput',
    '_User_username_OrderByInput',
    '_User_hashedPassword_OrderByInput',
    '_User_isActive_OrderByInput',
    '_User_isAdmin_OrderByInput',
    '_User_metadata_OrderByInput',
    '_User_createdAt_OrderByInput',
    '_User_updatedAt_OrderByInput',
]



# recursive User types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

UserRelationFilter = TypedDict(
    'UserRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class UserListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class UserInclude(TypedDict, total=False):
    """User relational arguments"""


    

class AgentIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromUserRecursive1']
    tools: Union[bool, 'FindManyToolArgsFromUserRecursive1']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromUserRecursive1']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromUserRecursive1']


class AgentIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromUserRecursive2']
    tools: Union[bool, 'FindManyToolArgsFromUserRecursive2']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromUserRecursive2']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromUserRecursive2']


class AgentIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromUserRecursive3']
    tools: Union[bool, 'FindManyToolArgsFromUserRecursive3']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromUserRecursive3']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromUserRecursive3']


class AgentIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromUserRecursive4']
    tools: Union[bool, 'FindManyToolArgsFromUserRecursive4']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromUserRecursive4']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromUserRecursive4']


class AgentIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class AgentArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'AgentIncludeFromAgentRecursive1'


class AgentArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'AgentIncludeFromAgentRecursive2'


class AgentArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'AgentIncludeFromAgentRecursive3'


class AgentArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'AgentIncludeFromAgentRecursive4'


class AgentArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyAgentArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive1'


class FindManyAgentArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive2'


class FindManyAgentArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive3'


class FindManyAgentArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive4'


class FindManyAgentArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    
    

class WorkflowIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive1']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromUserRecursive1']


class WorkflowIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive2']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromUserRecursive2']


class WorkflowIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive3']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromUserRecursive3']


class WorkflowIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive4']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromUserRecursive4']


class WorkflowIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class WorkflowArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class WorkflowArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class WorkflowArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class WorkflowArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class WorkflowArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyWorkflowArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class FindManyWorkflowArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class FindManyWorkflowArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class FindManyWorkflowArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class FindManyWorkflowArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    
    

class WorkflowExecutionIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    workflow: Union[bool, 'WorkflowArgsFromUserRecursive1']


class WorkflowExecutionIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    workflow: Union[bool, 'WorkflowArgsFromUserRecursive2']


class WorkflowExecutionIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    workflow: Union[bool, 'WorkflowArgsFromUserRecursive3']


class WorkflowExecutionIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    workflow: Union[bool, 'WorkflowArgsFromUserRecursive4']


class WorkflowExecutionIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class WorkflowExecutionArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class WorkflowExecutionArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class WorkflowExecutionArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class WorkflowExecutionArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class WorkflowExecutionArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyWorkflowExecutionArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class FindManyWorkflowExecutionArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class FindManyWorkflowExecutionArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class FindManyWorkflowExecutionArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class FindManyWorkflowExecutionArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    
    

class ToolIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive1']
    mcpServer: Union[bool, 'MCPServerArgsFromUserRecursive1']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromUserRecursive1']


class ToolIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive2']
    mcpServer: Union[bool, 'MCPServerArgsFromUserRecursive2']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromUserRecursive2']


class ToolIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive3']
    mcpServer: Union[bool, 'MCPServerArgsFromUserRecursive3']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromUserRecursive3']


class ToolIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive4']
    mcpServer: Union[bool, 'MCPServerArgsFromUserRecursive4']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromUserRecursive4']


class ToolIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class ToolArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'ToolIncludeFromToolRecursive1'


class ToolArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'ToolIncludeFromToolRecursive2'


class ToolArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'ToolIncludeFromToolRecursive3'


class ToolArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'ToolIncludeFromToolRecursive4'


class ToolArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyToolArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive1'


class FindManyToolArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive2'


class FindManyToolArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive3'


class FindManyToolArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive4'


class FindManyToolArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    
    

class ToolInvocationIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    tool: Union[bool, 'ToolArgsFromUserRecursive1']


class ToolInvocationIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    tool: Union[bool, 'ToolArgsFromUserRecursive2']


class ToolInvocationIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    tool: Union[bool, 'ToolArgsFromUserRecursive3']


class ToolInvocationIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    tool: Union[bool, 'ToolArgsFromUserRecursive4']


class ToolInvocationIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class ToolInvocationArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class ToolInvocationArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class ToolInvocationArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class ToolInvocationArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class ToolInvocationArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyToolInvocationArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class FindManyToolInvocationArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class FindManyToolInvocationArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class FindManyToolInvocationArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class FindManyToolInvocationArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    
    

class ConversationSessionIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive1']


class ConversationSessionIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive2']


class ConversationSessionIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive3']


class ConversationSessionIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromUserRecursive4']


class ConversationSessionIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class ConversationSessionArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class ConversationSessionArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class ConversationSessionArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class ConversationSessionArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class ConversationSessionArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyConversationSessionArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class FindManyConversationSessionArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class FindManyConversationSessionArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class FindManyConversationSessionArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class FindManyConversationSessionArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    
    

class MessageIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    session: Union[bool, 'ConversationSessionArgsFromUserRecursive1']


class MessageIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    session: Union[bool, 'ConversationSessionArgsFromUserRecursive2']


class MessageIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    session: Union[bool, 'ConversationSessionArgsFromUserRecursive3']


class MessageIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    session: Union[bool, 'ConversationSessionArgsFromUserRecursive4']


class MessageIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class MessageArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyMessageArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class VectorStoreIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromUserRecursive1']


class VectorStoreIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromUserRecursive2']


class VectorStoreIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromUserRecursive3']


class VectorStoreIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromUserRecursive4']


class VectorStoreIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class VectorStoreArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class VectorStoreArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class VectorStoreArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class VectorStoreArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class VectorStoreArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyVectorStoreArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class FindManyVectorStoreArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class FindManyVectorStoreArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class FindManyVectorStoreArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class FindManyVectorStoreArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    
    

class EmbeddingIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    vectorStore: Union[bool, 'VectorStoreArgsFromUserRecursive1']


class EmbeddingIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    vectorStore: Union[bool, 'VectorStoreArgsFromUserRecursive2']


class EmbeddingIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    vectorStore: Union[bool, 'VectorStoreArgsFromUserRecursive3']


class EmbeddingIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    vectorStore: Union[bool, 'VectorStoreArgsFromUserRecursive4']


class EmbeddingIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class EmbeddingArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class EmbeddingArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class EmbeddingArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class EmbeddingArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class EmbeddingArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyEmbeddingArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class FindManyEmbeddingArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class FindManyEmbeddingArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class FindManyEmbeddingArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class FindManyEmbeddingArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    
    

class MCPServerIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    tools: Union[bool, 'FindManyToolArgsFromUserRecursive1']


class MCPServerIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    tools: Union[bool, 'FindManyToolArgsFromUserRecursive2']


class MCPServerIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    tools: Union[bool, 'FindManyToolArgsFromUserRecursive3']


class MCPServerIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    tools: Union[bool, 'FindManyToolArgsFromUserRecursive4']


class MCPServerIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class MCPServerArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class MCPServerArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class MCPServerArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class MCPServerArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class MCPServerArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyMCPServerArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class FindManyMCPServerArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class FindManyMCPServerArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class FindManyMCPServerArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class FindManyMCPServerArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    
    

class EvaluationIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive1']


class EvaluationIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive2']


class EvaluationIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive3']


class EvaluationIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    agent: Union[bool, 'AgentArgsFromUserRecursive4']


class EvaluationIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class EvaluationArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class EvaluationArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class EvaluationArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class EvaluationArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class EvaluationArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyEvaluationArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class FindManyEvaluationArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class FindManyEvaluationArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class FindManyEvaluationArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class FindManyEvaluationArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    
    

class UserIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""


class UserIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""


class UserIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""


class UserIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""


class UserIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class UserArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyUserArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class SystemConfigIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""


class SystemConfigIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""


class SystemConfigIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""


class SystemConfigIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""


class SystemConfigIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class SystemConfigArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class SystemConfigArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class SystemConfigArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class SystemConfigArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class SystemConfigArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManySystemConfigArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class FindManySystemConfigArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class FindManySystemConfigArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class FindManySystemConfigArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class FindManySystemConfigArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    


FindManyUserArgs = FindManyUserArgsFromUser
FindFirstUserArgs = FindManyUserArgsFromUser


    

class UserWhereInput(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    username: Union[_str, 'types.StringFilter']
    hashedPassword: Union[_str, 'types.StringFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    isAdmin: Union[_bool, 'types.BooleanFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive1', List['UserWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive1']
    OR: List['UserWhereInputRecursive1']
    NOT: List['UserWhereInputRecursive1']


class UserWhereInputRecursive1(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    username: Union[_str, 'types.StringFilter']
    hashedPassword: Union[_str, 'types.StringFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    isAdmin: Union[_bool, 'types.BooleanFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive2', List['UserWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive2']
    OR: List['UserWhereInputRecursive2']
    NOT: List['UserWhereInputRecursive2']


class UserWhereInputRecursive2(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    username: Union[_str, 'types.StringFilter']
    hashedPassword: Union[_str, 'types.StringFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    isAdmin: Union[_bool, 'types.BooleanFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive3', List['UserWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive3']
    OR: List['UserWhereInputRecursive3']
    NOT: List['UserWhereInputRecursive3']


class UserWhereInputRecursive3(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    username: Union[_str, 'types.StringFilter']
    hashedPassword: Union[_str, 'types.StringFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    isAdmin: Union[_bool, 'types.BooleanFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive4', List['UserWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive4']
    OR: List['UserWhereInputRecursive4']
    NOT: List['UserWhereInputRecursive4']


class UserWhereInputRecursive4(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    email: Union[_str, 'types.StringFilter']
    username: Union[_str, 'types.StringFilter']
    hashedPassword: Union[_str, 'types.StringFilter']
    isActive: Union[_bool, 'types.BooleanFilter']
    isAdmin: Union[_bool, 'types.BooleanFilter']
    metadata: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate User types


    

class UserScalarWhereWithAggregatesInput(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    username: Union[_str, 'types.StringWithAggregatesFilter']
    hashedPassword: Union[_str, 'types.StringWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    isAdmin: Union[_bool, 'types.BooleanWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive1']
    OR: List['UserScalarWhereWithAggregatesInputRecursive1']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive1']


class UserScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    username: Union[_str, 'types.StringWithAggregatesFilter']
    hashedPassword: Union[_str, 'types.StringWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    isAdmin: Union[_bool, 'types.BooleanWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive2']
    OR: List['UserScalarWhereWithAggregatesInputRecursive2']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive2']


class UserScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    username: Union[_str, 'types.StringWithAggregatesFilter']
    hashedPassword: Union[_str, 'types.StringWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    isAdmin: Union[_bool, 'types.BooleanWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive3']
    OR: List['UserScalarWhereWithAggregatesInputRecursive3']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive3']


class UserScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    username: Union[_str, 'types.StringWithAggregatesFilter']
    hashedPassword: Union[_str, 'types.StringWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    isAdmin: Union[_bool, 'types.BooleanWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive4']
    OR: List['UserScalarWhereWithAggregatesInputRecursive4']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive4']


class UserScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """User arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    email: Union[_str, 'types.StringWithAggregatesFilter']
    username: Union[_str, 'types.StringWithAggregatesFilter']
    hashedPassword: Union[_str, 'types.StringWithAggregatesFilter']
    isActive: Union[_bool, 'types.BooleanWithAggregatesFilter']
    isAdmin: Union[_bool, 'types.BooleanWithAggregatesFilter']
    metadata: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class UserGroupByOutput(TypedDict, total=False):
    id: _str
    email: _str
    username: _str
    hashedPassword: _str
    isActive: _bool
    isAdmin: _bool
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'UserSumAggregateOutput'
    _avg: 'UserAvgAggregateOutput'
    _min: 'UserMinAggregateOutput'
    _max: 'UserMaxAggregateOutput'
    _count: 'UserCountAggregateOutput'


class UserAvgAggregateOutput(TypedDict, total=False):
    """User output for aggregating averages"""


class UserSumAggregateOutput(TypedDict, total=False):
    """User output for aggregating sums"""


class UserScalarAggregateOutput(TypedDict, total=False):
    """User output including scalar fields"""
    id: _str
    email: _str
    username: _str
    hashedPassword: _str
    isActive: _bool
    isAdmin: _bool
    metadata: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


UserMinAggregateOutput = UserScalarAggregateOutput
UserMaxAggregateOutput = UserScalarAggregateOutput


class UserMaxAggregateInput(TypedDict, total=False):
    """User input for aggregating by max"""
    id: bool
    email: bool
    username: bool
    hashedPassword: bool
    isActive: bool
    isAdmin: bool
    metadata: bool
    createdAt: bool
    updatedAt: bool


class UserMinAggregateInput(TypedDict, total=False):
    """User input for aggregating by min"""
    id: bool
    email: bool
    username: bool
    hashedPassword: bool
    isActive: bool
    isAdmin: bool
    metadata: bool
    createdAt: bool
    updatedAt: bool


class UserNumberAggregateInput(TypedDict, total=False):
    """User input for aggregating numbers"""


UserAvgAggregateInput = UserNumberAggregateInput
UserSumAggregateInput = UserNumberAggregateInput


UserCountAggregateInput = TypedDict(
    'UserCountAggregateInput',
    {
        'id': bool,
        'email': bool,
        'username': bool,
        'hashedPassword': bool,
        'isActive': bool,
        'isAdmin': bool,
        'metadata': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

UserCountAggregateOutput = TypedDict(
    'UserCountAggregateOutput',
    {
        'id': int,
        'email': int,
        'username': int,
        'hashedPassword': int,
        'isActive': int,
        'isAdmin': int,
        'metadata': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


UserKeys = Literal[
    'id',
    'email',
    'username',
    'hashedPassword',
    'isActive',
    'isAdmin',
    'metadata',
    'createdAt',
    'updatedAt',
]
UserScalarFieldKeys = Literal[
    'id',
    'email',
    'username',
    'hashedPassword',
    'isActive',
    'isAdmin',
    'metadata',
    'createdAt',
    'updatedAt',
]
UserScalarFieldKeysT = TypeVar('UserScalarFieldKeysT', bound=UserScalarFieldKeys)

UserRelationalFieldKeys = _NoneType

# SystemConfig types

class SystemConfigOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the SystemConfig create method"""
    id: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class SystemConfigCreateInput(SystemConfigOptionalCreateInput):
    """Required arguments to the SystemConfig create method"""
    key: _str
    value: 'fields.Json'


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class SystemConfigOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the SystemConfig create method, without relations"""
    id: _str
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class SystemConfigCreateWithoutRelationsInput(SystemConfigOptionalCreateWithoutRelationsInput):
    """Required arguments to the SystemConfig create method, without relations"""
    key: _str
    value: 'fields.Json'


class SystemConfigCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'SystemConfigCreateWithoutRelationsInput'
    connect: 'SystemConfigWhereUniqueInput'


class SystemConfigCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['SystemConfigCreateWithoutRelationsInput', List['SystemConfigCreateWithoutRelationsInput']]
    connect: Union['SystemConfigWhereUniqueInput', List['SystemConfigWhereUniqueInput']]


_SystemConfigWhereUnique_id_Input = TypedDict(
    '_SystemConfigWhereUnique_id_Input',
    {
        'id': '_str',
    },
    total=True
)

_SystemConfigWhereUnique_key_Input = TypedDict(
    '_SystemConfigWhereUnique_key_Input',
    {
        'key': '_str',
    },
    total=True
)

SystemConfigWhereUniqueInput = Union[
    '_SystemConfigWhereUnique_id_Input',
    '_SystemConfigWhereUnique_key_Input',
]


class SystemConfigUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: _str
    key: _str
    value: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class SystemConfigUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: _str
    key: _str
    value: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


class SystemConfigUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['SystemConfigCreateWithoutRelationsInput']
    connect: List['SystemConfigWhereUniqueInput']
    set: List['SystemConfigWhereUniqueInput']
    disconnect: List['SystemConfigWhereUniqueInput']
    delete: List['SystemConfigWhereUniqueInput']

    # TODO
    # update: List['SystemConfigUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['SystemConfigUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['SystemConfigScalarWhereInput']
    # upsert: List['SystemConfigUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['SystemConfigCreateOrConnectWithoutRelationsInput']


class SystemConfigUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'SystemConfigCreateWithoutRelationsInput'
    connect: 'SystemConfigWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'SystemConfigUpdateInput'
    # upsert: 'SystemConfigUpsertWithoutRelationsInput'
    # connectOrCreate: 'SystemConfigCreateOrConnectWithoutRelationsInput'


class SystemConfigUpsertInput(TypedDict):
    create: 'SystemConfigCreateInput'
    update: 'SystemConfigUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_SystemConfig_id_OrderByInput = TypedDict(
    '_SystemConfig_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_SystemConfig_key_OrderByInput = TypedDict(
    '_SystemConfig_key_OrderByInput',
    {
        'key': 'SortOrder',
    },
    total=True
)

_SystemConfig_value_OrderByInput = TypedDict(
    '_SystemConfig_value_OrderByInput',
    {
        'value': 'SortOrder',
    },
    total=True
)

_SystemConfig_createdAt_OrderByInput = TypedDict(
    '_SystemConfig_createdAt_OrderByInput',
    {
        'createdAt': 'SortOrder',
    },
    total=True
)

_SystemConfig_updatedAt_OrderByInput = TypedDict(
    '_SystemConfig_updatedAt_OrderByInput',
    {
        'updatedAt': 'SortOrder',
    },
    total=True
)

SystemConfigOrderByInput = Union[
    '_SystemConfig_id_OrderByInput',
    '_SystemConfig_key_OrderByInput',
    '_SystemConfig_value_OrderByInput',
    '_SystemConfig_createdAt_OrderByInput',
    '_SystemConfig_updatedAt_OrderByInput',
]



# recursive SystemConfig types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

SystemConfigRelationFilter = TypedDict(
    'SystemConfigRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class SystemConfigListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class SystemConfigInclude(TypedDict, total=False):
    """SystemConfig relational arguments"""


    

class AgentIncludeFromSystemConfig(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromSystemConfigRecursive1']
    tools: Union[bool, 'FindManyToolArgsFromSystemConfigRecursive1']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromSystemConfigRecursive1']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromSystemConfigRecursive1']


class AgentIncludeFromSystemConfigRecursive1(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromSystemConfigRecursive2']
    tools: Union[bool, 'FindManyToolArgsFromSystemConfigRecursive2']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromSystemConfigRecursive2']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromSystemConfigRecursive2']


class AgentIncludeFromSystemConfigRecursive2(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromSystemConfigRecursive3']
    tools: Union[bool, 'FindManyToolArgsFromSystemConfigRecursive3']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromSystemConfigRecursive3']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromSystemConfigRecursive3']


class AgentIncludeFromSystemConfigRecursive3(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    workflows: Union[bool, 'FindManyWorkflowArgsFromSystemConfigRecursive4']
    tools: Union[bool, 'FindManyToolArgsFromSystemConfigRecursive4']
    conversations: Union[bool, 'FindManyConversationSessionArgsFromSystemConfigRecursive4']
    evaluations: Union[bool, 'FindManyEvaluationArgsFromSystemConfigRecursive4']


class AgentIncludeFromSystemConfigRecursive4(TypedDict, total=False):
    """Relational arguments for SystemConfig"""

    

class AgentArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'AgentIncludeFromAgentRecursive1'


class AgentArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'AgentIncludeFromAgentRecursive2'


class AgentArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'AgentIncludeFromAgentRecursive3'


class AgentArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'AgentIncludeFromAgentRecursive4'


class AgentArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    
    

class FindManyAgentArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive1'


class FindManyAgentArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive2'


class FindManyAgentArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive3'


class FindManyAgentArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    include: 'AgentIncludeFromAgentRecursive4'


class FindManyAgentArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['AgentOrderByInput', List['AgentOrderByInput']]
    where: 'AgentWhereInput'
    cursor: 'AgentWhereUniqueInput'
    distinct: List['AgentScalarFieldKeys']
    
    

class WorkflowIncludeFromSystemConfig(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive1']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromSystemConfigRecursive1']


class WorkflowIncludeFromSystemConfigRecursive1(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive2']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromSystemConfigRecursive2']


class WorkflowIncludeFromSystemConfigRecursive2(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive3']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromSystemConfigRecursive3']


class WorkflowIncludeFromSystemConfigRecursive3(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive4']
    executions: Union[bool, 'FindManyWorkflowExecutionArgsFromSystemConfigRecursive4']


class WorkflowIncludeFromSystemConfigRecursive4(TypedDict, total=False):
    """Relational arguments for SystemConfig"""

    

class WorkflowArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class WorkflowArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class WorkflowArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class WorkflowArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class WorkflowArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    
    

class FindManyWorkflowArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive1'


class FindManyWorkflowArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive2'


class FindManyWorkflowArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive3'


class FindManyWorkflowArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    include: 'WorkflowIncludeFromWorkflowRecursive4'


class FindManyWorkflowArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['WorkflowOrderByInput', List['WorkflowOrderByInput']]
    where: 'WorkflowWhereInput'
    cursor: 'WorkflowWhereUniqueInput'
    distinct: List['WorkflowScalarFieldKeys']
    
    

class WorkflowExecutionIncludeFromSystemConfig(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    workflow: Union[bool, 'WorkflowArgsFromSystemConfigRecursive1']


class WorkflowExecutionIncludeFromSystemConfigRecursive1(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    workflow: Union[bool, 'WorkflowArgsFromSystemConfigRecursive2']


class WorkflowExecutionIncludeFromSystemConfigRecursive2(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    workflow: Union[bool, 'WorkflowArgsFromSystemConfigRecursive3']


class WorkflowExecutionIncludeFromSystemConfigRecursive3(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    workflow: Union[bool, 'WorkflowArgsFromSystemConfigRecursive4']


class WorkflowExecutionIncludeFromSystemConfigRecursive4(TypedDict, total=False):
    """Relational arguments for SystemConfig"""

    

class WorkflowExecutionArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class WorkflowExecutionArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class WorkflowExecutionArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class WorkflowExecutionArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class WorkflowExecutionArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    
    

class FindManyWorkflowExecutionArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive1'


class FindManyWorkflowExecutionArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive2'


class FindManyWorkflowExecutionArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive3'


class FindManyWorkflowExecutionArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    include: 'WorkflowExecutionIncludeFromWorkflowExecutionRecursive4'


class FindManyWorkflowExecutionArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['WorkflowExecutionOrderByInput', List['WorkflowExecutionOrderByInput']]
    where: 'WorkflowExecutionWhereInput'
    cursor: 'WorkflowExecutionWhereUniqueInput'
    distinct: List['WorkflowExecutionScalarFieldKeys']
    
    

class ToolIncludeFromSystemConfig(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive1']
    mcpServer: Union[bool, 'MCPServerArgsFromSystemConfigRecursive1']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromSystemConfigRecursive1']


class ToolIncludeFromSystemConfigRecursive1(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive2']
    mcpServer: Union[bool, 'MCPServerArgsFromSystemConfigRecursive2']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromSystemConfigRecursive2']


class ToolIncludeFromSystemConfigRecursive2(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive3']
    mcpServer: Union[bool, 'MCPServerArgsFromSystemConfigRecursive3']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromSystemConfigRecursive3']


class ToolIncludeFromSystemConfigRecursive3(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive4']
    mcpServer: Union[bool, 'MCPServerArgsFromSystemConfigRecursive4']
    invocations: Union[bool, 'FindManyToolInvocationArgsFromSystemConfigRecursive4']


class ToolIncludeFromSystemConfigRecursive4(TypedDict, total=False):
    """Relational arguments for SystemConfig"""

    

class ToolArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'ToolIncludeFromToolRecursive1'


class ToolArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'ToolIncludeFromToolRecursive2'


class ToolArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'ToolIncludeFromToolRecursive3'


class ToolArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'ToolIncludeFromToolRecursive4'


class ToolArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    
    

class FindManyToolArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive1'


class FindManyToolArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive2'


class FindManyToolArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive3'


class FindManyToolArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    include: 'ToolIncludeFromToolRecursive4'


class FindManyToolArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ToolOrderByInput', List['ToolOrderByInput']]
    where: 'ToolWhereInput'
    cursor: 'ToolWhereUniqueInput'
    distinct: List['ToolScalarFieldKeys']
    
    

class ToolInvocationIncludeFromSystemConfig(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    tool: Union[bool, 'ToolArgsFromSystemConfigRecursive1']


class ToolInvocationIncludeFromSystemConfigRecursive1(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    tool: Union[bool, 'ToolArgsFromSystemConfigRecursive2']


class ToolInvocationIncludeFromSystemConfigRecursive2(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    tool: Union[bool, 'ToolArgsFromSystemConfigRecursive3']


class ToolInvocationIncludeFromSystemConfigRecursive3(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    tool: Union[bool, 'ToolArgsFromSystemConfigRecursive4']


class ToolInvocationIncludeFromSystemConfigRecursive4(TypedDict, total=False):
    """Relational arguments for SystemConfig"""

    

class ToolInvocationArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class ToolInvocationArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class ToolInvocationArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class ToolInvocationArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class ToolInvocationArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    
    

class FindManyToolInvocationArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive1'


class FindManyToolInvocationArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive2'


class FindManyToolInvocationArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive3'


class FindManyToolInvocationArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    include: 'ToolInvocationIncludeFromToolInvocationRecursive4'


class FindManyToolInvocationArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ToolInvocationOrderByInput', List['ToolInvocationOrderByInput']]
    where: 'ToolInvocationWhereInput'
    cursor: 'ToolInvocationWhereUniqueInput'
    distinct: List['ToolInvocationScalarFieldKeys']
    
    

class ConversationSessionIncludeFromSystemConfig(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive1']
    messages: Union[bool, 'FindManyMessageArgsFromSystemConfigRecursive1']


class ConversationSessionIncludeFromSystemConfigRecursive1(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive2']
    messages: Union[bool, 'FindManyMessageArgsFromSystemConfigRecursive2']


class ConversationSessionIncludeFromSystemConfigRecursive2(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive3']
    messages: Union[bool, 'FindManyMessageArgsFromSystemConfigRecursive3']


class ConversationSessionIncludeFromSystemConfigRecursive3(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive4']
    messages: Union[bool, 'FindManyMessageArgsFromSystemConfigRecursive4']


class ConversationSessionIncludeFromSystemConfigRecursive4(TypedDict, total=False):
    """Relational arguments for SystemConfig"""

    

class ConversationSessionArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class ConversationSessionArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class ConversationSessionArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class ConversationSessionArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class ConversationSessionArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    
    

class FindManyConversationSessionArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive1'


class FindManyConversationSessionArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive2'


class FindManyConversationSessionArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive3'


class FindManyConversationSessionArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    include: 'ConversationSessionIncludeFromConversationSessionRecursive4'


class FindManyConversationSessionArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['ConversationSessionOrderByInput', List['ConversationSessionOrderByInput']]
    where: 'ConversationSessionWhereInput'
    cursor: 'ConversationSessionWhereUniqueInput'
    distinct: List['ConversationSessionScalarFieldKeys']
    
    

class MessageIncludeFromSystemConfig(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    session: Union[bool, 'ConversationSessionArgsFromSystemConfigRecursive1']


class MessageIncludeFromSystemConfigRecursive1(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    session: Union[bool, 'ConversationSessionArgsFromSystemConfigRecursive2']


class MessageIncludeFromSystemConfigRecursive2(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    session: Union[bool, 'ConversationSessionArgsFromSystemConfigRecursive3']


class MessageIncludeFromSystemConfigRecursive3(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    session: Union[bool, 'ConversationSessionArgsFromSystemConfigRecursive4']


class MessageIncludeFromSystemConfigRecursive4(TypedDict, total=False):
    """Relational arguments for SystemConfig"""

    

class MessageArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'MessageIncludeFromMessageRecursive1'


class MessageArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'MessageIncludeFromMessageRecursive2'


class MessageArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'MessageIncludeFromMessageRecursive3'


class MessageArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'MessageIncludeFromMessageRecursive4'


class MessageArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    
    

class FindManyMessageArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive1'


class FindManyMessageArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive2'


class FindManyMessageArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive3'


class FindManyMessageArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    include: 'MessageIncludeFromMessageRecursive4'


class FindManyMessageArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['MessageOrderByInput', List['MessageOrderByInput']]
    where: 'MessageWhereInput'
    cursor: 'MessageWhereUniqueInput'
    distinct: List['MessageScalarFieldKeys']
    
    

class VectorStoreIncludeFromSystemConfig(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromSystemConfigRecursive1']


class VectorStoreIncludeFromSystemConfigRecursive1(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromSystemConfigRecursive2']


class VectorStoreIncludeFromSystemConfigRecursive2(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromSystemConfigRecursive3']


class VectorStoreIncludeFromSystemConfigRecursive3(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    embeddings: Union[bool, 'FindManyEmbeddingArgsFromSystemConfigRecursive4']


class VectorStoreIncludeFromSystemConfigRecursive4(TypedDict, total=False):
    """Relational arguments for SystemConfig"""

    

class VectorStoreArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class VectorStoreArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class VectorStoreArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class VectorStoreArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class VectorStoreArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    
    

class FindManyVectorStoreArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive1'


class FindManyVectorStoreArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive2'


class FindManyVectorStoreArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive3'


class FindManyVectorStoreArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    include: 'VectorStoreIncludeFromVectorStoreRecursive4'


class FindManyVectorStoreArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['VectorStoreOrderByInput', List['VectorStoreOrderByInput']]
    where: 'VectorStoreWhereInput'
    cursor: 'VectorStoreWhereUniqueInput'
    distinct: List['VectorStoreScalarFieldKeys']
    
    

class EmbeddingIncludeFromSystemConfig(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    vectorStore: Union[bool, 'VectorStoreArgsFromSystemConfigRecursive1']


class EmbeddingIncludeFromSystemConfigRecursive1(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    vectorStore: Union[bool, 'VectorStoreArgsFromSystemConfigRecursive2']


class EmbeddingIncludeFromSystemConfigRecursive2(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    vectorStore: Union[bool, 'VectorStoreArgsFromSystemConfigRecursive3']


class EmbeddingIncludeFromSystemConfigRecursive3(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    vectorStore: Union[bool, 'VectorStoreArgsFromSystemConfigRecursive4']


class EmbeddingIncludeFromSystemConfigRecursive4(TypedDict, total=False):
    """Relational arguments for SystemConfig"""

    

class EmbeddingArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class EmbeddingArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class EmbeddingArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class EmbeddingArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class EmbeddingArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    
    

class FindManyEmbeddingArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive1'


class FindManyEmbeddingArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive2'


class FindManyEmbeddingArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive3'


class FindManyEmbeddingArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    include: 'EmbeddingIncludeFromEmbeddingRecursive4'


class FindManyEmbeddingArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['EmbeddingOrderByInput', List['EmbeddingOrderByInput']]
    where: 'EmbeddingWhereInput'
    cursor: 'EmbeddingWhereUniqueInput'
    distinct: List['EmbeddingScalarFieldKeys']
    
    

class MCPServerIncludeFromSystemConfig(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    tools: Union[bool, 'FindManyToolArgsFromSystemConfigRecursive1']


class MCPServerIncludeFromSystemConfigRecursive1(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    tools: Union[bool, 'FindManyToolArgsFromSystemConfigRecursive2']


class MCPServerIncludeFromSystemConfigRecursive2(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    tools: Union[bool, 'FindManyToolArgsFromSystemConfigRecursive3']


class MCPServerIncludeFromSystemConfigRecursive3(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    tools: Union[bool, 'FindManyToolArgsFromSystemConfigRecursive4']


class MCPServerIncludeFromSystemConfigRecursive4(TypedDict, total=False):
    """Relational arguments for SystemConfig"""

    

class MCPServerArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class MCPServerArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class MCPServerArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class MCPServerArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class MCPServerArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    
    

class FindManyMCPServerArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive1'


class FindManyMCPServerArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive2'


class FindManyMCPServerArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive3'


class FindManyMCPServerArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    include: 'MCPServerIncludeFromMCPServerRecursive4'


class FindManyMCPServerArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['MCPServerOrderByInput', List['MCPServerOrderByInput']]
    where: 'MCPServerWhereInput'
    cursor: 'MCPServerWhereUniqueInput'
    distinct: List['MCPServerScalarFieldKeys']
    
    

class EvaluationIncludeFromSystemConfig(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive1']


class EvaluationIncludeFromSystemConfigRecursive1(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive2']


class EvaluationIncludeFromSystemConfigRecursive2(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive3']


class EvaluationIncludeFromSystemConfigRecursive3(TypedDict, total=False):
    """Relational arguments for SystemConfig"""
    agent: Union[bool, 'AgentArgsFromSystemConfigRecursive4']


class EvaluationIncludeFromSystemConfigRecursive4(TypedDict, total=False):
    """Relational arguments for SystemConfig"""

    

class EvaluationArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class EvaluationArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class EvaluationArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class EvaluationArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class EvaluationArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    
    

class FindManyEvaluationArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive1'


class FindManyEvaluationArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive2'


class FindManyEvaluationArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive3'


class FindManyEvaluationArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    include: 'EvaluationIncludeFromEvaluationRecursive4'


class FindManyEvaluationArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['EvaluationOrderByInput', List['EvaluationOrderByInput']]
    where: 'EvaluationWhereInput'
    cursor: 'EvaluationWhereUniqueInput'
    distinct: List['EvaluationScalarFieldKeys']
    
    

class UserIncludeFromSystemConfig(TypedDict, total=False):
    """Relational arguments for SystemConfig"""


class UserIncludeFromSystemConfigRecursive1(TypedDict, total=False):
    """Relational arguments for SystemConfig"""


class UserIncludeFromSystemConfigRecursive2(TypedDict, total=False):
    """Relational arguments for SystemConfig"""


class UserIncludeFromSystemConfigRecursive3(TypedDict, total=False):
    """Relational arguments for SystemConfig"""


class UserIncludeFromSystemConfigRecursive4(TypedDict, total=False):
    """Relational arguments for SystemConfig"""

    

class UserArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    
    

class FindManyUserArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class SystemConfigIncludeFromSystemConfig(TypedDict, total=False):
    """Relational arguments for SystemConfig"""


class SystemConfigIncludeFromSystemConfigRecursive1(TypedDict, total=False):
    """Relational arguments for SystemConfig"""


class SystemConfigIncludeFromSystemConfigRecursive2(TypedDict, total=False):
    """Relational arguments for SystemConfig"""


class SystemConfigIncludeFromSystemConfigRecursive3(TypedDict, total=False):
    """Relational arguments for SystemConfig"""


class SystemConfigIncludeFromSystemConfigRecursive4(TypedDict, total=False):
    """Relational arguments for SystemConfig"""

    

class SystemConfigArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class SystemConfigArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class SystemConfigArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class SystemConfigArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class SystemConfigArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    
    

class FindManySystemConfigArgsFromSystemConfig(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive1'


class FindManySystemConfigArgsFromSystemConfigRecursive1(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive2'


class FindManySystemConfigArgsFromSystemConfigRecursive2(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive3'


class FindManySystemConfigArgsFromSystemConfigRecursive3(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    include: 'SystemConfigIncludeFromSystemConfigRecursive4'


class FindManySystemConfigArgsFromSystemConfigRecursive4(TypedDict, total=False):
    """Arguments for SystemConfig"""
    take: int
    skip: int
    order_by: Union['SystemConfigOrderByInput', List['SystemConfigOrderByInput']]
    where: 'SystemConfigWhereInput'
    cursor: 'SystemConfigWhereUniqueInput'
    distinct: List['SystemConfigScalarFieldKeys']
    


FindManySystemConfigArgs = FindManySystemConfigArgsFromSystemConfig
FindFirstSystemConfigArgs = FindManySystemConfigArgsFromSystemConfig


    

class SystemConfigWhereInput(TypedDict, total=False):
    """SystemConfig arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    key: Union[_str, 'types.StringFilter']
    value: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['SystemConfigWhereInputRecursive1', List['SystemConfigWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['SystemConfigWhereInputRecursive1']
    OR: List['SystemConfigWhereInputRecursive1']
    NOT: List['SystemConfigWhereInputRecursive1']


class SystemConfigWhereInputRecursive1(TypedDict, total=False):
    """SystemConfig arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    key: Union[_str, 'types.StringFilter']
    value: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['SystemConfigWhereInputRecursive2', List['SystemConfigWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['SystemConfigWhereInputRecursive2']
    OR: List['SystemConfigWhereInputRecursive2']
    NOT: List['SystemConfigWhereInputRecursive2']


class SystemConfigWhereInputRecursive2(TypedDict, total=False):
    """SystemConfig arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    key: Union[_str, 'types.StringFilter']
    value: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['SystemConfigWhereInputRecursive3', List['SystemConfigWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['SystemConfigWhereInputRecursive3']
    OR: List['SystemConfigWhereInputRecursive3']
    NOT: List['SystemConfigWhereInputRecursive3']


class SystemConfigWhereInputRecursive3(TypedDict, total=False):
    """SystemConfig arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    key: Union[_str, 'types.StringFilter']
    value: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']

    # should be noted that AND and NOT should be Union['SystemConfigWhereInputRecursive4', List['SystemConfigWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['SystemConfigWhereInputRecursive4']
    OR: List['SystemConfigWhereInputRecursive4']
    NOT: List['SystemConfigWhereInputRecursive4']


class SystemConfigWhereInputRecursive4(TypedDict, total=False):
    """SystemConfig arguments for searching"""
    id: Union[_str, 'types.StringFilter']
    key: Union[_str, 'types.StringFilter']
    value: Union['fields.Json', 'types.JsonFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeFilter']



# aggregate SystemConfig types


    

class SystemConfigScalarWhereWithAggregatesInput(TypedDict, total=False):
    """SystemConfig arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    key: Union[_str, 'types.StringWithAggregatesFilter']
    value: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SystemConfigScalarWhereWithAggregatesInputRecursive1']
    OR: List['SystemConfigScalarWhereWithAggregatesInputRecursive1']
    NOT: List['SystemConfigScalarWhereWithAggregatesInputRecursive1']


class SystemConfigScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """SystemConfig arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    key: Union[_str, 'types.StringWithAggregatesFilter']
    value: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SystemConfigScalarWhereWithAggregatesInputRecursive2']
    OR: List['SystemConfigScalarWhereWithAggregatesInputRecursive2']
    NOT: List['SystemConfigScalarWhereWithAggregatesInputRecursive2']


class SystemConfigScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """SystemConfig arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    key: Union[_str, 'types.StringWithAggregatesFilter']
    value: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SystemConfigScalarWhereWithAggregatesInputRecursive3']
    OR: List['SystemConfigScalarWhereWithAggregatesInputRecursive3']
    NOT: List['SystemConfigScalarWhereWithAggregatesInputRecursive3']


class SystemConfigScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """SystemConfig arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    key: Union[_str, 'types.StringWithAggregatesFilter']
    value: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['SystemConfigScalarWhereWithAggregatesInputRecursive4']
    OR: List['SystemConfigScalarWhereWithAggregatesInputRecursive4']
    NOT: List['SystemConfigScalarWhereWithAggregatesInputRecursive4']


class SystemConfigScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """SystemConfig arguments for searching"""
    id: Union[_str, 'types.StringWithAggregatesFilter']
    key: Union[_str, 'types.StringWithAggregatesFilter']
    value: Union['fields.Json', 'types.JsonWithAggregatesFilter']
    createdAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    updatedAt: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class SystemConfigGroupByOutput(TypedDict, total=False):
    id: _str
    key: _str
    value: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime
    _sum: 'SystemConfigSumAggregateOutput'
    _avg: 'SystemConfigAvgAggregateOutput'
    _min: 'SystemConfigMinAggregateOutput'
    _max: 'SystemConfigMaxAggregateOutput'
    _count: 'SystemConfigCountAggregateOutput'


class SystemConfigAvgAggregateOutput(TypedDict, total=False):
    """SystemConfig output for aggregating averages"""


class SystemConfigSumAggregateOutput(TypedDict, total=False):
    """SystemConfig output for aggregating sums"""


class SystemConfigScalarAggregateOutput(TypedDict, total=False):
    """SystemConfig output including scalar fields"""
    id: _str
    key: _str
    value: 'fields.Json'
    createdAt: datetime.datetime
    updatedAt: datetime.datetime


SystemConfigMinAggregateOutput = SystemConfigScalarAggregateOutput
SystemConfigMaxAggregateOutput = SystemConfigScalarAggregateOutput


class SystemConfigMaxAggregateInput(TypedDict, total=False):
    """SystemConfig input for aggregating by max"""
    id: bool
    key: bool
    value: bool
    createdAt: bool
    updatedAt: bool


class SystemConfigMinAggregateInput(TypedDict, total=False):
    """SystemConfig input for aggregating by min"""
    id: bool
    key: bool
    value: bool
    createdAt: bool
    updatedAt: bool


class SystemConfigNumberAggregateInput(TypedDict, total=False):
    """SystemConfig input for aggregating numbers"""


SystemConfigAvgAggregateInput = SystemConfigNumberAggregateInput
SystemConfigSumAggregateInput = SystemConfigNumberAggregateInput


SystemConfigCountAggregateInput = TypedDict(
    'SystemConfigCountAggregateInput',
    {
        'id': bool,
        'key': bool,
        'value': bool,
        'createdAt': bool,
        'updatedAt': bool,
        '_all': bool,
    },
    total=False,
)

SystemConfigCountAggregateOutput = TypedDict(
    'SystemConfigCountAggregateOutput',
    {
        'id': int,
        'key': int,
        'value': int,
        'createdAt': int,
        'updatedAt': int,
        '_all': int,
    },
    total=False,
)


SystemConfigKeys = Literal[
    'id',
    'key',
    'value',
    'createdAt',
    'updatedAt',
]
SystemConfigScalarFieldKeys = Literal[
    'id',
    'key',
    'value',
    'createdAt',
    'updatedAt',
]
SystemConfigScalarFieldKeysT = TypeVar('SystemConfigScalarFieldKeysT', bound=SystemConfigScalarFieldKeys)

SystemConfigRelationalFieldKeys = _NoneType



# we have to import ourselves as types can be namespaced to types
from . import types, enums, models, fields